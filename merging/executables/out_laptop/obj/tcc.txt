../executables/out_laptop/merge-tcc-bench.exe:     file format elf64-x86-64


Disassembly of section .text:

0000000000400780 <seq_merge_sort-0x35>:
  400780:	f3 0f 1e fa          	endbr64 
  400784:	31 ed                	xor    %ebp,%ebp
  400786:	49 89 d1             	mov    %rdx,%r9
  400789:	5e                   	pop    %rsi
  40078a:	48 89 e2             	mov    %rsp,%rdx
  40078d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400791:	50                   	push   %rax
  400792:	54                   	push   %rsp
  400793:	4c 8b 05 96 18 20 00 	mov    0x201896(%rip),%r8        # 602030 <printf@plt+0x2000f8>
  40079a:	48 8b 0d 97 18 20 00 	mov    0x201897(%rip),%rcx        # 602038 <printf@plt+0x200100>
  4007a1:	48 8b 3d 98 18 20 00 	mov    0x201898(%rip),%rdi        # 602040 <printf@plt+0x200108>
  4007a8:	ff 15 9a 18 20 00    	callq  *0x20189a(%rip)        # 602048 <printf@plt+0x200110>
  4007ae:	f4                   	hlt    
  4007af:	90                   	nop
  4007b0:	f3 0f 1e fa          	endbr64 
  4007b4:	c3                   	retq   

00000000004007b5 <seq_merge_sort>:
  4007b5:	55                   	push   %rbp
  4007b6:	48 89 e5             	mov    %rsp,%rbp
  4007b9:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
  4007c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4007c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4007c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4007cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4007d0:	48 83 f8 01          	cmp    $0x1,%rax
  4007d4:	0f 87 05 00 00 00    	ja     4007df <seq_merge_sort+0x2a>
  4007da:	e9 c2 03 00 00       	jmpq   400ba1 <seq_merge_sort+0x3ec>
  4007df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4007e3:	48 c1 e8 01          	shr    $0x1,%rax
  4007e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4007eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4007ef:	48 c1 e0 03          	shl    $0x3,%rax
  4007f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4007f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4007fb:	48 89 c7             	mov    %rax,%rdi
  4007fe:	e8 45 16 00 00       	callq  401e48 <malloc@plt>
  400803:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  400807:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40080b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40080f:	48 c1 e1 03          	shl    $0x3,%rcx
  400813:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  400817:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  40081b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40081f:	49 89 c2             	mov    %rax,%r10
  400822:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400826:	48 8b 00             	mov    (%rax),%rax
  400829:	48 89 c6             	mov    %rax,%rsi
  40082c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400830:	48 89 c7             	mov    %rax,%rdi
  400833:	4c 89 d2             	mov    %r10,%rdx
  400836:	e8 1d 16 00 00       	callq  401e58 <memcpy@plt>
  40083b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40083f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400843:	48 29 c8             	sub    %rcx,%rax
  400846:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40084a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40084e:	48 c1 e0 03          	shl    $0x3,%rax
  400852:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  400856:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40085a:	48 89 c7             	mov    %rax,%rdi
  40085d:	e8 e6 15 00 00       	callq  401e48 <malloc@plt>
  400862:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  400866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40086a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40086e:	48 c1 e1 03          	shl    $0x3,%rcx
  400872:	48 8b 10             	mov    (%rax),%rdx
  400875:	48 01 ca             	add    %rcx,%rdx
  400878:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40087c:	48 c1 e0 03          	shl    $0x3,%rax
  400880:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  400884:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  400888:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40088c:	49 89 c2             	mov    %rax,%r10
  40088f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  400893:	48 89 c6             	mov    %rax,%rsi
  400896:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40089a:	48 89 c7             	mov    %rax,%rdi
  40089d:	4c 89 d2             	mov    %r10,%rdx
  4008a0:	e8 b3 15 00 00       	callq  401e58 <memcpy@plt>
  4008a5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4008a8:	83 f8 00             	cmp    $0x0,%eax
  4008ab:	0f 84 17 00 00 00    	je     4008c8 <seq_merge_sort+0x113>
  4008b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008b5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  4008b9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4008bd:	48 8b 00             	mov    (%rax),%rax
  4008c0:	48 89 c7             	mov    %rax,%rdi
  4008c3:	e8 a0 15 00 00       	callq  401e68 <free@plt>
  4008c8:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4008cb:	49 89 c2             	mov    %rax,%r10
  4008ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4008d2:	48 89 c6             	mov    %rax,%rsi
  4008d5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  4008d9:	48 89 c7             	mov    %rax,%rdi
  4008dc:	4c 89 d2             	mov    %r10,%rdx
  4008df:	e8 94 15 00 00       	callq  401e78 <seq_merge_sort@plt>
  4008e4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4008e7:	49 89 c2             	mov    %rax,%r10
  4008ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4008ee:	48 89 c6             	mov    %rax,%rsi
  4008f1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4008f5:	48 89 c7             	mov    %rax,%rdi
  4008f8:	4c 89 d2             	mov    %r10,%rdx
  4008fb:	e8 78 15 00 00       	callq  401e78 <seq_merge_sort@plt>
  400900:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400903:	83 f8 00             	cmp    $0x0,%eax
  400906:	0f 84 27 00 00 00    	je     400933 <seq_merge_sort+0x17e>
  40090c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400910:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  400914:	48 c1 e1 03          	shl    $0x3,%rcx
  400918:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  40091c:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  400920:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  400924:	48 89 c7             	mov    %rax,%rdi
  400927:	e8 1c 15 00 00       	callq  401e48 <malloc@plt>
  40092c:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  400930:	48 89 01             	mov    %rax,(%rcx)
  400933:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40093a:	00 00 00 
  40093d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  400944:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40094b:	00 00 00 
  40094e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  400955:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40095c:	00 00 00 
  40095f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  400966:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40096d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400971:	48 39 c8             	cmp    %rcx,%rax
  400974:	0f 83 ff 00 00 00    	jae    400a79 <seq_merge_sort+0x2c4>
  40097a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  400981:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  400985:	48 39 c8             	cmp    %rcx,%rax
  400988:	0f 83 eb 00 00 00    	jae    400a79 <seq_merge_sort+0x2c4>
  40098e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  400995:	48 c1 e0 03          	shl    $0x3,%rax
  400999:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40099d:	48 01 c1             	add    %rax,%rcx
  4009a0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4009a7:	48 c1 e0 03          	shl    $0x3,%rax
  4009ab:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4009af:	48 01 c2             	add    %rax,%rdx
  4009b2:	48 8b 01             	mov    (%rcx),%rax
  4009b5:	48 8b 0a             	mov    (%rdx),%rcx
  4009b8:	48 39 c8             	cmp    %rcx,%rax
  4009bb:	0f 83 5c 00 00 00    	jae    400a1d <seq_merge_sort+0x268>
  4009c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4009c5:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  4009cc:	48 c1 e1 03          	shl    $0x3,%rcx
  4009d0:	48 8b 10             	mov    (%rax),%rdx
  4009d3:	48 01 ca             	add    %rcx,%rdx
  4009d6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4009dd:	48 c1 e0 03          	shl    $0x3,%rax
  4009e1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4009e5:	48 01 c1             	add    %rax,%rcx
  4009e8:	48 8b 01             	mov    (%rcx),%rax
  4009eb:	48 89 02             	mov    %rax,(%rdx)
  4009ee:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4009f5:	48 89 c1             	mov    %rax,%rcx
  4009f8:	48 83 c0 01          	add    $0x1,%rax
  4009fc:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  400a03:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  400a0a:	48 89 c1             	mov    %rax,%rcx
  400a0d:	48 83 c0 01          	add    $0x1,%rax
  400a11:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  400a18:	e9 57 00 00 00       	jmpq   400a74 <seq_merge_sort+0x2bf>
  400a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400a21:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  400a28:	48 c1 e1 03          	shl    $0x3,%rcx
  400a2c:	48 8b 10             	mov    (%rax),%rdx
  400a2f:	48 01 ca             	add    %rcx,%rdx
  400a32:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  400a39:	48 c1 e0 03          	shl    $0x3,%rax
  400a3d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  400a41:	48 01 c1             	add    %rax,%rcx
  400a44:	48 8b 01             	mov    (%rcx),%rax
  400a47:	48 89 02             	mov    %rax,(%rdx)
  400a4a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  400a51:	48 89 c1             	mov    %rax,%rcx
  400a54:	48 83 c0 01          	add    $0x1,%rax
  400a58:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  400a5f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  400a66:	48 89 c1             	mov    %rax,%rcx
  400a69:	48 83 c0 01          	add    $0x1,%rax
  400a6d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  400a74:	e9 ed fe ff ff       	jmpq   400966 <seq_merge_sort+0x1b1>
  400a79:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  400a80:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400a84:	48 39 c8             	cmp    %rcx,%rax
  400a87:	0f 83 74 00 00 00    	jae    400b01 <seq_merge_sort+0x34c>
  400a8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400a91:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  400a98:	48 c1 e1 03          	shl    $0x3,%rcx
  400a9c:	48 8b 10             	mov    (%rax),%rdx
  400a9f:	48 01 ca             	add    %rcx,%rdx
  400aa2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  400aa9:	48 c1 e0 03          	shl    $0x3,%rax
  400aad:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  400ab1:	48 01 c1             	add    %rax,%rcx
  400ab4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400ab8:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  400abf:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  400ac6:	48 29 d0             	sub    %rdx,%rax
  400ac9:	48 c1 e0 03          	shl    $0x3,%rax
  400acd:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  400ad4:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  400adb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  400ae2:	49 89 c2             	mov    %rax,%r10
  400ae5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  400aec:	48 89 c6             	mov    %rax,%rsi
  400aef:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  400af6:	48 89 c7             	mov    %rax,%rdi
  400af9:	4c 89 d2             	mov    %r10,%rdx
  400afc:	e8 57 13 00 00       	callq  401e58 <memcpy@plt>
  400b01:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  400b08:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  400b0c:	48 39 c8             	cmp    %rcx,%rax
  400b0f:	0f 83 74 00 00 00    	jae    400b89 <seq_merge_sort+0x3d4>
  400b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400b19:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  400b20:	48 c1 e1 03          	shl    $0x3,%rcx
  400b24:	48 8b 10             	mov    (%rax),%rdx
  400b27:	48 01 ca             	add    %rcx,%rdx
  400b2a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  400b31:	48 c1 e0 03          	shl    $0x3,%rax
  400b35:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  400b39:	48 01 c1             	add    %rax,%rcx
  400b3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  400b40:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  400b47:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  400b4e:	48 29 d0             	sub    %rdx,%rax
  400b51:	48 c1 e0 03          	shl    $0x3,%rax
  400b55:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  400b5c:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  400b63:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  400b6a:	49 89 c2             	mov    %rax,%r10
  400b6d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  400b74:	48 89 c6             	mov    %rax,%rsi
  400b77:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  400b7e:	48 89 c7             	mov    %rax,%rdi
  400b81:	4c 89 d2             	mov    %r10,%rdx
  400b84:	e8 cf 12 00 00       	callq  401e58 <memcpy@plt>
  400b89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400b8d:	48 89 c7             	mov    %rax,%rdi
  400b90:	e8 d3 12 00 00       	callq  401e68 <free@plt>
  400b95:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  400b99:	48 89 c7             	mov    %rax,%rdi
  400b9c:	e8 c7 12 00 00       	callq  401e68 <free@plt>
  400ba1:	c9                   	leaveq 
  400ba2:	c3                   	retq   

0000000000400ba3 <proxy_args>:
  400ba3:	55                   	push   %rbp
  400ba4:	48 89 e5             	mov    %rsp,%rbp
  400ba7:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
  400bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400bb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400bb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  400bba:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  400bbe:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  400bc2:	48 b8 19 00 00 00 00 	movabs $0x19,%rax
  400bc9:	00 00 00 
  400bcc:	48 89 c7             	mov    %rax,%rdi
  400bcf:	e8 74 12 00 00       	callq  401e48 <malloc@plt>
  400bd4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  400bd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400bdc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  400be0:	48 89 08             	mov    %rcx,(%rax)
  400be3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400be7:	48 83 c0 08          	add    $0x8,%rax
  400beb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  400bef:	48 89 08             	mov    %rcx,(%rax)
  400bf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400bf6:	48 83 c0 10          	add    $0x10,%rax
  400bfa:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  400bfd:	89 08                	mov    %ecx,(%rax)
  400bff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c03:	48 83 c0 14          	add    $0x14,%rax
  400c07:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  400c0a:	89 08                	mov    %ecx,(%rax)
  400c0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c10:	48 83 c0 18          	add    $0x18,%rax
  400c14:	0f be 4d d8          	movsbl -0x28(%rbp),%ecx
  400c18:	88 08                	mov    %cl,(%rax)
  400c1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c1e:	c9                   	leaveq 
  400c1f:	c3                   	retq   

0000000000400c20 <par_merge_sort>:
  400c20:	55                   	push   %rbp
  400c21:	48 89 e5             	mov    %rsp,%rbp
  400c24:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  400c2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c33:	48 8b 08             	mov    (%rax),%rcx
  400c36:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  400c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c3e:	48 83 c0 08          	add    $0x8,%rax
  400c42:	48 8b 08             	mov    (%rax),%rcx
  400c45:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  400c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c4d:	48 83 c0 10          	add    $0x10,%rax
  400c51:	8b 08                	mov    (%rax),%ecx
  400c53:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  400c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c5a:	48 83 c0 14          	add    $0x14,%rax
  400c5e:	8b 08                	mov    (%rax),%ecx
  400c60:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  400c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c67:	48 83 c0 18          	add    $0x18,%rax
  400c6b:	0f be 08             	movsbl (%rax),%ecx
  400c6e:	88 4d df             	mov    %cl,-0x21(%rbp)
  400c71:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400c74:	83 f8 00             	cmp    $0x0,%eax
  400c77:	0f 84 05 00 00 00    	je     400c82 <par_merge_sort+0x62>
  400c7d:	e9 38 00 00 00       	jmpq   400cba <par_merge_sort+0x9a>
  400c82:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400c86:	49 89 c2             	mov    %rax,%r10
  400c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400c8d:	48 89 c6             	mov    %rax,%rsi
  400c90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400c94:	48 89 c7             	mov    %rax,%rdi
  400c97:	4c 89 d2             	mov    %r10,%rdx
  400c9a:	e8 d9 11 00 00       	callq  401e78 <seq_merge_sort@plt>
  400c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400ca3:	48 89 c7             	mov    %rax,%rdi
  400ca6:	e8 bd 11 00 00       	callq  401e68 <free@plt>
  400cab:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400cb2:	00 00 00 
  400cb5:	e9 f5 04 00 00       	jmpq   4011af <par_merge_sort+0x58f>
  400cba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400cbe:	48 83 f8 01          	cmp    $0x1,%rax
  400cc2:	0f 87 0f 00 00 00    	ja     400cd7 <par_merge_sort+0xb7>
  400cc8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400ccf:	00 00 00 
  400cd2:	e9 d8 04 00 00       	jmpq   4011af <par_merge_sort+0x58f>
  400cd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400cdb:	48 c1 e8 01          	shr    $0x1,%rax
  400cdf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  400ce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400ce7:	48 c1 e0 03          	shl    $0x3,%rax
  400ceb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  400cef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  400cf3:	48 89 c7             	mov    %rax,%rdi
  400cf6:	e8 4d 11 00 00       	callq  401e48 <malloc@plt>
  400cfb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  400cff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400d03:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400d07:	48 c1 e1 03          	shl    $0x3,%rcx
  400d0b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  400d0f:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  400d13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  400d17:	49 89 c2             	mov    %rax,%r10
  400d1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  400d1e:	48 8b 00             	mov    (%rax),%rax
  400d21:	48 89 c6             	mov    %rax,%rsi
  400d24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400d28:	48 89 c7             	mov    %rax,%rdi
  400d2b:	4c 89 d2             	mov    %r10,%rdx
  400d2e:	e8 25 11 00 00       	callq  401e58 <memcpy@plt>
  400d33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400d37:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400d3b:	48 29 c8             	sub    %rcx,%rax
  400d3e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  400d42:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  400d46:	48 c1 e0 03          	shl    $0x3,%rax
  400d4a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  400d4e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  400d52:	48 89 c7             	mov    %rax,%rdi
  400d55:	e8 ee 10 00 00       	callq  401e48 <malloc@plt>
  400d5a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  400d5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400d62:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400d66:	48 c1 e1 03          	shl    $0x3,%rcx
  400d6a:	48 8b 10             	mov    (%rax),%rdx
  400d6d:	48 01 ca             	add    %rcx,%rdx
  400d70:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  400d74:	48 c1 e0 03          	shl    $0x3,%rax
  400d78:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
  400d7c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  400d80:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  400d84:	49 89 c2             	mov    %rax,%r10
  400d87:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  400d8b:	48 89 c6             	mov    %rax,%rsi
  400d8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  400d92:	48 89 c7             	mov    %rax,%rdi
  400d95:	4c 89 d2             	mov    %r10,%rdx
  400d98:	e8 bb 10 00 00       	callq  401e58 <memcpy@plt>
  400d9d:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400da1:	83 f8 00             	cmp    $0x0,%eax
  400da4:	0f 84 17 00 00 00    	je     400dc1 <par_merge_sort+0x1a1>
  400daa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400dae:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  400db2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  400db6:	48 8b 00             	mov    (%rax),%rax
  400db9:	48 89 c7             	mov    %rax,%rdi
  400dbc:	e8 a7 10 00 00       	callq  401e68 <free@plt>
  400dc1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400dc4:	83 e8 01             	sub    $0x1,%eax
  400dc7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  400dce:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400dd2:	49 89 c0             	mov    %rax,%r8
  400dd5:	8b 45 e0             	mov    -0x20(%rbp),%eax
  400dd8:	49 89 c3             	mov    %rax,%r11
  400ddb:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  400de1:	49 89 c2             	mov    %rax,%r10
  400de4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400de8:	48 89 c6             	mov    %rax,%rsi
  400deb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  400def:	48 89 c7             	mov    %rax,%rdi
  400df2:	4c 89 d2             	mov    %r10,%rdx
  400df5:	4c 89 d9             	mov    %r11,%rcx
  400df8:	e8 8b 10 00 00       	callq  401e88 <proxy_args@plt>
  400dfd:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  400e04:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  400e0b:	49 89 c3             	mov    %rax,%r11
  400e0e:	48 8b 05 63 12 20 00 	mov    0x201263(%rip),%rax        # 602078 <printf@plt+0x200140>
  400e15:	49 89 c2             	mov    %rax,%r10
  400e18:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400e1f:	00 00 00 
  400e22:	48 89 c6             	mov    %rax,%rsi
  400e25:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
  400e2c:	48 89 c7             	mov    %rax,%rdi
  400e2f:	4c 89 d2             	mov    %r10,%rdx
  400e32:	4c 89 d9             	mov    %r11,%rcx
  400e35:	e8 5e 10 00 00       	callq  401e98 <pthread_create@plt>
  400e3a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400e3d:	83 e8 01             	sub    $0x1,%eax
  400e40:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  400e47:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400e4b:	49 89 c0             	mov    %rax,%r8
  400e4e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  400e51:	49 89 c3             	mov    %rax,%r11
  400e54:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
  400e5a:	49 89 c2             	mov    %rax,%r10
  400e5d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  400e61:	48 89 c6             	mov    %rax,%rsi
  400e64:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  400e68:	48 89 c7             	mov    %rax,%rdi
  400e6b:	4c 89 d2             	mov    %r10,%rdx
  400e6e:	4c 89 d9             	mov    %r11,%rcx
  400e71:	e8 12 10 00 00       	callq  401e88 <proxy_args@plt>
  400e76:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  400e7d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  400e84:	49 89 c3             	mov    %rax,%r11
  400e87:	48 8b 05 ea 11 20 00 	mov    0x2011ea(%rip),%rax        # 602078 <printf@plt+0x200140>
  400e8e:	49 89 c2             	mov    %rax,%r10
  400e91:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400e98:	00 00 00 
  400e9b:	48 89 c6             	mov    %rax,%rsi
  400e9e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  400ea5:	48 89 c7             	mov    %rax,%rdi
  400ea8:	4c 89 d2             	mov    %r10,%rdx
  400eab:	4c 89 d9             	mov    %r11,%rcx
  400eae:	e8 e5 0f 00 00       	callq  401e98 <pthread_create@plt>
  400eb3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400eba:	00 00 00 
  400ebd:	48 89 c6             	mov    %rax,%rsi
  400ec0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  400ec7:	48 89 c7             	mov    %rax,%rdi
  400eca:	e8 d9 0f 00 00       	callq  401ea8 <pthread_join@plt>
  400ecf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400ed6:	00 00 00 
  400ed9:	48 89 c6             	mov    %rax,%rsi
  400edc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  400ee3:	48 89 c7             	mov    %rax,%rdi
  400ee6:	e8 bd 0f 00 00       	callq  401ea8 <pthread_join@plt>
  400eeb:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400eef:	83 f8 00             	cmp    $0x0,%eax
  400ef2:	0f 84 33 00 00 00    	je     400f2b <par_merge_sort+0x30b>
  400ef8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400efc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  400f00:	48 c1 e1 03          	shl    $0x3,%rcx
  400f04:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  400f0b:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
  400f12:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  400f19:	48 89 c7             	mov    %rax,%rdi
  400f1c:	e8 27 0f 00 00       	callq  401e48 <malloc@plt>
  400f21:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  400f28:	48 89 01             	mov    %rax,(%rcx)
  400f2b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400f32:	00 00 00 
  400f35:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  400f3c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400f43:	00 00 00 
  400f46:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  400f4d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  400f54:	00 00 00 
  400f57:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  400f5e:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  400f65:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400f69:	48 39 c8             	cmp    %rcx,%rax
  400f6c:	0f 83 ff 00 00 00    	jae    401071 <par_merge_sort+0x451>
  400f72:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  400f79:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  400f7d:	48 39 c8             	cmp    %rcx,%rax
  400f80:	0f 83 eb 00 00 00    	jae    401071 <par_merge_sort+0x451>
  400f86:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  400f8d:	48 c1 e0 03          	shl    $0x3,%rax
  400f91:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  400f95:	48 01 c1             	add    %rax,%rcx
  400f98:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  400f9f:	48 c1 e0 03          	shl    $0x3,%rax
  400fa3:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  400fa7:	48 01 c2             	add    %rax,%rdx
  400faa:	48 8b 01             	mov    (%rcx),%rax
  400fad:	48 8b 0a             	mov    (%rdx),%rcx
  400fb0:	48 39 c8             	cmp    %rcx,%rax
  400fb3:	0f 83 5c 00 00 00    	jae    401015 <par_merge_sort+0x3f5>
  400fb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fbd:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  400fc4:	48 c1 e1 03          	shl    $0x3,%rcx
  400fc8:	48 8b 10             	mov    (%rax),%rdx
  400fcb:	48 01 ca             	add    %rcx,%rdx
  400fce:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  400fd5:	48 c1 e0 03          	shl    $0x3,%rax
  400fd9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  400fdd:	48 01 c1             	add    %rax,%rcx
  400fe0:	48 8b 01             	mov    (%rcx),%rax
  400fe3:	48 89 02             	mov    %rax,(%rdx)
  400fe6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  400fed:	48 89 c1             	mov    %rax,%rcx
  400ff0:	48 83 c0 01          	add    $0x1,%rax
  400ff4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  400ffb:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  401002:	48 89 c1             	mov    %rax,%rcx
  401005:	48 83 c0 01          	add    $0x1,%rax
  401009:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  401010:	e9 57 00 00 00       	jmpq   40106c <par_merge_sort+0x44c>
  401015:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401019:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  401020:	48 c1 e1 03          	shl    $0x3,%rcx
  401024:	48 8b 10             	mov    (%rax),%rdx
  401027:	48 01 ca             	add    %rcx,%rdx
  40102a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  401031:	48 c1 e0 03          	shl    $0x3,%rax
  401035:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  401039:	48 01 c1             	add    %rax,%rcx
  40103c:	48 8b 01             	mov    (%rcx),%rax
  40103f:	48 89 02             	mov    %rax,(%rdx)
  401042:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  401049:	48 89 c1             	mov    %rax,%rcx
  40104c:	48 83 c0 01          	add    $0x1,%rax
  401050:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  401057:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  40105e:	48 89 c1             	mov    %rax,%rcx
  401061:	48 83 c0 01          	add    $0x1,%rax
  401065:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  40106c:	e9 ed fe ff ff       	jmpq   400f5e <par_merge_sort+0x33e>
  401071:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  401078:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40107c:	48 39 c8             	cmp    %rcx,%rax
  40107f:	0f 83 74 00 00 00    	jae    4010f9 <par_merge_sort+0x4d9>
  401085:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401089:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  401090:	48 c1 e1 03          	shl    $0x3,%rcx
  401094:	48 8b 10             	mov    (%rax),%rdx
  401097:	48 01 ca             	add    %rcx,%rdx
  40109a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  4010a1:	48 c1 e0 03          	shl    $0x3,%rax
  4010a5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4010a9:	48 01 c1             	add    %rax,%rcx
  4010ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4010b0:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
  4010b7:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  4010be:	48 29 d0             	sub    %rdx,%rax
  4010c1:	48 c1 e0 03          	shl    $0x3,%rax
  4010c5:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
  4010cc:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  4010d3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4010da:	49 89 c2             	mov    %rax,%r10
  4010dd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4010e4:	48 89 c6             	mov    %rax,%rsi
  4010e7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  4010ee:	48 89 c7             	mov    %rax,%rdi
  4010f1:	4c 89 d2             	mov    %r10,%rdx
  4010f4:	e8 5f 0d 00 00       	callq  401e58 <memcpy@plt>
  4010f9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  401100:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  401104:	48 39 c8             	cmp    %rcx,%rax
  401107:	0f 83 74 00 00 00    	jae    401181 <par_merge_sort+0x561>
  40110d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401111:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  401118:	48 c1 e1 03          	shl    $0x3,%rcx
  40111c:	48 8b 10             	mov    (%rax),%rdx
  40111f:	48 01 ca             	add    %rcx,%rdx
  401122:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  401129:	48 c1 e0 03          	shl    $0x3,%rax
  40112d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  401131:	48 01 c1             	add    %rax,%rcx
  401134:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  401138:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  40113f:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  401146:	48 29 d0             	sub    %rdx,%rax
  401149:	48 c1 e0 03          	shl    $0x3,%rax
  40114d:	48 89 8d 00 ff ff ff 	mov    %rcx,-0x100(%rbp)
  401154:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  40115b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  401162:	49 89 c2             	mov    %rax,%r10
  401165:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  40116c:	48 89 c6             	mov    %rax,%rsi
  40116f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  401176:	48 89 c7             	mov    %rax,%rdi
  401179:	4c 89 d2             	mov    %r10,%rdx
  40117c:	e8 d7 0c 00 00       	callq  401e58 <memcpy@plt>
  401181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401185:	48 89 c7             	mov    %rax,%rdi
  401188:	e8 db 0c 00 00       	callq  401e68 <free@plt>
  40118d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401191:	48 89 c7             	mov    %rax,%rdi
  401194:	e8 cf 0c 00 00       	callq  401e68 <free@plt>
  401199:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40119d:	48 89 c7             	mov    %rax,%rdi
  4011a0:	e8 c3 0c 00 00       	callq  401e68 <free@plt>
  4011a5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4011ac:	00 00 00 
  4011af:	c9                   	leaveq 
  4011b0:	c3                   	retq   

00000000004011b1 <better_par_merge_sort>:
  4011b1:	55                   	push   %rbp
  4011b2:	48 89 e5             	mov    %rsp,%rbp
  4011b5:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  4011bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4011c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011c4:	48 8b 08             	mov    (%rax),%rcx
  4011c7:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  4011cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011cf:	48 83 c0 08          	add    $0x8,%rax
  4011d3:	48 8b 08             	mov    (%rax),%rcx
  4011d6:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  4011da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011de:	48 83 c0 10          	add    $0x10,%rax
  4011e2:	8b 08                	mov    (%rax),%ecx
  4011e4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4011e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011eb:	48 83 c0 14          	add    $0x14,%rax
  4011ef:	8b 08                	mov    (%rax),%ecx
  4011f1:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  4011f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011f8:	48 83 c0 18          	add    $0x18,%rax
  4011fc:	0f be 08             	movsbl (%rax),%ecx
  4011ff:	88 4d df             	mov    %cl,-0x21(%rbp)
  401202:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401205:	83 f8 00             	cmp    $0x0,%eax
  401208:	0f 84 05 00 00 00    	je     401213 <better_par_merge_sort+0x62>
  40120e:	e9 38 00 00 00       	jmpq   40124b <better_par_merge_sort+0x9a>
  401213:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  401217:	49 89 c2             	mov    %rax,%r10
  40121a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40121e:	48 89 c6             	mov    %rax,%rsi
  401221:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401225:	48 89 c7             	mov    %rax,%rdi
  401228:	4c 89 d2             	mov    %r10,%rdx
  40122b:	e8 48 0c 00 00       	callq  401e78 <seq_merge_sort@plt>
  401230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401234:	48 89 c7             	mov    %rax,%rdi
  401237:	e8 2c 0c 00 00       	callq  401e68 <free@plt>
  40123c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  401243:	00 00 00 
  401246:	e9 ab 07 00 00       	jmpq   4019f6 <better_par_merge_sort+0x845>
  40124b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40124f:	48 83 f8 01          	cmp    $0x1,%rax
  401253:	0f 87 0f 00 00 00    	ja     401268 <better_par_merge_sort+0xb7>
  401259:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  401260:	00 00 00 
  401263:	e9 8e 07 00 00       	jmpq   4019f6 <better_par_merge_sort+0x845>
  401268:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40126b:	48 63 c0             	movslq %eax,%rax
  40126e:	48 c1 e0 03          	shl    $0x3,%rax
  401272:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  401276:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40127a:	48 89 c7             	mov    %rax,%rdi
  40127d:	e8 c6 0b 00 00       	callq  401e48 <malloc@plt>
  401282:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  401286:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40128d:	00 00 00 
  401290:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401294:	b8 00 00 00 00       	mov    $0x0,%eax
  401299:	89 45 bc             	mov    %eax,-0x44(%rbp)
  40129c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40129f:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4012a2:	39 c8                	cmp    %ecx,%eax
  4012a4:	0f 8d 68 00 00 00    	jge    401312 <better_par_merge_sort+0x161>
  4012aa:	e9 0e 00 00 00       	jmpq   4012bd <better_par_merge_sort+0x10c>
  4012af:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4012b2:	48 89 c1             	mov    %rax,%rcx
  4012b5:	83 c0 01             	add    $0x1,%eax
  4012b8:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4012bb:	eb df                	jmp    40129c <better_par_merge_sort+0xeb>
  4012bd:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4012c0:	48 63 c0             	movslq %eax,%rax
  4012c3:	48 c1 e0 03          	shl    $0x3,%rax
  4012c7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4012cb:	48 01 c1             	add    %rax,%rcx
  4012ce:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4012d1:	48 63 c0             	movslq %eax,%rax
  4012d4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4012d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4012dc:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  4012e0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4012e4:	48 31 d2             	xor    %rdx,%rdx
  4012e7:	48 f7 f1             	div    %rcx
  4012ea:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4012ee:	48 89 01             	mov    %rax,(%rcx)
  4012f1:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4012f4:	48 63 c0             	movslq %eax,%rax
  4012f7:	48 c1 e0 03          	shl    $0x3,%rax
  4012fb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4012ff:	48 01 c1             	add    %rax,%rcx
  401302:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401306:	48 8b 11             	mov    (%rcx),%rdx
  401309:	48 01 d0             	add    %rdx,%rax
  40130c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401310:	eb 9d                	jmp    4012af <better_par_merge_sort+0xfe>
  401312:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401315:	83 e8 01             	sub    $0x1,%eax
  401318:	48 63 c0             	movslq %eax,%rax
  40131b:	48 c1 e0 03          	shl    $0x3,%rax
  40131f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  401323:	48 01 c1             	add    %rax,%rcx
  401326:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40132a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40132e:	48 29 d0             	sub    %rdx,%rax
  401331:	48 8b 11             	mov    (%rcx),%rdx
  401334:	48 01 c2             	add    %rax,%rdx
  401337:	48 89 11             	mov    %rdx,(%rcx)
  40133a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40133d:	48 63 c0             	movslq %eax,%rax
  401340:	48 c1 e0 03          	shl    $0x3,%rax
  401344:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  401348:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40134c:	48 89 c7             	mov    %rax,%rdi
  40134f:	e8 f4 0a 00 00       	callq  401e48 <malloc@plt>
  401354:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  401358:	b8 00 00 00 00       	mov    $0x0,%eax
  40135d:	89 45 94             	mov    %eax,-0x6c(%rbp)
  401360:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401363:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  401366:	39 c8                	cmp    %ecx,%eax
  401368:	0f 8d fd 00 00 00    	jge    40146b <better_par_merge_sort+0x2ba>
  40136e:	e9 0e 00 00 00       	jmpq   401381 <better_par_merge_sort+0x1d0>
  401373:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401376:	48 89 c1             	mov    %rax,%rcx
  401379:	83 c0 01             	add    $0x1,%eax
  40137c:	89 45 94             	mov    %eax,-0x6c(%rbp)
  40137f:	eb df                	jmp    401360 <better_par_merge_sort+0x1af>
  401381:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401384:	48 63 c0             	movslq %eax,%rax
  401387:	48 c1 e0 03          	shl    $0x3,%rax
  40138b:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  40138f:	48 01 c1             	add    %rax,%rcx
  401392:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401395:	48 63 c0             	movslq %eax,%rax
  401398:	48 c1 e0 03          	shl    $0x3,%rax
  40139c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4013a0:	48 01 c2             	add    %rax,%rdx
  4013a3:	48 8b 02             	mov    (%rdx),%rax
  4013a6:	48 c1 e0 03          	shl    $0x3,%rax
  4013aa:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  4013ae:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  4013b2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  4013b6:	48 89 c7             	mov    %rax,%rdi
  4013b9:	e8 8a 0a 00 00       	callq  401e48 <malloc@plt>
  4013be:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4013c2:	48 89 01             	mov    %rax,(%rcx)
  4013c5:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4013c8:	48 63 c0             	movslq %eax,%rax
  4013cb:	48 c1 e0 03          	shl    $0x3,%rax
  4013cf:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4013d3:	48 01 c1             	add    %rax,%rcx
  4013d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4013da:	8b 55 94             	mov    -0x6c(%rbp),%edx
  4013dd:	48 63 d2             	movslq %edx,%rdx
  4013e0:	48 c1 e2 03          	shl    $0x3,%rdx
  4013e4:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  4013eb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4013ef:	48 01 d1             	add    %rdx,%rcx
  4013f2:	8b 55 94             	mov    -0x6c(%rbp),%edx
  4013f5:	48 63 d2             	movslq %edx,%rdx
  4013f8:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  4013ff:	48 8b 01             	mov    (%rcx),%rax
  401402:	48 0f af d0          	imul   %rax,%rdx
  401406:	48 c1 e2 03          	shl    $0x3,%rdx
  40140a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  401411:	48 8b 00             	mov    (%rax),%rax
  401414:	48 01 d0             	add    %rdx,%rax
  401417:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  40141a:	48 63 c9             	movslq %ecx,%rcx
  40141d:	48 c1 e1 03          	shl    $0x3,%rcx
  401421:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401425:	48 01 ca             	add    %rcx,%rdx
  401428:	48 8b 0a             	mov    (%rdx),%rcx
  40142b:	48 c1 e1 03          	shl    $0x3,%rcx
  40142f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  401436:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  40143d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  401444:	49 89 c2             	mov    %rax,%r10
  401447:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40144e:	48 89 c6             	mov    %rax,%rsi
  401451:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401458:	48 8b 00             	mov    (%rax),%rax
  40145b:	48 89 c7             	mov    %rax,%rdi
  40145e:	4c 89 d2             	mov    %r10,%rdx
  401461:	e8 f2 09 00 00       	callq  401e58 <memcpy@plt>
  401466:	e9 08 ff ff ff       	jmpq   401373 <better_par_merge_sort+0x1c2>
  40146b:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  40146f:	83 f8 00             	cmp    $0x0,%eax
  401472:	0f 84 1d 00 00 00    	je     401495 <better_par_merge_sort+0x2e4>
  401478:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40147c:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  401483:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40148a:	48 8b 00             	mov    (%rax),%rax
  40148d:	48 89 c7             	mov    %rax,%rdi
  401490:	e8 d3 09 00 00       	callq  401e68 <free@plt>
  401495:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401498:	c1 e0 03             	shl    $0x3,%eax
  40149b:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  4014a1:	48 89 a5 40 ff ff ff 	mov    %rsp,-0xc0(%rbp)
  4014a8:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  4014ae:	48 2b e0             	sub    %rax,%rsp
  4014b1:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4014b5:	48 89 a5 48 ff ff ff 	mov    %rsp,-0xb8(%rbp)
  4014bc:	b8 00 00 00 00       	mov    $0x0,%eax
  4014c1:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  4014c7:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  4014ce:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4014d1:	83 e8 01             	sub    $0x1,%eax
  4014d4:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  4014da:	39 c1                	cmp    %eax,%ecx
  4014dc:	0f 8d f7 00 00 00    	jge    4015d9 <better_par_merge_sort+0x428>
  4014e2:	e9 1b 00 00 00       	jmpq   401502 <better_par_merge_sort+0x351>
  4014e7:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  4014ee:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  4014f4:	48 89 c1             	mov    %rax,%rcx
  4014f7:	83 c0 01             	add    $0x1,%eax
  4014fa:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  401500:	eb c5                	jmp    4014c7 <better_par_merge_sort+0x316>
  401502:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  401508:	c1 e0 03             	shl    $0x3,%eax
  40150b:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  401512:	48 01 c1             	add    %rax,%rcx
  401515:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  40151b:	48 63 c0             	movslq %eax,%rax
  40151e:	48 c1 e0 03          	shl    $0x3,%rax
  401522:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  401526:	48 01 c2             	add    %rax,%rdx
  401529:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  40152f:	48 63 c0             	movslq %eax,%rax
  401532:	48 c1 e0 03          	shl    $0x3,%rax
  401536:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
  40153d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  401541:	48 01 c1             	add    %rax,%rcx
  401544:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401547:	83 e8 01             	sub    $0x1,%eax
  40154a:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  401551:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  401558:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  40155f:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  401563:	49 89 c0             	mov    %rax,%r8
  401566:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401569:	49 89 c3             	mov    %rax,%r11
  40156c:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
  401572:	49 89 c2             	mov    %rax,%r10
  401575:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  40157c:	48 8b 00             	mov    (%rax),%rax
  40157f:	48 89 c6             	mov    %rax,%rsi
  401582:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  401589:	48 89 c7             	mov    %rax,%rdi
  40158c:	4c 89 d2             	mov    %r10,%rdx
  40158f:	4c 89 d9             	mov    %r11,%rcx
  401592:	e8 f1 08 00 00       	callq  401e88 <proxy_args@plt>
  401597:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  40159e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  4015a5:	49 89 c3             	mov    %rax,%r11
  4015a8:	48 8b 05 e1 0a 20 00 	mov    0x200ae1(%rip),%rax        # 602090 <printf@plt+0x200158>
  4015af:	49 89 c2             	mov    %rax,%r10
  4015b2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4015b9:	00 00 00 
  4015bc:	48 89 c6             	mov    %rax,%rsi
  4015bf:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  4015c6:	48 89 c7             	mov    %rax,%rdi
  4015c9:	4c 89 d2             	mov    %r10,%rdx
  4015cc:	4c 89 d9             	mov    %r11,%rcx
  4015cf:	e8 c4 08 00 00       	callq  401e98 <pthread_create@plt>
  4015d4:	e9 0e ff ff ff       	jmpq   4014e7 <better_par_merge_sort+0x336>
  4015d9:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4015dc:	83 e8 01             	sub    $0x1,%eax
  4015df:	48 63 c0             	movslq %eax,%rax
  4015e2:	48 c1 e0 03          	shl    $0x3,%rax
  4015e6:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4015ea:	48 01 c1             	add    %rax,%rcx
  4015ed:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4015f0:	83 e8 01             	sub    $0x1,%eax
  4015f3:	48 63 c0             	movslq %eax,%rax
  4015f6:	48 c1 e0 03          	shl    $0x3,%rax
  4015fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4015fe:	48 01 c2             	add    %rax,%rdx
  401601:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401604:	83 e8 01             	sub    $0x1,%eax
  401607:	48 89 8d 08 ff ff ff 	mov    %rcx,-0xf8(%rbp)
  40160e:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
  401615:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  40161c:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  401620:	49 89 c0             	mov    %rax,%r8
  401623:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401626:	49 89 c3             	mov    %rax,%r11
  401629:	8b 85 f8 fe ff ff    	mov    -0x108(%rbp),%eax
  40162f:	49 89 c2             	mov    %rax,%r10
  401632:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
  401639:	48 8b 00             	mov    (%rax),%rax
  40163c:	48 89 c6             	mov    %rax,%rsi
  40163f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
  401646:	48 89 c7             	mov    %rax,%rdi
  401649:	4c 89 d2             	mov    %r10,%rdx
  40164c:	4c 89 d9             	mov    %r11,%rcx
  40164f:	e8 34 08 00 00       	callq  401e88 <proxy_args@plt>
  401654:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  40165b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
  401662:	48 89 c7             	mov    %rax,%rdi
  401665:	e8 4e 08 00 00       	callq  401eb8 <better_par_merge_sort@plt>
  40166a:	b8 00 00 00 00       	mov    $0x0,%eax
  40166f:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  401675:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  40167c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40167f:	83 e8 01             	sub    $0x1,%eax
  401682:	8b 8d ec fe ff ff    	mov    -0x114(%rbp),%ecx
  401688:	39 c1                	cmp    %eax,%ecx
  40168a:	0f 8d 5b 00 00 00    	jge    4016eb <better_par_merge_sort+0x53a>
  401690:	e9 1b 00 00 00       	jmpq   4016b0 <better_par_merge_sort+0x4ff>
  401695:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  40169c:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  4016a2:	48 89 c1             	mov    %rax,%rcx
  4016a5:	83 c0 01             	add    $0x1,%eax
  4016a8:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
  4016ae:	eb c5                	jmp    401675 <better_par_merge_sort+0x4c4>
  4016b0:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
  4016b6:	c1 e0 03             	shl    $0x3,%eax
  4016b9:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  4016c0:	48 01 c1             	add    %rax,%rcx
  4016c3:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
  4016ca:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4016d1:	00 00 00 
  4016d4:	48 89 c6             	mov    %rax,%rsi
  4016d7:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  4016de:	48 8b 00             	mov    (%rax),%rax
  4016e1:	48 89 c7             	mov    %rax,%rdi
  4016e4:	e8 bf 07 00 00       	callq  401ea8 <pthread_join@plt>
  4016e9:	eb aa                	jmp    401695 <better_par_merge_sort+0x4e4>
  4016eb:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  4016ef:	83 f8 00             	cmp    $0x0,%eax
  4016f2:	0f 84 33 00 00 00    	je     40172b <better_par_merge_sort+0x57a>
  4016f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4016fc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401700:	48 c1 e1 03          	shl    $0x3,%rcx
  401704:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  40170b:	48 89 8d d0 fe ff ff 	mov    %rcx,-0x130(%rbp)
  401712:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
  401719:	48 89 c7             	mov    %rax,%rdi
  40171c:	e8 27 07 00 00       	callq  401e48 <malloc@plt>
  401721:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
  401728:	48 89 01             	mov    %rax,(%rcx)
  40172b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40172e:	48 63 c0             	movslq %eax,%rax
  401731:	48 c1 e0 03          	shl    $0x3,%rax
  401735:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  40173c:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  401743:	48 89 c7             	mov    %rax,%rdi
  401746:	e8 fd 06 00 00       	callq  401e48 <malloc@plt>
  40174b:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  401752:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401755:	48 63 c0             	movslq %eax,%rax
  401758:	48 c1 e0 03          	shl    $0x3,%rax
  40175c:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  401763:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40176a:	49 89 c2             	mov    %rax,%r10
  40176d:	b8 00 00 00 00       	mov    $0x0,%eax
  401772:	48 89 c6             	mov    %rax,%rsi
  401775:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40177c:	48 89 c7             	mov    %rax,%rdi
  40177f:	4c 89 d2             	mov    %r10,%rdx
  401782:	e8 41 07 00 00       	callq  401ec8 <memset@plt>
  401787:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40178e:	00 00 00 
  401791:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  401798:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  40179f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  4017a6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4017aa:	48 39 c8             	cmp    %rcx,%rax
  4017ad:	0f 83 94 01 00 00    	jae    401947 <better_par_merge_sort+0x796>
  4017b3:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
  4017ba:	33 33 03 
  4017bd:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  4017c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4017c9:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  4017cf:	b8 00 00 00 00       	mov    $0x0,%eax
  4017d4:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  4017da:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  4017e1:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  4017e7:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4017ea:	39 c8                	cmp    %ecx,%eax
  4017ec:	0f 8d f8 00 00 00    	jge    4018ea <better_par_merge_sort+0x739>
  4017f2:	e9 1b 00 00 00       	jmpq   401812 <better_par_merge_sort+0x661>
  4017f7:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  4017fe:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  401804:	48 89 c1             	mov    %rax,%rcx
  401807:	83 c0 01             	add    $0x1,%eax
  40180a:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
  401810:	eb c8                	jmp    4017da <better_par_merge_sort+0x629>
  401812:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  401818:	48 63 c0             	movslq %eax,%rax
  40181b:	48 c1 e0 03          	shl    $0x3,%rax
  40181f:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  401826:	48 01 c1             	add    %rax,%rcx
  401829:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  40182f:	48 63 c0             	movslq %eax,%rax
  401832:	48 c1 e0 03          	shl    $0x3,%rax
  401836:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40183a:	48 01 c2             	add    %rax,%rdx
  40183d:	48 8b 01             	mov    (%rcx),%rax
  401840:	48 8b 0a             	mov    (%rdx),%rcx
  401843:	48 39 c8             	cmp    %rcx,%rax
  401846:	0f 83 99 00 00 00    	jae    4018e5 <better_par_merge_sort+0x734>
  40184c:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  401852:	48 63 c0             	movslq %eax,%rax
  401855:	48 c1 e0 03          	shl    $0x3,%rax
  401859:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  40185d:	48 01 c1             	add    %rax,%rcx
  401860:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  401866:	48 63 c0             	movslq %eax,%rax
  401869:	48 c1 e0 03          	shl    $0x3,%rax
  40186d:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  401874:	48 01 c2             	add    %rax,%rdx
  401877:	48 8b 02             	mov    (%rdx),%rax
  40187a:	48 c1 e0 03          	shl    $0x3,%rax
  40187e:	48 8b 11             	mov    (%rcx),%rdx
  401881:	48 01 c2             	add    %rax,%rdx
  401884:	48 8b 02             	mov    (%rdx),%rax
  401887:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  40188e:	48 39 c8             	cmp    %rcx,%rax
  401891:	0f 83 4e 00 00 00    	jae    4018e5 <better_par_merge_sort+0x734>
  401897:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  40189d:	48 63 c0             	movslq %eax,%rax
  4018a0:	48 c1 e0 03          	shl    $0x3,%rax
  4018a4:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4018a8:	48 01 c1             	add    %rax,%rcx
  4018ab:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  4018b1:	48 63 c0             	movslq %eax,%rax
  4018b4:	48 c1 e0 03          	shl    $0x3,%rax
  4018b8:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4018bf:	48 01 c2             	add    %rax,%rdx
  4018c2:	48 8b 02             	mov    (%rdx),%rax
  4018c5:	48 c1 e0 03          	shl    $0x3,%rax
  4018c9:	48 8b 11             	mov    (%rcx),%rdx
  4018cc:	48 01 c2             	add    %rax,%rdx
  4018cf:	48 8b 02             	mov    (%rdx),%rax
  4018d2:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
  4018d9:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  4018df:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
  4018e5:	e9 0d ff ff ff       	jmpq   4017f7 <better_par_merge_sort+0x646>
  4018ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018ee:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  4018f5:	48 c1 e1 03          	shl    $0x3,%rcx
  4018f9:	48 8b 10             	mov    (%rax),%rdx
  4018fc:	48 01 ca             	add    %rcx,%rdx
  4018ff:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
  401906:	48 89 02             	mov    %rax,(%rdx)
  401909:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
  40190f:	48 63 c0             	movslq %eax,%rax
  401912:	48 c1 e0 03          	shl    $0x3,%rax
  401916:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  40191d:	48 01 c1             	add    %rax,%rcx
  401920:	48 8b 01             	mov    (%rcx),%rax
  401923:	48 89 c2             	mov    %rax,%rdx
  401926:	48 83 c0 01          	add    $0x1,%rax
  40192a:	48 89 01             	mov    %rax,(%rcx)
  40192d:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  401934:	48 89 c1             	mov    %rax,%rcx
  401937:	48 83 c0 01          	add    $0x1,%rax
  40193b:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
  401942:	e9 51 fe ff ff       	jmpq   401798 <better_par_merge_sort+0x5e7>
  401947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40194b:	48 89 c7             	mov    %rax,%rdi
  40194e:	e8 15 05 00 00       	callq  401e68 <free@plt>
  401953:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401957:	48 89 c7             	mov    %rax,%rdi
  40195a:	e8 09 05 00 00       	callq  401e68 <free@plt>
  40195f:	b8 00 00 00 00       	mov    $0x0,%eax
  401964:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  40196a:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  401971:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
  401977:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40197a:	39 c8                	cmp    %ecx,%eax
  40197c:	0f 8d 4f 00 00 00    	jge    4019d1 <better_par_merge_sort+0x820>
  401982:	e9 1b 00 00 00       	jmpq   4019a2 <better_par_merge_sort+0x7f1>
  401987:	48 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%rsp
  40198e:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
  401994:	48 89 c1             	mov    %rax,%rcx
  401997:	83 c0 01             	add    $0x1,%eax
  40199a:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  4019a0:	eb c8                	jmp    40196a <better_par_merge_sort+0x7b9>
  4019a2:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
  4019a8:	48 63 c0             	movslq %eax,%rax
  4019ab:	48 c1 e0 03          	shl    $0x3,%rax
  4019af:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  4019b3:	48 01 c1             	add    %rax,%rcx
  4019b6:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
  4019bd:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
  4019c4:	48 8b 00             	mov    (%rax),%rax
  4019c7:	48 89 c7             	mov    %rax,%rdi
  4019ca:	e8 99 04 00 00       	callq  401e68 <free@plt>
  4019cf:	eb b6                	jmp    401987 <better_par_merge_sort+0x7d6>
  4019d1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4019d5:	48 89 c7             	mov    %rax,%rdi
  4019d8:	e8 8b 04 00 00       	callq  401e68 <free@plt>
  4019dd:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4019e4:	48 89 c7             	mov    %rax,%rdi
  4019e7:	e8 7c 04 00 00       	callq  401e68 <free@plt>
  4019ec:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4019f3:	00 00 00 
  4019f6:	c9                   	leaveq 
  4019f7:	c3                   	retq   

00000000004019f8 <generateData>:
  4019f8:	55                   	push   %rbp
  4019f9:	48 89 e5             	mov    %rsp,%rbp
  4019fc:	48 81 ec 30 00 00 00 	sub    $0x30,%rsp
  401a03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401a07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401a0b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  401a12:	00 00 00 
  401a15:	48 89 c7             	mov    %rax,%rdi
  401a18:	e8 bb 04 00 00       	callq  401ed8 <time@plt>
  401a1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401a21:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401a24:	48 89 c7             	mov    %rax,%rdi
  401a27:	e8 bc 04 00 00       	callq  401ee8 <srand@plt>
  401a2c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  401a33:	00 00 00 
  401a36:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401a3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401a3e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401a42:	48 39 c8             	cmp    %rcx,%rax
  401a45:	0f 83 3d 00 00 00    	jae    401a88 <generateData+0x90>
  401a4b:	e9 11 00 00 00       	jmpq   401a61 <generateData+0x69>
  401a50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401a54:	48 89 c1             	mov    %rax,%rcx
  401a57:	48 83 c0 01          	add    $0x1,%rax
  401a5b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401a5f:	eb d9                	jmp    401a3a <generateData+0x42>
  401a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401a65:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  401a69:	48 c1 e1 03          	shl    $0x3,%rcx
  401a6d:	48 8b 10             	mov    (%rax),%rdx
  401a70:	48 01 ca             	add    %rcx,%rdx
  401a73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401a77:	e8 7c 04 00 00       	callq  401ef8 <rand@plt>
  401a7c:	48 63 c0             	movslq %eax,%rax
  401a7f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  401a83:	48 89 01             	mov    %rax,(%rcx)
  401a86:	eb c8                	jmp    401a50 <generateData+0x58>
  401a88:	c9                   	leaveq 
  401a89:	c3                   	retq   
  401a8a:	55                   	push   %rbp
  401a8b:	48 89 e5             	mov    %rsp,%rbp
  401a8e:	48 81 ec 20 00 00 00 	sub    $0x20,%rsp
  401a95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401a99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401aa1:	48 8b 08             	mov    (%rax),%rcx
  401aa4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  401aa8:	b8 01 00 00 00       	mov    $0x1,%eax
  401aad:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  401ab0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401ab3:	48 63 c0             	movslq %eax,%rax
  401ab6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401aba:	48 39 c8             	cmp    %rcx,%rax
  401abd:	0f 83 4a 00 00 00    	jae    401b0d <generateData+0x115>
  401ac3:	e9 0e 00 00 00       	jmpq   401ad6 <generateData+0xde>
  401ac8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401acb:	48 89 c1             	mov    %rax,%rcx
  401ace:	83 c0 01             	add    $0x1,%eax
  401ad1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  401ad4:	eb da                	jmp    401ab0 <generateData+0xb8>
  401ad6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401ad9:	48 63 c0             	movslq %eax,%rax
  401adc:	48 c1 e0 03          	shl    $0x3,%rax
  401ae0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  401ae4:	48 01 c1             	add    %rax,%rcx
  401ae7:	48 8b 01             	mov    (%rcx),%rax
  401aea:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401aee:	48 39 c8             	cmp    %rcx,%rax
  401af1:	0f 82 0a 00 00 00    	jb     401b01 <generateData+0x109>
  401af7:	e9 cc ff ff ff       	jmpq   401ac8 <generateData+0xd0>
  401afc:	e9 0a 00 00 00       	jmpq   401b0b <generateData+0x113>
  401b01:	b8 00 00 00 00       	mov    $0x0,%eax
  401b06:	e9 07 00 00 00       	jmpq   401b12 <generateData+0x11a>
  401b0b:	eb bb                	jmp    401ac8 <generateData+0xd0>
  401b0d:	b8 01 00 00 00       	mov    $0x1,%eax
  401b12:	c9                   	leaveq 
  401b13:	c3                   	retq   

0000000000401b14 <main>:
  401b14:	55                   	push   %rbp
  401b15:	48 89 e5             	mov    %rsp,%rbp
  401b18:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  401b1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401b27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b2b:	48 83 c0 08          	add    $0x8,%rax
  401b2f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401b33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401b37:	48 8b 00             	mov    (%rax),%rax
  401b3a:	48 89 c7             	mov    %rax,%rdi
  401b3d:	e8 c6 03 00 00       	callq  401f08 <atoi@plt>
  401b42:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401b45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b49:	48 83 c0 10          	add    $0x10,%rax
  401b4d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  401b51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401b55:	48 8b 00             	mov    (%rax),%rax
  401b58:	48 89 c7             	mov    %rax,%rdi
  401b5b:	e8 a8 03 00 00       	callq  401f08 <atoi@plt>
  401b60:	89 45 dc             	mov    %eax,-0x24(%rbp)
  401b63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b67:	48 83 c0 18          	add    $0x18,%rax
  401b6b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401b6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401b73:	48 8b 00             	mov    (%rax),%rax
  401b76:	48 89 c7             	mov    %rax,%rdi
  401b79:	e8 8a 03 00 00       	callq  401f08 <atoi@plt>
  401b7e:	89 45 cc             	mov    %eax,-0x34(%rbp)
  401b81:	8b 45 cc             	mov    -0x34(%rbp),%eax
  401b84:	48 63 c0             	movslq %eax,%rax
  401b87:	48 c1 e0 03          	shl    $0x3,%rax
  401b8b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  401b8f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401b93:	48 89 c7             	mov    %rax,%rdi
  401b96:	e8 ad 02 00 00       	callq  401e48 <malloc@plt>
  401b9b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  401b9f:	8b 45 cc             	mov    -0x34(%rbp),%eax
  401ba2:	48 63 c0             	movslq %eax,%rax
  401ba5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  401ba9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  401bad:	48 89 c6             	mov    %rax,%rsi
  401bb0:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  401bb4:	48 89 c7             	mov    %rax,%rdi
  401bb7:	e8 5c 03 00 00       	callq  401f18 <generateData@plt>
  401bbc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  401bc0:	48 89 c6             	mov    %rax,%rsi
  401bc3:	b8 04 00 00 00       	mov    $0x4,%eax
  401bc8:	48 89 c7             	mov    %rax,%rdi
  401bcb:	e8 58 03 00 00       	callq  401f28 <clock_gettime@plt>
  401bd0:	8b 45 cc             	mov    -0x34(%rbp),%eax
  401bd3:	48 63 c0             	movslq %eax,%rax
  401bd6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  401bdd:	b8 01 00 00 00       	mov    $0x1,%eax
  401be2:	49 89 c0             	mov    %rax,%r8
  401be5:	8b 45 dc             	mov    -0x24(%rbp),%eax
  401be8:	49 89 c3             	mov    %rax,%r11
  401beb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401bee:	49 89 c2             	mov    %rax,%r10
  401bf1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401bf8:	48 89 c6             	mov    %rax,%rsi
  401bfb:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  401bff:	48 89 c7             	mov    %rax,%rdi
  401c02:	4c 89 d2             	mov    %r10,%rdx
  401c05:	4c 89 d9             	mov    %r11,%rcx
  401c08:	e8 7b 02 00 00       	callq  401e88 <proxy_args@plt>
  401c0d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  401c14:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  401c1b:	48 89 c7             	mov    %rax,%rdi
  401c1e:	e8 95 02 00 00       	callq  401eb8 <better_par_merge_sort@plt>
  401c23:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  401c27:	48 89 c6             	mov    %rax,%rsi
  401c2a:	b8 04 00 00 00       	mov    $0x4,%eax
  401c2f:	48 89 c7             	mov    %rax,%rdi
  401c32:	e8 f1 02 00 00       	callq  401f28 <clock_gettime@plt>
  401c37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  401c3b:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  401c3f:	48 29 c8             	sub    %rcx,%rax
  401c42:	48 b9 e8 03 00 00 00 	movabs $0x3e8,%rcx
  401c49:	00 00 00 
  401c4c:	48 0f af c1          	imul   %rcx,%rax
  401c50:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  401c54:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  401c58:	48 29 d1             	sub    %rdx,%rcx
  401c5b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  401c62:	48 89 c8             	mov    %rcx,%rax
  401c65:	48 b9 40 42 0f 00 00 	movabs $0xf4240,%rcx
  401c6c:	00 00 00 
  401c6f:	48 99                	cqto   
  401c71:	48 f7 f9             	idiv   %rcx
  401c74:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  401c7b:	48 01 c1             	add    %rax,%rcx
  401c7e:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
  401c82:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401c86:	48 89 c6             	mov    %rax,%rsi
  401c89:	48 8d 05 bc 02 20 00 	lea    0x2002bc(%rip),%rax        # 601f4c <printf@plt+0x200014>
  401c90:	48 89 c7             	mov    %rax,%rdi
  401c93:	b8 00 00 00 00       	mov    $0x0,%eax
  401c98:	e8 9b 02 00 00       	callq  401f38 <printf@plt>
  401c9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  401ca1:	48 89 c7             	mov    %rax,%rdi
  401ca4:	e8 bf 01 00 00       	callq  401e68 <free@plt>
  401ca9:	b8 00 00 00 00       	mov    $0x0,%eax
  401cae:	c9                   	leaveq 
  401caf:	c3                   	retq   

0000000000401cb0 <__libc_csu_init>:
  401cb0:	f3 0f 1e fa          	endbr64 
  401cb4:	41 57                	push   %r15
  401cb6:	4c 8d 3d 7b 01 00 00 	lea    0x17b(%rip),%r15        # 401e38 <__libc_csu_fini+0x118>
  401cbd:	41 56                	push   %r14
  401cbf:	49 89 d6             	mov    %rdx,%r14
  401cc2:	41 55                	push   %r13
  401cc4:	49 89 f5             	mov    %rsi,%r13
  401cc7:	41 54                	push   %r12
  401cc9:	41 89 fc             	mov    %edi,%r12d
  401ccc:	55                   	push   %rbp
  401ccd:	48 8d 2d 64 01 00 00 	lea    0x164(%rip),%rbp        # 401e38 <__libc_csu_fini+0x118>
  401cd4:	53                   	push   %rbx
  401cd5:	4c 29 fd             	sub    %r15,%rbp
  401cd8:	48 83 ec 08          	sub    $0x8,%rsp
  401cdc:	e8 27 01 00 00       	callq  401e08 <__libc_csu_fini+0xe8>
  401ce1:	48 c1 fd 03          	sar    $0x3,%rbp
  401ce5:	74 1f                	je     401d06 <__libc_csu_init+0x56>
  401ce7:	31 db                	xor    %ebx,%ebx
  401ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401cf0:	4c 89 f2             	mov    %r14,%rdx
  401cf3:	4c 89 ee             	mov    %r13,%rsi
  401cf6:	44 89 e7             	mov    %r12d,%edi
  401cf9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  401cfd:	48 83 c3 01          	add    $0x1,%rbx
  401d01:	48 39 dd             	cmp    %rbx,%rbp
  401d04:	75 ea                	jne    401cf0 <__libc_csu_init+0x40>
  401d06:	48 83 c4 08          	add    $0x8,%rsp
  401d0a:	5b                   	pop    %rbx
  401d0b:	5d                   	pop    %rbp
  401d0c:	41 5c                	pop    %r12
  401d0e:	41 5d                	pop    %r13
  401d10:	41 5e                	pop    %r14
  401d12:	41 5f                	pop    %r15
  401d14:	c3                   	retq   
  401d15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401d1c:	00 00 00 00 

0000000000401d20 <__libc_csu_fini>:
  401d20:	f3 0f 1e fa          	endbr64 
  401d24:	c3                   	retq   

Disassembly of section .init:

0000000000401e08 <.init>:
  401e08:	f3 0f 1e fa          	endbr64 
  401e0c:	48 83 ec 08          	sub    $0x8,%rsp
  401e10:	48 8b 05 c9 02 20 00 	mov    0x2002c9(%rip),%rax        # 6020e0 <printf@plt+0x2001a8>
  401e17:	48 85 c0             	test   %rax,%rax
  401e1a:	74 02                	je     401e1e <__libc_csu_fini+0xfe>
  401e1c:	ff d0                	callq  *%rax
  401e1e:	48 83 c4 08          	add    $0x8,%rsp
  401e22:	c3                   	retq   

Disassembly of section .fini:

0000000000401e24 <.fini>:
  401e24:	f3 0f 1e fa          	endbr64 
  401e28:	48 83 ec 08          	sub    $0x8,%rsp
  401e2c:	48 83 c4 08          	add    $0x8,%rsp
  401e30:	c3                   	retq   

Disassembly of section .plt:

0000000000401e38 <malloc@plt-0x10>:
  401e38:	ff 35 e2 01 20 00    	pushq  0x2001e2(%rip)        # 602020 <printf@plt+0x2000e8>
  401e3e:	ff 25 e4 01 20 00    	jmpq   *0x2001e4(%rip)        # 602028 <printf@plt+0x2000f0>
  401e44:	00 00                	add    %al,(%rax)
	...

0000000000401e48 <malloc@plt>:
  401e48:	ff 25 02 02 20 00    	jmpq   *0x200202(%rip)        # 602050 <printf@plt+0x200118>
  401e4e:	68 05 00 00 00       	pushq  $0x5
  401e53:	e9 e0 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401e58 <memcpy@plt>:
  401e58:	ff 25 fa 01 20 00    	jmpq   *0x2001fa(%rip)        # 602058 <printf@plt+0x200120>
  401e5e:	68 06 00 00 00       	pushq  $0x6
  401e63:	e9 d0 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401e68 <free@plt>:
  401e68:	ff 25 f2 01 20 00    	jmpq   *0x2001f2(%rip)        # 602060 <printf@plt+0x200128>
  401e6e:	68 07 00 00 00       	pushq  $0x7
  401e73:	e9 c0 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401e78 <seq_merge_sort@plt>:
  401e78:	ff 25 ea 01 20 00    	jmpq   *0x2001ea(%rip)        # 602068 <printf@plt+0x200130>
  401e7e:	68 08 00 00 00       	pushq  $0x8
  401e83:	e9 b0 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401e88 <proxy_args@plt>:
  401e88:	ff 25 e2 01 20 00    	jmpq   *0x2001e2(%rip)        # 602070 <printf@plt+0x200138>
  401e8e:	68 09 00 00 00       	pushq  $0x9
  401e93:	e9 a0 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401e98 <pthread_create@plt>:
  401e98:	ff 25 e2 01 20 00    	jmpq   *0x2001e2(%rip)        # 602080 <printf@plt+0x200148>
  401e9e:	68 0b 00 00 00       	pushq  $0xb
  401ea3:	e9 90 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401ea8 <pthread_join@plt>:
  401ea8:	ff 25 da 01 20 00    	jmpq   *0x2001da(%rip)        # 602088 <printf@plt+0x200150>
  401eae:	68 0c 00 00 00       	pushq  $0xc
  401eb3:	e9 80 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401eb8 <better_par_merge_sort@plt>:
  401eb8:	ff 25 da 01 20 00    	jmpq   *0x2001da(%rip)        # 602098 <printf@plt+0x200160>
  401ebe:	68 0e 00 00 00       	pushq  $0xe
  401ec3:	e9 70 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401ec8 <memset@plt>:
  401ec8:	ff 25 d2 01 20 00    	jmpq   *0x2001d2(%rip)        # 6020a0 <printf@plt+0x200168>
  401ece:	68 0f 00 00 00       	pushq  $0xf
  401ed3:	e9 60 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401ed8 <time@plt>:
  401ed8:	ff 25 ca 01 20 00    	jmpq   *0x2001ca(%rip)        # 6020a8 <printf@plt+0x200170>
  401ede:	68 10 00 00 00       	pushq  $0x10
  401ee3:	e9 50 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401ee8 <srand@plt>:
  401ee8:	ff 25 c2 01 20 00    	jmpq   *0x2001c2(%rip)        # 6020b0 <printf@plt+0x200178>
  401eee:	68 11 00 00 00       	pushq  $0x11
  401ef3:	e9 40 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401ef8 <rand@plt>:
  401ef8:	ff 25 ba 01 20 00    	jmpq   *0x2001ba(%rip)        # 6020b8 <printf@plt+0x200180>
  401efe:	68 12 00 00 00       	pushq  $0x12
  401f03:	e9 30 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401f08 <atoi@plt>:
  401f08:	ff 25 b2 01 20 00    	jmpq   *0x2001b2(%rip)        # 6020c0 <printf@plt+0x200188>
  401f0e:	68 13 00 00 00       	pushq  $0x13
  401f13:	e9 20 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401f18 <generateData@plt>:
  401f18:	ff 25 aa 01 20 00    	jmpq   *0x2001aa(%rip)        # 6020c8 <printf@plt+0x200190>
  401f1e:	68 14 00 00 00       	pushq  $0x14
  401f23:	e9 10 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401f28 <clock_gettime@plt>:
  401f28:	ff 25 a2 01 20 00    	jmpq   *0x2001a2(%rip)        # 6020d0 <printf@plt+0x200198>
  401f2e:	68 15 00 00 00       	pushq  $0x15
  401f33:	e9 00 ff ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>

0000000000401f38 <printf@plt>:
  401f38:	ff 25 9a 01 20 00    	jmpq   *0x20019a(%rip)        # 6020d8 <printf@plt+0x2001a0>
  401f3e:	68 16 00 00 00       	pushq  $0x16
  401f43:	e9 f0 fe ff ff       	jmpq   401e38 <__libc_csu_fini+0x118>