../executables/out_laptop/merge-clang-default-bench.exe:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 3f 00 00 	mov    0x3fe9(%rip),%rax        # 404ff8 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 3f 00 00    	pushq  0x3fe2(%rip)        # 405008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 3f 00 00    	jmpq   *0x3fe4(%rip)        # 405010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <free@plt>:
  401030:	ff 25 e2 3f 00 00    	jmpq   *0x3fe2(%rip)        # 405018 <free@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	pushq  $0x0
  40103b:	e9 e0 ff ff ff       	jmpq   401020 <.plt>

0000000000401040 <pthread_create@plt>:
  401040:	ff 25 da 3f 00 00    	jmpq   *0x3fda(%rip)        # 405020 <pthread_create@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	pushq  $0x1
  40104b:	e9 d0 ff ff ff       	jmpq   401020 <.plt>

0000000000401050 <clock_gettime@plt>:
  401050:	ff 25 d2 3f 00 00    	jmpq   *0x3fd2(%rip)        # 405028 <clock_gettime@GLIBC_2.17>
  401056:	68 02 00 00 00       	pushq  $0x2
  40105b:	e9 c0 ff ff ff       	jmpq   401020 <.plt>

0000000000401060 <printf@plt>:
  401060:	ff 25 ca 3f 00 00    	jmpq   *0x3fca(%rip)        # 405030 <printf@GLIBC_2.2.5>
  401066:	68 03 00 00 00       	pushq  $0x3
  40106b:	e9 b0 ff ff ff       	jmpq   401020 <.plt>

0000000000401070 <memset@plt>:
  401070:	ff 25 c2 3f 00 00    	jmpq   *0x3fc2(%rip)        # 405038 <memset@GLIBC_2.2.5>
  401076:	68 04 00 00 00       	pushq  $0x4
  40107b:	e9 a0 ff ff ff       	jmpq   401020 <.plt>

0000000000401080 <srand@plt>:
  401080:	ff 25 ba 3f 00 00    	jmpq   *0x3fba(%rip)        # 405040 <srand@GLIBC_2.2.5>
  401086:	68 05 00 00 00       	pushq  $0x5
  40108b:	e9 90 ff ff ff       	jmpq   401020 <.plt>

0000000000401090 <memcpy@plt>:
  401090:	ff 25 b2 3f 00 00    	jmpq   *0x3fb2(%rip)        # 405048 <memcpy@GLIBC_2.14>
  401096:	68 06 00 00 00       	pushq  $0x6
  40109b:	e9 80 ff ff ff       	jmpq   401020 <.plt>

00000000004010a0 <time@plt>:
  4010a0:	ff 25 aa 3f 00 00    	jmpq   *0x3faa(%rip)        # 405050 <time@GLIBC_2.2.5>
  4010a6:	68 07 00 00 00       	pushq  $0x7
  4010ab:	e9 70 ff ff ff       	jmpq   401020 <.plt>

00000000004010b0 <malloc@plt>:
  4010b0:	ff 25 a2 3f 00 00    	jmpq   *0x3fa2(%rip)        # 405058 <malloc@GLIBC_2.2.5>
  4010b6:	68 08 00 00 00       	pushq  $0x8
  4010bb:	e9 60 ff ff ff       	jmpq   401020 <.plt>

00000000004010c0 <pthread_join@plt>:
  4010c0:	ff 25 9a 3f 00 00    	jmpq   *0x3f9a(%rip)        # 405060 <pthread_join@GLIBC_2.2.5>
  4010c6:	68 09 00 00 00       	pushq  $0x9
  4010cb:	e9 50 ff ff ff       	jmpq   401020 <.plt>

00000000004010d0 <atoi@plt>:
  4010d0:	ff 25 92 3f 00 00    	jmpq   *0x3f92(%rip)        # 405068 <atoi@GLIBC_2.2.5>
  4010d6:	68 0a 00 00 00       	pushq  $0xa
  4010db:	e9 40 ff ff ff       	jmpq   401020 <.plt>

00000000004010e0 <rand@plt>:
  4010e0:	ff 25 8a 3f 00 00    	jmpq   *0x3f8a(%rip)        # 405070 <rand@GLIBC_2.2.5>
  4010e6:	68 0b 00 00 00       	pushq  $0xb
  4010eb:	e9 30 ff ff ff       	jmpq   401020 <.plt>

Disassembly of section .text:

00000000004010f0 <_start>:
  4010f0:	f3 0f 1e fa          	endbr64 
  4010f4:	31 ed                	xor    %ebp,%ebp
  4010f6:	49 89 d1             	mov    %rdx,%r9
  4010f9:	5e                   	pop    %rsi
  4010fa:	48 89 e2             	mov    %rsp,%rdx
  4010fd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401101:	50                   	push   %rax
  401102:	54                   	push   %rsp
  401103:	49 c7 c0 10 20 40 00 	mov    $0x402010,%r8
  40110a:	48 c7 c1 a0 1f 40 00 	mov    $0x401fa0,%rcx
  401111:	48 c7 c7 90 1e 40 00 	mov    $0x401e90,%rdi
  401118:	ff 15 d2 3e 00 00    	callq  *0x3ed2(%rip)        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40111e:	f4                   	hlt    
  40111f:	90                   	nop

0000000000401120 <_dl_relocate_static_pie>:
  401120:	f3 0f 1e fa          	endbr64 
  401124:	c3                   	retq   
  401125:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40112c:	00 00 00 
  40112f:	90                   	nop

0000000000401130 <deregister_tm_clones>:
  401130:	b8 88 50 40 00       	mov    $0x405088,%eax
  401135:	48 3d 88 50 40 00    	cmp    $0x405088,%rax
  40113b:	74 13                	je     401150 <deregister_tm_clones+0x20>
  40113d:	b8 00 00 00 00       	mov    $0x0,%eax
  401142:	48 85 c0             	test   %rax,%rax
  401145:	74 09                	je     401150 <deregister_tm_clones+0x20>
  401147:	bf 88 50 40 00       	mov    $0x405088,%edi
  40114c:	ff e0                	jmpq   *%rax
  40114e:	66 90                	xchg   %ax,%ax
  401150:	c3                   	retq   
  401151:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401158:	00 00 00 00 
  40115c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401160 <register_tm_clones>:
  401160:	be 88 50 40 00       	mov    $0x405088,%esi
  401165:	48 81 ee 88 50 40 00 	sub    $0x405088,%rsi
  40116c:	48 89 f0             	mov    %rsi,%rax
  40116f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401173:	48 c1 f8 03          	sar    $0x3,%rax
  401177:	48 01 c6             	add    %rax,%rsi
  40117a:	48 d1 fe             	sar    %rsi
  40117d:	74 11                	je     401190 <register_tm_clones+0x30>
  40117f:	b8 00 00 00 00       	mov    $0x0,%eax
  401184:	48 85 c0             	test   %rax,%rax
  401187:	74 07                	je     401190 <register_tm_clones+0x30>
  401189:	bf 88 50 40 00       	mov    $0x405088,%edi
  40118e:	ff e0                	jmpq   *%rax
  401190:	c3                   	retq   
  401191:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401198:	00 00 00 00 
  40119c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004011a0 <__do_global_dtors_aux>:
  4011a0:	f3 0f 1e fa          	endbr64 
  4011a4:	80 3d dd 3e 00 00 00 	cmpb   $0x0,0x3edd(%rip)        # 405088 <__TMC_END__>
  4011ab:	75 13                	jne    4011c0 <__do_global_dtors_aux+0x20>
  4011ad:	55                   	push   %rbp
  4011ae:	48 89 e5             	mov    %rsp,%rbp
  4011b1:	e8 7a ff ff ff       	callq  401130 <deregister_tm_clones>
  4011b6:	c6 05 cb 3e 00 00 01 	movb   $0x1,0x3ecb(%rip)        # 405088 <__TMC_END__>
  4011bd:	5d                   	pop    %rbp
  4011be:	c3                   	retq   
  4011bf:	90                   	nop
  4011c0:	c3                   	retq   
  4011c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4011c8:	00 00 00 00 
  4011cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004011d0 <frame_dummy>:
  4011d0:	f3 0f 1e fa          	endbr64 
  4011d4:	eb 8a                	jmp    401160 <register_tm_clones>
  4011d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011dd:	00 00 00 

00000000004011e0 <seq_merge_sort>:
  4011e0:	55                   	push   %rbp
  4011e1:	48 89 e5             	mov    %rsp,%rbp
  4011e4:	48 83 ec 60          	sub    $0x60,%rsp
  4011e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4011ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4011f0:	88 55 ef             	mov    %dl,-0x11(%rbp)
  4011f3:	48 83 7d f0 01       	cmpq   $0x1,-0x10(%rbp)
  4011f8:	0f 87 05 00 00 00    	ja     401203 <seq_merge_sort+0x23>
  4011fe:	e9 66 02 00 00       	jmpq   401469 <seq_merge_sort+0x289>
  401203:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401207:	48 c1 e8 01          	shr    $0x1,%rax
  40120b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40120f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401213:	48 c1 e0 03          	shl    $0x3,%rax
  401217:	48 89 c7             	mov    %rax,%rdi
  40121a:	e8 91 fe ff ff       	callq  4010b0 <malloc@plt>
  40121f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  401223:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401227:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40122b:	48 8b 09             	mov    (%rcx),%rcx
  40122e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401232:	48 c1 e2 03          	shl    $0x3,%rdx
  401236:	48 89 c7             	mov    %rax,%rdi
  401239:	48 89 ce             	mov    %rcx,%rsi
  40123c:	e8 4f fe ff ff       	callq  401090 <memcpy@plt>
  401241:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401245:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
  401249:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40124d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401251:	48 c1 e0 03          	shl    $0x3,%rax
  401255:	48 89 c7             	mov    %rax,%rdi
  401258:	e8 53 fe ff ff       	callq  4010b0 <malloc@plt>
  40125d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  401261:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401265:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  401269:	48 8b 09             	mov    (%rcx),%rcx
  40126c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401270:	48 c1 e2 03          	shl    $0x3,%rdx
  401274:	48 01 d1             	add    %rdx,%rcx
  401277:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40127b:	48 c1 e2 03          	shl    $0x3,%rdx
  40127f:	48 89 c7             	mov    %rax,%rdi
  401282:	48 89 ce             	mov    %rcx,%rsi
  401285:	e8 06 fe ff ff       	callq  401090 <memcpy@plt>
  40128a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
  40128e:	0f 84 0f 00 00 00    	je     4012a3 <seq_merge_sort+0xc3>
  401294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401298:	48 8b 00             	mov    (%rax),%rax
  40129b:	48 89 c7             	mov    %rax,%rdi
  40129e:	e8 8d fd ff ff       	callq  401030 <free@plt>
  4012a3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4012a7:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
  4012ab:	0f be 55 ef          	movsbl -0x11(%rbp),%edx
  4012af:	e8 2c ff ff ff       	callq  4011e0 <seq_merge_sort>
  4012b4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4012b8:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
  4012bc:	0f be 55 ef          	movsbl -0x11(%rbp),%edx
  4012c0:	e8 1b ff ff ff       	callq  4011e0 <seq_merge_sort>
  4012c5:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
  4012c9:	0f 84 17 00 00 00    	je     4012e6 <seq_merge_sort+0x106>
  4012cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012d3:	48 c1 e0 03          	shl    $0x3,%rax
  4012d7:	48 89 c7             	mov    %rax,%rdi
  4012da:	e8 d1 fd ff ff       	callq  4010b0 <malloc@plt>
  4012df:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4012e3:	48 89 01             	mov    %rax,(%rcx)
  4012e6:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  4012ed:	00 
  4012ee:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  4012f5:	00 
  4012f6:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  4012fd:	00 
  4012fe:	31 c0                	xor    %eax,%eax
  401300:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401304:	48 3b 4d e0          	cmp    -0x20(%rbp),%rcx
  401308:	88 45 af             	mov    %al,-0x51(%rbp)
  40130b:	0f 83 0e 00 00 00    	jae    40131f <seq_merge_sort+0x13f>
  401311:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401315:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  401319:	0f 92 c1             	setb   %cl
  40131c:	88 4d af             	mov    %cl,-0x51(%rbp)
  40131f:	8a 45 af             	mov    -0x51(%rbp),%al
  401322:	a8 01                	test   $0x1,%al
  401324:	0f 85 05 00 00 00    	jne    40132f <seq_merge_sort+0x14f>
  40132a:	e9 96 00 00 00       	jmpq   4013c5 <seq_merge_sort+0x1e5>
  40132f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401333:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401337:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  40133b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40133f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  401343:	48 3b 04 d1          	cmp    (%rcx,%rdx,8),%rax
  401347:	0f 83 3c 00 00 00    	jae    401389 <seq_merge_sort+0x1a9>
  40134d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401351:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401355:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401359:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40135d:	48 8b 09             	mov    (%rcx),%rcx
  401360:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  401364:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  401368:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40136c:	48 05 01 00 00 00    	add    $0x1,%rax
  401372:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  401376:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40137a:	48 05 01 00 00 00    	add    $0x1,%rax
  401380:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401384:	e9 37 00 00 00       	jmpq   4013c0 <seq_merge_sort+0x1e0>
  401389:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40138d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  401391:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401395:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  401399:	48 8b 09             	mov    (%rcx),%rcx
  40139c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4013a0:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  4013a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4013a8:	48 05 01 00 00 00    	add    $0x1,%rax
  4013ae:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4013b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4013b6:	48 05 01 00 00 00    	add    $0x1,%rax
  4013bc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4013c0:	e9 39 ff ff ff       	jmpq   4012fe <seq_merge_sort+0x11e>
  4013c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4013c9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  4013cd:	0f 83 38 00 00 00    	jae    40140b <seq_merge_sort+0x22b>
  4013d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4013d7:	48 8b 00             	mov    (%rax),%rax
  4013da:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4013de:	48 c1 e1 03          	shl    $0x3,%rcx
  4013e2:	48 01 c8             	add    %rcx,%rax
  4013e5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4013e9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4013ed:	48 c1 e2 03          	shl    $0x3,%rdx
  4013f1:	48 01 d1             	add    %rdx,%rcx
  4013f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4013f8:	48 2b 55 b8          	sub    -0x48(%rbp),%rdx
  4013fc:	48 c1 e2 03          	shl    $0x3,%rdx
  401400:	48 89 c7             	mov    %rax,%rdi
  401403:	48 89 ce             	mov    %rcx,%rsi
  401406:	e8 85 fc ff ff       	callq  401090 <memcpy@plt>
  40140b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40140f:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
  401413:	0f 83 38 00 00 00    	jae    401451 <seq_merge_sort+0x271>
  401419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40141d:	48 8b 00             	mov    (%rax),%rax
  401420:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  401424:	48 c1 e1 03          	shl    $0x3,%rcx
  401428:	48 01 c8             	add    %rcx,%rax
  40142b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40142f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  401433:	48 c1 e2 03          	shl    $0x3,%rdx
  401437:	48 01 d1             	add    %rdx,%rcx
  40143a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40143e:	48 2b 55 b0          	sub    -0x50(%rbp),%rdx
  401442:	48 c1 e2 03          	shl    $0x3,%rdx
  401446:	48 89 c7             	mov    %rax,%rdi
  401449:	48 89 ce             	mov    %rcx,%rsi
  40144c:	e8 3f fc ff ff       	callq  401090 <memcpy@plt>
  401451:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401455:	48 89 c7             	mov    %rax,%rdi
  401458:	e8 d3 fb ff ff       	callq  401030 <free@plt>
  40145d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401461:	48 89 c7             	mov    %rax,%rdi
  401464:	e8 c7 fb ff ff       	callq  401030 <free@plt>
  401469:	48 83 c4 60          	add    $0x60,%rsp
  40146d:	5d                   	pop    %rbp
  40146e:	c3                   	retq   
  40146f:	90                   	nop

0000000000401470 <proxy_args>:
  401470:	55                   	push   %rbp
  401471:	48 89 e5             	mov    %rsp,%rbp
  401474:	48 83 ec 30          	sub    $0x30,%rsp
  401478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40147c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401480:	89 55 ec             	mov    %edx,-0x14(%rbp)
  401483:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  401486:	44 88 45 e7          	mov    %r8b,-0x19(%rbp)
  40148a:	bf 19 00 00 00       	mov    $0x19,%edi
  40148f:	e8 1c fc ff ff       	callq  4010b0 <malloc@plt>
  401494:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  401498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40149c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4014a0:	48 89 06             	mov    %rax,(%rsi)
  4014a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4014a7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4014ab:	48 89 46 08          	mov    %rax,0x8(%rsi)
  4014af:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4014b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4014b6:	89 48 10             	mov    %ecx,0x10(%rax)
  4014b9:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  4014bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4014c0:	89 48 14             	mov    %ecx,0x14(%rax)
  4014c3:	44 8a 45 e7          	mov    -0x19(%rbp),%r8b
  4014c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4014cb:	44 88 40 18          	mov    %r8b,0x18(%rax)
  4014cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4014d3:	48 83 c4 30          	add    $0x30,%rsp
  4014d7:	5d                   	pop    %rbp
  4014d8:	c3                   	retq   
  4014d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004014e0 <par_merge_sort>:
  4014e0:	55                   	push   %rbp
  4014e1:	48 89 e5             	mov    %rsp,%rbp
  4014e4:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  4014eb:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4014ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4014f3:	48 8b 00             	mov    (%rax),%rax
  4014f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4014fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4014fe:	48 8b 40 08          	mov    0x8(%rax),%rax
  401502:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401506:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40150a:	8b 48 10             	mov    0x10(%rax),%ecx
  40150d:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  401510:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401514:	8b 48 14             	mov    0x14(%rax),%ecx
  401517:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40151a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40151e:	8a 50 18             	mov    0x18(%rax),%dl
  401521:	88 55 d7             	mov    %dl,-0x29(%rbp)
  401524:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  401528:	0f 85 27 00 00 00    	jne    401555 <par_merge_sort+0x75>
  40152e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  401532:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  401536:	0f be 55 d7          	movsbl -0x29(%rbp),%edx
  40153a:	e8 a1 fc ff ff       	callq  4011e0 <seq_merge_sort>
  40153f:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  401543:	e8 e8 fa ff ff       	callq  401030 <free@plt>
  401548:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40154f:	00 
  401550:	e9 11 03 00 00       	jmpq   401866 <par_merge_sort+0x386>
  401555:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
  40155a:	0f 87 0d 00 00 00    	ja     40156d <par_merge_sort+0x8d>
  401560:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401567:	00 
  401568:	e9 f9 02 00 00       	jmpq   401866 <par_merge_sort+0x386>
  40156d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401571:	48 c1 e8 01          	shr    $0x1,%rax
  401575:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  401579:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40157d:	48 c1 e0 03          	shl    $0x3,%rax
  401581:	48 89 c7             	mov    %rax,%rdi
  401584:	e8 27 fb ff ff       	callq  4010b0 <malloc@plt>
  401589:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40158d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401591:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401595:	48 8b 09             	mov    (%rcx),%rcx
  401598:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40159c:	48 c1 e2 03          	shl    $0x3,%rdx
  4015a0:	48 89 c7             	mov    %rax,%rdi
  4015a3:	48 89 ce             	mov    %rcx,%rsi
  4015a6:	e8 e5 fa ff ff       	callq  401090 <memcpy@plt>
  4015ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4015af:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
  4015b3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  4015b7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4015bb:	48 c1 e0 03          	shl    $0x3,%rax
  4015bf:	48 89 c7             	mov    %rax,%rdi
  4015c2:	e8 e9 fa ff ff       	callq  4010b0 <malloc@plt>
  4015c7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4015cb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4015cf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4015d3:	48 8b 09             	mov    (%rcx),%rcx
  4015d6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4015da:	48 c1 e2 03          	shl    $0x3,%rdx
  4015de:	48 01 d1             	add    %rdx,%rcx
  4015e1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4015e5:	48 c1 e2 03          	shl    $0x3,%rdx
  4015e9:	48 89 c7             	mov    %rax,%rdi
  4015ec:	48 89 ce             	mov    %rcx,%rsi
  4015ef:	e8 9c fa ff ff       	callq  401090 <memcpy@plt>
  4015f4:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
  4015f8:	0f 84 0f 00 00 00    	je     40160d <par_merge_sort+0x12d>
  4015fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401602:	48 8b 00             	mov    (%rax),%rax
  401605:	48 89 c7             	mov    %rax,%rdi
  401608:	e8 23 fa ff ff       	callq  401030 <free@plt>
  40160d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  401611:	8b 45 dc             	mov    -0x24(%rbp),%eax
  401614:	83 e8 01             	sub    $0x1,%eax
  401617:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  40161a:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
  40161e:	89 c2                	mov    %eax,%edx
  401620:	44 0f be 45 d7       	movsbl -0x29(%rbp),%r8d
  401625:	e8 46 fe ff ff       	callq  401470 <proxy_args>
  40162a:	31 c9                	xor    %ecx,%ecx
  40162c:	89 ce                	mov    %ecx,%esi
  40162e:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
  401632:	48 ba e0 14 40 00 00 	movabs $0x4014e0,%rdx
  401639:	00 00 00 
  40163c:	48 89 c1             	mov    %rax,%rcx
  40163f:	e8 fc f9 ff ff       	callq  401040 <pthread_create@plt>
  401644:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  401648:	44 8b 45 dc          	mov    -0x24(%rbp),%r8d
  40164c:	41 83 e8 01          	sub    $0x1,%r8d
  401650:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  401653:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  401657:	44 89 c2             	mov    %r8d,%edx
  40165a:	44 0f be 45 d7       	movsbl -0x29(%rbp),%r8d
  40165f:	89 45 84             	mov    %eax,-0x7c(%rbp)
  401662:	e8 09 fe ff ff       	callq  401470 <proxy_args>
  401667:	31 c9                	xor    %ecx,%ecx
  401669:	89 ce                	mov    %ecx,%esi
  40166b:	48 8d 7d a0          	lea    -0x60(%rbp),%rdi
  40166f:	48 ba e0 14 40 00 00 	movabs $0x4014e0,%rdx
  401676:	00 00 00 
  401679:	48 89 c1             	mov    %rax,%rcx
  40167c:	e8 bf f9 ff ff       	callq  401040 <pthread_create@plt>
  401681:	45 31 c0             	xor    %r8d,%r8d
  401684:	44 89 c6             	mov    %r8d,%esi
  401687:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  40168b:	89 45 80             	mov    %eax,-0x80(%rbp)
  40168e:	e8 2d fa ff ff       	callq  4010c0 <pthread_join@plt>
  401693:	45 31 c0             	xor    %r8d,%r8d
  401696:	44 89 c6             	mov    %r8d,%esi
  401699:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  40169d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4016a3:	e8 18 fa ff ff       	callq  4010c0 <pthread_join@plt>
  4016a8:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
  4016ac:	0f 84 17 00 00 00    	je     4016c9 <par_merge_sort+0x1e9>
  4016b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4016b6:	48 c1 e0 03          	shl    $0x3,%rax
  4016ba:	48 89 c7             	mov    %rax,%rdi
  4016bd:	e8 ee f9 ff ff       	callq  4010b0 <malloc@plt>
  4016c2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4016c6:	48 89 01             	mov    %rax,(%rcx)
  4016c9:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
  4016d0:	00 
  4016d1:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
  4016d8:	00 
  4016d9:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  4016e0:	00 
  4016e1:	31 c0                	xor    %eax,%eax
  4016e3:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4016e7:	48 3b 4d c8          	cmp    -0x38(%rbp),%rcx
  4016eb:	88 85 7b ff ff ff    	mov    %al,-0x85(%rbp)
  4016f1:	0f 83 11 00 00 00    	jae    401708 <par_merge_sort+0x228>
  4016f7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4016fb:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  4016ff:	0f 92 c1             	setb   %cl
  401702:	88 8d 7b ff ff ff    	mov    %cl,-0x85(%rbp)
  401708:	8a 85 7b ff ff ff    	mov    -0x85(%rbp),%al
  40170e:	a8 01                	test   $0x1,%al
  401710:	0f 85 05 00 00 00    	jne    40171b <par_merge_sort+0x23b>
  401716:	e9 96 00 00 00       	jmpq   4017b1 <par_merge_sort+0x2d1>
  40171b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40171f:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  401723:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401727:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40172b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40172f:	48 3b 04 d1          	cmp    (%rcx,%rdx,8),%rax
  401733:	0f 83 3c 00 00 00    	jae    401775 <par_merge_sort+0x295>
  401739:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40173d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  401741:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401745:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401749:	48 8b 09             	mov    (%rcx),%rcx
  40174c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  401750:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  401754:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  401758:	48 05 01 00 00 00    	add    $0x1,%rax
  40175e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  401762:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  401766:	48 05 01 00 00 00    	add    $0x1,%rax
  40176c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  401770:	e9 37 00 00 00       	jmpq   4017ac <par_merge_sort+0x2cc>
  401775:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401779:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  40177d:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401781:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401785:	48 8b 09             	mov    (%rcx),%rcx
  401788:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40178c:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  401790:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401794:	48 05 01 00 00 00    	add    $0x1,%rax
  40179a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  40179e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  4017a2:	48 05 01 00 00 00    	add    $0x1,%rax
  4017a8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  4017ac:	e9 30 ff ff ff       	jmpq   4016e1 <par_merge_sort+0x201>
  4017b1:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  4017b5:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
  4017b9:	0f 83 38 00 00 00    	jae    4017f7 <par_merge_sort+0x317>
  4017bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4017c3:	48 8b 00             	mov    (%rax),%rax
  4017c6:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  4017ca:	48 c1 e1 03          	shl    $0x3,%rcx
  4017ce:	48 01 c8             	add    %rcx,%rax
  4017d1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4017d5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  4017d9:	48 c1 e2 03          	shl    $0x3,%rdx
  4017dd:	48 01 d1             	add    %rdx,%rcx
  4017e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4017e4:	48 2b 55 90          	sub    -0x70(%rbp),%rdx
  4017e8:	48 c1 e2 03          	shl    $0x3,%rdx
  4017ec:	48 89 c7             	mov    %rax,%rdi
  4017ef:	48 89 ce             	mov    %rcx,%rsi
  4017f2:	e8 99 f8 ff ff       	callq  401090 <memcpy@plt>
  4017f7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  4017fb:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
  4017ff:	0f 83 38 00 00 00    	jae    40183d <par_merge_sort+0x35d>
  401805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401809:	48 8b 00             	mov    (%rax),%rax
  40180c:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  401810:	48 c1 e1 03          	shl    $0x3,%rcx
  401814:	48 01 c8             	add    %rcx,%rax
  401817:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40181b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40181f:	48 c1 e2 03          	shl    $0x3,%rdx
  401823:	48 01 d1             	add    %rdx,%rcx
  401826:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40182a:	48 2b 55 88          	sub    -0x78(%rbp),%rdx
  40182e:	48 c1 e2 03          	shl    $0x3,%rdx
  401832:	48 89 c7             	mov    %rax,%rdi
  401835:	48 89 ce             	mov    %rcx,%rsi
  401838:	e8 53 f8 ff ff       	callq  401090 <memcpy@plt>
  40183d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  401841:	e8 ea f7 ff ff       	callq  401030 <free@plt>
  401846:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40184a:	48 89 c7             	mov    %rax,%rdi
  40184d:	e8 de f7 ff ff       	callq  401030 <free@plt>
  401852:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401856:	48 89 c7             	mov    %rax,%rdi
  401859:	e8 d2 f7 ff ff       	callq  401030 <free@plt>
  40185e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401865:	00 
  401866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40186a:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  401871:	5d                   	pop    %rbp
  401872:	c3                   	retq   
  401873:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40187a:	00 00 00 
  40187d:	0f 1f 00             	nopl   (%rax)

0000000000401880 <better_par_merge_sort>:
  401880:	55                   	push   %rbp
  401881:	48 89 e5             	mov    %rsp,%rbp
  401884:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  40188b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40188f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401893:	48 8b 00             	mov    (%rax),%rax
  401896:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40189a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40189e:	48 8b 40 08          	mov    0x8(%rax),%rax
  4018a2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4018a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018aa:	8b 48 10             	mov    0x10(%rax),%ecx
  4018ad:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  4018b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018b4:	8b 48 14             	mov    0x14(%rax),%ecx
  4018b7:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  4018ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4018be:	8a 50 18             	mov    0x18(%rax),%dl
  4018c1:	88 55 d7             	mov    %dl,-0x29(%rbp)
  4018c4:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4018c8:	0f 85 27 00 00 00    	jne    4018f5 <better_par_merge_sort+0x75>
  4018ce:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4018d2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4018d6:	0f be 55 d7          	movsbl -0x29(%rbp),%edx
  4018da:	e8 01 f9 ff ff       	callq  4011e0 <seq_merge_sort>
  4018df:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4018e3:	e8 48 f7 ff ff       	callq  401030 <free@plt>
  4018e8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4018ef:	00 
  4018f0:	e9 ab 04 00 00       	jmpq   401da0 <better_par_merge_sort+0x520>
  4018f5:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
  4018fa:	0f 87 0d 00 00 00    	ja     40190d <better_par_merge_sort+0x8d>
  401900:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401907:	00 
  401908:	e9 93 04 00 00       	jmpq   401da0 <better_par_merge_sort+0x520>
  40190d:	48 63 45 d8          	movslq -0x28(%rbp),%rax
  401911:	48 c1 e0 03          	shl    $0x3,%rax
  401915:	48 89 c7             	mov    %rax,%rdi
  401918:	e8 93 f7 ff ff       	callq  4010b0 <malloc@plt>
  40191d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  401921:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  401928:	00 
  401929:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
  401930:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401933:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  401936:	0f 8d 3b 00 00 00    	jge    401977 <better_par_merge_sort+0xf7>
  40193c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401940:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  401944:	31 d2                	xor    %edx,%edx
  401946:	48 f7 f1             	div    %rcx
  401949:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40194d:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  401951:	48 89 04 f1          	mov    %rax,(%rcx,%rsi,8)
  401955:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401959:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40195d:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401961:	48 03 45 c0          	add    -0x40(%rbp),%rax
  401965:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401969:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40196c:	83 c0 01             	add    $0x1,%eax
  40196f:	89 45 bc             	mov    %eax,-0x44(%rbp)
  401972:	e9 b9 ff ff ff       	jmpq   401930 <better_par_merge_sort+0xb0>
  401977:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40197b:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
  40197f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401983:	8b 55 d8             	mov    -0x28(%rbp),%edx
  401986:	83 ea 01             	sub    $0x1,%edx
  401989:	48 63 f2             	movslq %edx,%rsi
  40198c:	48 03 04 f1          	add    (%rcx,%rsi,8),%rax
  401990:	48 89 04 f1          	mov    %rax,(%rcx,%rsi,8)
  401994:	48 63 45 d8          	movslq -0x28(%rbp),%rax
  401998:	48 c1 e0 03          	shl    $0x3,%rax
  40199c:	48 89 c7             	mov    %rax,%rdi
  40199f:	e8 0c f7 ff ff       	callq  4010b0 <malloc@plt>
  4019a4:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  4019a8:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  4019af:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4019b2:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  4019b5:	0f 8d 78 00 00 00    	jge    401a33 <better_par_merge_sort+0x1b3>
  4019bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4019bf:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  4019c3:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  4019c7:	48 c1 e0 03          	shl    $0x3,%rax
  4019cb:	48 89 c7             	mov    %rax,%rdi
  4019ce:	e8 dd f6 ff ff       	callq  4010b0 <malloc@plt>
  4019d3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4019d7:	48 63 55 ac          	movslq -0x54(%rbp),%rdx
  4019db:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  4019df:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4019e3:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  4019e7:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  4019eb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4019ef:	48 8b 09             	mov    (%rcx),%rcx
  4019f2:	48 63 55 ac          	movslq -0x54(%rbp),%rdx
  4019f6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4019fa:	48 63 7d ac          	movslq -0x54(%rbp),%rdi
  4019fe:	48 0f af 14 fe       	imul   (%rsi,%rdi,8),%rdx
  401a03:	48 c1 e2 03          	shl    $0x3,%rdx
  401a07:	48 01 d1             	add    %rdx,%rcx
  401a0a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  401a0e:	48 63 75 ac          	movslq -0x54(%rbp),%rsi
  401a12:	48 8b 14 f2          	mov    (%rdx,%rsi,8),%rdx
  401a16:	48 c1 e2 03          	shl    $0x3,%rdx
  401a1a:	48 89 c7             	mov    %rax,%rdi
  401a1d:	48 89 ce             	mov    %rcx,%rsi
  401a20:	e8 6b f6 ff ff       	callq  401090 <memcpy@plt>
  401a25:	8b 45 ac             	mov    -0x54(%rbp),%eax
  401a28:	83 c0 01             	add    $0x1,%eax
  401a2b:	89 45 ac             	mov    %eax,-0x54(%rbp)
  401a2e:	e9 7c ff ff ff       	jmpq   4019af <better_par_merge_sort+0x12f>
  401a33:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
  401a37:	0f 84 0f 00 00 00    	je     401a4c <better_par_merge_sort+0x1cc>
  401a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a41:	48 8b 00             	mov    (%rax),%rax
  401a44:	48 89 c7             	mov    %rax,%rdi
  401a47:	e8 e4 f5 ff ff       	callq  401030 <free@plt>
  401a4c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  401a4f:	89 c1                	mov    %eax,%ecx
  401a51:	48 89 e2             	mov    %rsp,%rdx
  401a54:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
  401a58:	48 8d 14 cd 0f 00 00 	lea    0xf(,%rcx,8),%rdx
  401a5f:	00 
  401a60:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
  401a64:	48 89 e6             	mov    %rsp,%rsi
  401a67:	48 29 d6             	sub    %rdx,%rsi
  401a6a:	48 89 f4             	mov    %rsi,%rsp
  401a6d:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
  401a71:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
  401a78:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  401a7f:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401a82:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  401a85:	83 e9 01             	sub    $0x1,%ecx
  401a88:	39 c8                	cmp    %ecx,%eax
  401a8a:	0f 8d 85 00 00 00    	jge    401b15 <better_par_merge_sort+0x295>
  401a90:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  401a94:	48 c1 e0 03          	shl    $0x3,%rax
  401a98:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  401a9f:	48 01 c1             	add    %rax,%rcx
  401aa2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401aa6:	48 63 55 94          	movslq -0x6c(%rbp),%rdx
  401aaa:	48 c1 e2 03          	shl    $0x3,%rdx
  401aae:	48 01 d0             	add    %rdx,%rax
  401ab1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  401ab5:	48 63 75 94          	movslq -0x6c(%rbp),%rsi
  401ab9:	48 8b 34 f2          	mov    (%rdx,%rsi,8),%rsi
  401abd:	8b 7d dc             	mov    -0x24(%rbp),%edi
  401ac0:	83 ef 01             	sub    $0x1,%edi
  401ac3:	44 8b 45 d8          	mov    -0x28(%rbp),%r8d
  401ac7:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
  401acd:	48 89 c7             	mov    %rax,%rdi
  401ad0:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
  401ad6:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
  401add:	44 89 c1             	mov    %r8d,%ecx
  401ae0:	44 0f be 45 d7       	movsbl -0x29(%rbp),%r8d
  401ae5:	e8 86 f9 ff ff       	callq  401470 <proxy_args>
  401aea:	31 c9                	xor    %ecx,%ecx
  401aec:	89 ce                	mov    %ecx,%esi
  401aee:	48 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%rdi
  401af5:	48 ba 80 18 40 00 00 	movabs $0x401880,%rdx
  401afc:	00 00 00 
  401aff:	48 89 c1             	mov    %rax,%rcx
  401b02:	e8 39 f5 ff ff       	callq  401040 <pthread_create@plt>
  401b07:	8b 45 94             	mov    -0x6c(%rbp),%eax
  401b0a:	83 c0 01             	add    $0x1,%eax
  401b0d:	89 45 94             	mov    %eax,-0x6c(%rbp)
  401b10:	e9 6a ff ff ff       	jmpq   401a7f <better_par_merge_sort+0x1ff>
  401b15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401b19:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  401b1c:	83 e9 01             	sub    $0x1,%ecx
  401b1f:	48 63 d1             	movslq %ecx,%rdx
  401b22:	48 c1 e2 03          	shl    $0x3,%rdx
  401b26:	48 01 d0             	add    %rdx,%rax
  401b29:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  401b2d:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  401b30:	83 e9 01             	sub    $0x1,%ecx
  401b33:	48 63 f1             	movslq %ecx,%rsi
  401b36:	48 8b 34 f2          	mov    (%rdx,%rsi,8),%rsi
  401b3a:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  401b3d:	83 e9 01             	sub    $0x1,%ecx
  401b40:	8b 7d d8             	mov    -0x28(%rbp),%edi
  401b43:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)
  401b49:	48 89 c7             	mov    %rax,%rdi
  401b4c:	89 ca                	mov    %ecx,%edx
  401b4e:	8b 8d 4c ff ff ff    	mov    -0xb4(%rbp),%ecx
  401b54:	44 0f be 45 d7       	movsbl -0x29(%rbp),%r8d
  401b59:	e8 12 f9 ff ff       	callq  401470 <proxy_args>
  401b5e:	48 89 c7             	mov    %rax,%rdi
  401b61:	e8 1a fd ff ff       	callq  401880 <better_par_merge_sort>
  401b66:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
  401b6d:	8b 45 90             	mov    -0x70(%rbp),%eax
  401b70:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  401b73:	83 e9 01             	sub    $0x1,%ecx
  401b76:	39 c8                	cmp    %ecx,%eax
  401b78:	0f 8d 26 00 00 00    	jge    401ba4 <better_par_merge_sort+0x324>
  401b7e:	31 c0                	xor    %eax,%eax
  401b80:	89 c6                	mov    %eax,%esi
  401b82:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  401b86:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  401b8d:	48 8b 3c ca          	mov    (%rdx,%rcx,8),%rdi
  401b91:	e8 2a f5 ff ff       	callq  4010c0 <pthread_join@plt>
  401b96:	8b 45 90             	mov    -0x70(%rbp),%eax
  401b99:	83 c0 01             	add    $0x1,%eax
  401b9c:	89 45 90             	mov    %eax,-0x70(%rbp)
  401b9f:	e9 c9 ff ff ff       	jmpq   401b6d <better_par_merge_sort+0x2ed>
  401ba4:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
  401ba8:	0f 84 17 00 00 00    	je     401bc5 <better_par_merge_sort+0x345>
  401bae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401bb2:	48 c1 e0 03          	shl    $0x3,%rax
  401bb6:	48 89 c7             	mov    %rax,%rdi
  401bb9:	e8 f2 f4 ff ff       	callq  4010b0 <malloc@plt>
  401bbe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401bc2:	48 89 01             	mov    %rax,(%rcx)
  401bc5:	48 63 45 d8          	movslq -0x28(%rbp),%rax
  401bc9:	48 c1 e0 03          	shl    $0x3,%rax
  401bcd:	48 89 c7             	mov    %rax,%rdi
  401bd0:	e8 db f4 ff ff       	callq  4010b0 <malloc@plt>
  401bd5:	31 f6                	xor    %esi,%esi
  401bd7:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  401bdb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401bdf:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  401be3:	48 c1 e1 03          	shl    $0x3,%rcx
  401be7:	48 89 c7             	mov    %rax,%rdi
  401bea:	48 89 ca             	mov    %rcx,%rdx
  401bed:	e8 7e f4 ff ff       	callq  401070 <memset@plt>
  401bf2:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
  401bf9:	00 
  401bfa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  401bfe:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  401c02:	0f 83 18 01 00 00    	jae    401d20 <better_par_merge_sort+0x4a0>
  401c08:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
  401c0f:	33 33 03 
  401c12:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  401c19:	c7 85 74 ff ff ff ff 	movl   $0xffffffff,-0x8c(%rbp)
  401c20:	ff ff ff 
  401c23:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
  401c2a:	00 00 00 
  401c2d:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  401c33:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  401c36:	0f 8d a1 00 00 00    	jge    401cdd <better_par_merge_sort+0x45d>
  401c3c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401c40:	48 63 8d 70 ff ff ff 	movslq -0x90(%rbp),%rcx
  401c47:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401c4b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401c4f:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  401c56:	48 3b 04 d1          	cmp    (%rcx,%rdx,8),%rax
  401c5a:	0f 83 64 00 00 00    	jae    401cc4 <better_par_merge_sort+0x444>
  401c60:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401c64:	48 63 8d 70 ff ff ff 	movslq -0x90(%rbp),%rcx
  401c6b:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401c6f:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  401c73:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  401c7a:	48 8b 0c d1          	mov    (%rcx,%rdx,8),%rcx
  401c7e:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401c82:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
  401c89:	0f 83 35 00 00 00    	jae    401cc4 <better_par_merge_sort+0x444>
  401c8f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401c93:	48 63 8d 70 ff ff ff 	movslq -0x90(%rbp),%rcx
  401c9a:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401c9e:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  401ca2:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  401ca9:	48 8b 0c d1          	mov    (%rcx,%rdx,8),%rcx
  401cad:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401cb1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  401cb8:	8b b5 70 ff ff ff    	mov    -0x90(%rbp),%esi
  401cbe:	89 b5 74 ff ff ff    	mov    %esi,-0x8c(%rbp)
  401cc4:	e9 00 00 00 00       	jmpq   401cc9 <better_par_merge_sort+0x449>
  401cc9:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  401ccf:	83 c0 01             	add    $0x1,%eax
  401cd2:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  401cd8:	e9 50 ff ff ff       	jmpq   401c2d <better_par_merge_sort+0x3ad>
  401cdd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401ce4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401ce8:	48 8b 09             	mov    (%rcx),%rcx
  401ceb:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  401cef:	48 89 04 d1          	mov    %rax,(%rcx,%rdx,8)
  401cf3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401cf7:	48 63 8d 74 ff ff ff 	movslq -0x8c(%rbp),%rcx
  401cfe:	48 8b 14 c8          	mov    (%rax,%rcx,8),%rdx
  401d02:	48 81 c2 01 00 00 00 	add    $0x1,%rdx
  401d09:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
  401d0d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  401d11:	48 05 01 00 00 00    	add    $0x1,%rax
  401d17:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  401d1b:	e9 da fe ff ff       	jmpq   401bfa <better_par_merge_sort+0x37a>
  401d20:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  401d24:	e8 07 f3 ff ff       	callq  401030 <free@plt>
  401d29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401d2d:	48 89 c7             	mov    %rax,%rdi
  401d30:	e8 fb f2 ff ff       	callq  401030 <free@plt>
  401d35:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
  401d3c:	00 00 00 
  401d3f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  401d45:	3b 45 d8             	cmp    -0x28(%rbp),%eax
  401d48:	0f 8d 2b 00 00 00    	jge    401d79 <better_par_merge_sort+0x4f9>
  401d4e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401d52:	48 63 8d 6c ff ff ff 	movslq -0x94(%rbp),%rcx
  401d59:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401d5d:	48 89 c7             	mov    %rax,%rdi
  401d60:	e8 cb f2 ff ff       	callq  401030 <free@plt>
  401d65:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  401d6b:	83 c0 01             	add    $0x1,%eax
  401d6e:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  401d74:	e9 c6 ff ff ff       	jmpq   401d3f <better_par_merge_sort+0x4bf>
  401d79:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  401d7d:	48 89 c7             	mov    %rax,%rdi
  401d80:	e8 ab f2 ff ff       	callq  401030 <free@plt>
  401d85:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  401d89:	48 89 c7             	mov    %rax,%rdi
  401d8c:	e8 9f f2 ff ff       	callq  401030 <free@plt>
  401d91:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401d98:	00 
  401d99:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  401d9d:	48 89 c4             	mov    %rax,%rsp
  401da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401da4:	48 89 ec             	mov    %rbp,%rsp
  401da7:	5d                   	pop    %rbp
  401da8:	c3                   	retq   
  401da9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401db0 <generateData>:
  401db0:	55                   	push   %rbp
  401db1:	48 89 e5             	mov    %rsp,%rbp
  401db4:	48 83 ec 20          	sub    $0x20,%rsp
  401db8:	31 c0                	xor    %eax,%eax
  401dba:	89 c1                	mov    %eax,%ecx
  401dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401dc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401dc4:	48 89 cf             	mov    %rcx,%rdi
  401dc7:	e8 d4 f2 ff ff       	callq  4010a0 <time@plt>
  401dcc:	89 c7                	mov    %eax,%edi
  401dce:	e8 ad f2 ff ff       	callq  401080 <srand@plt>
  401dd3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  401dda:	00 
  401ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401ddf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  401de3:	0f 83 2a 00 00 00    	jae    401e13 <generateData+0x63>
  401de9:	e8 f2 f2 ff ff       	callq  4010e0 <rand@plt>
  401dee:	48 63 c8             	movslq %eax,%rcx
  401df1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401df5:	48 8b 12             	mov    (%rdx),%rdx
  401df8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  401dfc:	48 89 0c f2          	mov    %rcx,(%rdx,%rsi,8)
  401e00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e04:	48 05 01 00 00 00    	add    $0x1,%rax
  401e0a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401e0e:	e9 c8 ff ff ff       	jmpq   401ddb <generateData+0x2b>
  401e13:	48 83 c4 20          	add    $0x20,%rsp
  401e17:	5d                   	pop    %rbp
  401e18:	c3                   	retq   
  401e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401e20 <isSorted>:
  401e20:	55                   	push   %rbp
  401e21:	48 89 e5             	mov    %rsp,%rbp
  401e24:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  401e28:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  401e2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e30:	48 8b 00             	mov    (%rax),%rax
  401e33:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  401e37:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  401e3e:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  401e42:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  401e46:	0f 83 35 00 00 00    	jae    401e81 <isSorted+0x61>
  401e4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401e50:	48 63 4d dc          	movslq -0x24(%rbp),%rcx
  401e54:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
  401e58:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
  401e5c:	0f 82 05 00 00 00    	jb     401e67 <isSorted+0x47>
  401e62:	e9 0c 00 00 00       	jmpq   401e73 <isSorted+0x53>
  401e67:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401e6e:	e9 15 00 00 00       	jmpq   401e88 <isSorted+0x68>
  401e73:	8b 45 dc             	mov    -0x24(%rbp),%eax
  401e76:	83 c0 01             	add    $0x1,%eax
  401e79:	89 45 dc             	mov    %eax,-0x24(%rbp)
  401e7c:	e9 bd ff ff ff       	jmpq   401e3e <isSorted+0x1e>
  401e81:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401e88:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401e8b:	5d                   	pop    %rbp
  401e8c:	c3                   	retq   
  401e8d:	0f 1f 00             	nopl   (%rax)

0000000000401e90 <main>:
  401e90:	55                   	push   %rbp
  401e91:	48 89 e5             	mov    %rsp,%rbp
  401e94:	48 83 ec 70          	sub    $0x70,%rsp
  401e98:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401e9f:	89 7d f8             	mov    %edi,-0x8(%rbp)
  401ea2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401ea6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401eaa:	48 8b 78 08          	mov    0x8(%rax),%rdi
  401eae:	e8 1d f2 ff ff       	callq  4010d0 <atoi@plt>
  401eb3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401eb6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401eba:	48 8b 79 10          	mov    0x10(%rcx),%rdi
  401ebe:	e8 0d f2 ff ff       	callq  4010d0 <atoi@plt>
  401ec3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401ec6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401eca:	48 8b 79 18          	mov    0x18(%rcx),%rdi
  401ece:	e8 fd f1 ff ff       	callq  4010d0 <atoi@plt>
  401ed3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  401ed6:	48 63 4d e4          	movslq -0x1c(%rbp),%rcx
  401eda:	48 c1 e1 03          	shl    $0x3,%rcx
  401ede:	48 89 cf             	mov    %rcx,%rdi
  401ee1:	e8 ca f1 ff ff       	callq  4010b0 <malloc@plt>
  401ee6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  401eea:	48 63 75 e4          	movslq -0x1c(%rbp),%rsi
  401eee:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
  401ef2:	e8 b9 fe ff ff       	callq  401db0 <generateData>
  401ef7:	bf 04 00 00 00       	mov    $0x4,%edi
  401efc:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
  401f00:	e8 4b f1 ff ff       	callq  401050 <clock_gettime@plt>
  401f05:	48 63 75 e4          	movslq -0x1c(%rbp),%rsi
  401f09:	8b 55 ec             	mov    -0x14(%rbp),%edx
  401f0c:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  401f0f:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
  401f13:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  401f19:	89 45 ac             	mov    %eax,-0x54(%rbp)
  401f1c:	e8 4f f5 ff ff       	callq  401470 <proxy_args>
  401f21:	48 89 c7             	mov    %rax,%rdi
  401f24:	e8 57 f9 ff ff       	callq  401880 <better_par_merge_sort>
  401f29:	bf 04 00 00 00       	mov    $0x4,%edi
  401f2e:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi
  401f32:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  401f36:	e8 15 f1 ff ff       	callq  401050 <clock_gettime@plt>
  401f3b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  401f3f:	48 2b 75 c8          	sub    -0x38(%rbp),%rsi
  401f43:	48 69 f6 e8 03 00 00 	imul   $0x3e8,%rsi,%rsi
  401f4a:	4c 8b 4d c0          	mov    -0x40(%rbp),%r9
  401f4e:	4c 2b 4d d0          	sub    -0x30(%rbp),%r9
  401f52:	89 45 9c             	mov    %eax,-0x64(%rbp)
  401f55:	4c 89 c8             	mov    %r9,%rax
  401f58:	48 99                	cqto   
  401f5a:	41 b9 40 42 0f 00    	mov    $0xf4240,%r9d
  401f60:	49 f7 f9             	idiv   %r9
  401f63:	48 01 c6             	add    %rax,%rsi
  401f66:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  401f6a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  401f6e:	48 bf 04 30 40 00 00 	movabs $0x403004,%rdi
  401f75:	00 00 00 
  401f78:	b0 00                	mov    $0x0,%al
  401f7a:	e8 e1 f0 ff ff       	callq  401060 <printf@plt>
  401f7f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  401f83:	48 89 f7             	mov    %rsi,%rdi
  401f86:	89 45 98             	mov    %eax,-0x68(%rbp)
  401f89:	e8 a2 f0 ff ff       	callq  401030 <free@plt>
  401f8e:	31 c0                	xor    %eax,%eax
  401f90:	48 83 c4 70          	add    $0x70,%rsp
  401f94:	5d                   	pop    %rbp
  401f95:	c3                   	retq   
  401f96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f9d:	00 00 00 

0000000000401fa0 <__libc_csu_init>:
  401fa0:	f3 0f 1e fa          	endbr64 
  401fa4:	41 57                	push   %r15
  401fa6:	4c 8d 3d 53 2e 00 00 	lea    0x2e53(%rip),%r15        # 404e00 <__frame_dummy_init_array_entry>
  401fad:	41 56                	push   %r14
  401faf:	49 89 d6             	mov    %rdx,%r14
  401fb2:	41 55                	push   %r13
  401fb4:	49 89 f5             	mov    %rsi,%r13
  401fb7:	41 54                	push   %r12
  401fb9:	41 89 fc             	mov    %edi,%r12d
  401fbc:	55                   	push   %rbp
  401fbd:	48 8d 2d 44 2e 00 00 	lea    0x2e44(%rip),%rbp        # 404e08 <__do_global_dtors_aux_fini_array_entry>
  401fc4:	53                   	push   %rbx
  401fc5:	4c 29 fd             	sub    %r15,%rbp
  401fc8:	48 83 ec 08          	sub    $0x8,%rsp
  401fcc:	e8 2f f0 ff ff       	callq  401000 <_init>
  401fd1:	48 c1 fd 03          	sar    $0x3,%rbp
  401fd5:	74 1f                	je     401ff6 <__libc_csu_init+0x56>
  401fd7:	31 db                	xor    %ebx,%ebx
  401fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401fe0:	4c 89 f2             	mov    %r14,%rdx
  401fe3:	4c 89 ee             	mov    %r13,%rsi
  401fe6:	44 89 e7             	mov    %r12d,%edi
  401fe9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  401fed:	48 83 c3 01          	add    $0x1,%rbx
  401ff1:	48 39 dd             	cmp    %rbx,%rbp
  401ff4:	75 ea                	jne    401fe0 <__libc_csu_init+0x40>
  401ff6:	48 83 c4 08          	add    $0x8,%rsp
  401ffa:	5b                   	pop    %rbx
  401ffb:	5d                   	pop    %rbp
  401ffc:	41 5c                	pop    %r12
  401ffe:	41 5d                	pop    %r13
  402000:	41 5e                	pop    %r14
  402002:	41 5f                	pop    %r15
  402004:	c3                   	retq   
  402005:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40200c:	00 00 00 00 

0000000000402010 <__libc_csu_fini>:
  402010:	f3 0f 1e fa          	endbr64 
  402014:	c3                   	retq   

Disassembly of section .fini:

0000000000402018 <_fini>:
  402018:	f3 0f 1e fa          	endbr64 
  40201c:	48 83 ec 08          	sub    $0x8,%rsp
  402020:	48 83 c4 08          	add    $0x8,%rsp
  402024:	c3                   	retq