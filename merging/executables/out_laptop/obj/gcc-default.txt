../executables/out_laptop/merge-gcc-default-bench.exe:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 3a 3f 00 00    	pushq  0x3f3a(%rip)        # 4f60 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 3b 3f 00 00 	bnd jmpq *0x3f3b(%rip)        # 4f68 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop

Disassembly of section .plt.got:

0000000000001100 <__cxa_finalize@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 ed 3e 00 00 	bnd jmpq *0x3eed(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001110 <free@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 55 3e 00 00 	bnd jmpq *0x3e55(%rip)        # 4f70 <free@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <pthread_create@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 4d 3e 00 00 	bnd jmpq *0x3e4d(%rip)        # 4f78 <pthread_create@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <clock_gettime@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 45 3e 00 00 	bnd jmpq *0x3e45(%rip)        # 4f80 <clock_gettime@GLIBC_2.17>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <__stack_chk_fail@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 3d 3e 00 00 	bnd jmpq *0x3e3d(%rip)        # 4f88 <__stack_chk_fail@GLIBC_2.4>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <printf@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 35 3e 00 00 	bnd jmpq *0x3e35(%rip)        # 4f90 <printf@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <memset@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 2d 3e 00 00 	bnd jmpq *0x3e2d(%rip)        # 4f98 <memset@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <srand@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 25 3e 00 00 	bnd jmpq *0x3e25(%rip)        # 4fa0 <srand@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <memcpy@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 1d 3e 00 00 	bnd jmpq *0x3e1d(%rip)        # 4fa8 <memcpy@GLIBC_2.14>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <time@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 15 3e 00 00 	bnd jmpq *0x3e15(%rip)        # 4fb0 <time@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <malloc@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 0d 3e 00 00 	bnd jmpq *0x3e0d(%rip)        # 4fb8 <malloc@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <pthread_join@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 05 3e 00 00 	bnd jmpq *0x3e05(%rip)        # 4fc0 <pthread_join@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <atoi@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 fd 3d 00 00 	bnd jmpq *0x3dfd(%rip)        # 4fc8 <atoi@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <rand@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 f5 3d 00 00 	bnd jmpq *0x3df5(%rip)        # 4fd0 <rand@GLIBC_2.2.5>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011e0 <_start>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	31 ed                	xor    %ebp,%ebp
    11e6:	49 89 d1             	mov    %rdx,%r9
    11e9:	5e                   	pop    %rsi
    11ea:	48 89 e2             	mov    %rsp,%rdx
    11ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11f1:	50                   	push   %rax
    11f2:	54                   	push   %rsp
    11f3:	4c 8d 05 46 11 00 00 	lea    0x1146(%rip),%r8        # 2340 <__libc_csu_fini>
    11fa:	48 8d 0d cf 10 00 00 	lea    0x10cf(%rip),%rcx        # 22d0 <__libc_csu_init>
    1201:	48 8d 3d 5d 0f 00 00 	lea    0xf5d(%rip),%rdi        # 2165 <main>
    1208:	ff 15 d2 3d 00 00    	callq  *0x3dd2(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    120e:	f4                   	hlt    
    120f:	90                   	nop

0000000000001210 <deregister_tm_clones>:
    1210:	48 8d 3d f9 3d 00 00 	lea    0x3df9(%rip),%rdi        # 5010 <__TMC_END__>
    1217:	48 8d 05 f2 3d 00 00 	lea    0x3df2(%rip),%rax        # 5010 <__TMC_END__>
    121e:	48 39 f8             	cmp    %rdi,%rax
    1221:	74 15                	je     1238 <deregister_tm_clones+0x28>
    1223:	48 8b 05 ae 3d 00 00 	mov    0x3dae(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable>
    122a:	48 85 c0             	test   %rax,%rax
    122d:	74 09                	je     1238 <deregister_tm_clones+0x28>
    122f:	ff e0                	jmpq   *%rax
    1231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1238:	c3                   	retq   
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001240 <register_tm_clones>:
    1240:	48 8d 3d c9 3d 00 00 	lea    0x3dc9(%rip),%rdi        # 5010 <__TMC_END__>
    1247:	48 8d 35 c2 3d 00 00 	lea    0x3dc2(%rip),%rsi        # 5010 <__TMC_END__>
    124e:	48 29 fe             	sub    %rdi,%rsi
    1251:	48 89 f0             	mov    %rsi,%rax
    1254:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1258:	48 c1 f8 03          	sar    $0x3,%rax
    125c:	48 01 c6             	add    %rax,%rsi
    125f:	48 d1 fe             	sar    %rsi
    1262:	74 14                	je     1278 <register_tm_clones+0x38>
    1264:	48 8b 05 85 3d 00 00 	mov    0x3d85(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable>
    126b:	48 85 c0             	test   %rax,%rax
    126e:	74 08                	je     1278 <register_tm_clones+0x38>
    1270:	ff e0                	jmpq   *%rax
    1272:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1278:	c3                   	retq   
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <__do_global_dtors_aux>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	80 3d 85 3d 00 00 00 	cmpb   $0x0,0x3d85(%rip)        # 5010 <__TMC_END__>
    128b:	75 2b                	jne    12b8 <__do_global_dtors_aux+0x38>
    128d:	55                   	push   %rbp
    128e:	48 83 3d 62 3d 00 00 	cmpq   $0x0,0x3d62(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    1295:	00 
    1296:	48 89 e5             	mov    %rsp,%rbp
    1299:	74 0c                	je     12a7 <__do_global_dtors_aux+0x27>
    129b:	48 8b 3d 66 3d 00 00 	mov    0x3d66(%rip),%rdi        # 5008 <__dso_handle>
    12a2:	e8 59 fe ff ff       	callq  1100 <__cxa_finalize@plt>
    12a7:	e8 64 ff ff ff       	callq  1210 <deregister_tm_clones>
    12ac:	c6 05 5d 3d 00 00 01 	movb   $0x1,0x3d5d(%rip)        # 5010 <__TMC_END__>
    12b3:	5d                   	pop    %rbp
    12b4:	c3                   	retq   
    12b5:	0f 1f 00             	nopl   (%rax)
    12b8:	c3                   	retq   
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012c0 <frame_dummy>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	e9 77 ff ff ff       	jmpq   1240 <register_tm_clones>

00000000000012c9 <seq_merge_sort>:
    12c9:	f3 0f 1e fa          	endbr64 
    12cd:	55                   	push   %rbp
    12ce:	48 89 e5             	mov    %rsp,%rbp
    12d1:	48 83 ec 60          	sub    $0x60,%rsp
    12d5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    12d9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    12dd:	89 d0                	mov    %edx,%eax
    12df:	88 45 ac             	mov    %al,-0x54(%rbp)
    12e2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    12e9:	00 00 
    12eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12ef:	31 c0                	xor    %eax,%eax
    12f1:	48 83 7d b0 01       	cmpq   $0x1,-0x50(%rbp)
    12f6:	0f 86 5b 02 00 00    	jbe    1557 <seq_merge_sort+0x28e>
    12fc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1300:	48 d1 e8             	shr    %rax
    1303:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1307:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    130b:	48 c1 e0 03          	shl    $0x3,%rax
    130f:	48 89 c7             	mov    %rax,%rdi
    1312:	e8 89 fe ff ff       	callq  11a0 <malloc@plt>
    1317:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    131b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1326:	00 
    1327:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    132b:	48 8b 08             	mov    (%rax),%rcx
    132e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1332:	48 89 ce             	mov    %rcx,%rsi
    1335:	48 89 c7             	mov    %rax,%rdi
    1338:	e8 43 fe ff ff       	callq  1180 <memcpy@plt>
    133d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1341:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    1345:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1349:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    134d:	48 c1 e0 03          	shl    $0x3,%rax
    1351:	48 89 c7             	mov    %rax,%rdi
    1354:	e8 47 fe ff ff       	callq  11a0 <malloc@plt>
    1359:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    135d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1361:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1368:	00 
    1369:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    136d:	48 8b 00             	mov    (%rax),%rax
    1370:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1374:	48 c1 e1 03          	shl    $0x3,%rcx
    1378:	48 01 c1             	add    %rax,%rcx
    137b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    137f:	48 89 ce             	mov    %rcx,%rsi
    1382:	48 89 c7             	mov    %rax,%rdi
    1385:	e8 f6 fd ff ff       	callq  1180 <memcpy@plt>
    138a:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    138e:	74 0f                	je     139f <seq_merge_sort+0xd6>
    1390:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1394:	48 8b 00             	mov    (%rax),%rax
    1397:	48 89 c7             	mov    %rax,%rdi
    139a:	e8 71 fd ff ff       	callq  1110 <free@plt>
    139f:	0f be 55 ac          	movsbl -0x54(%rbp),%edx
    13a3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    13a7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13ab:	48 89 ce             	mov    %rcx,%rsi
    13ae:	48 89 c7             	mov    %rax,%rdi
    13b1:	e8 13 ff ff ff       	callq  12c9 <seq_merge_sort>
    13b6:	0f be 55 ac          	movsbl -0x54(%rbp),%edx
    13ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    13be:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    13c2:	48 89 ce             	mov    %rcx,%rsi
    13c5:	48 89 c7             	mov    %rax,%rdi
    13c8:	e8 fc fe ff ff       	callq  12c9 <seq_merge_sort>
    13cd:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    13d1:	74 1a                	je     13ed <seq_merge_sort+0x124>
    13d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    13d7:	48 c1 e0 03          	shl    $0x3,%rax
    13db:	48 89 c7             	mov    %rax,%rdi
    13de:	e8 bd fd ff ff       	callq  11a0 <malloc@plt>
    13e3:	48 89 c2             	mov    %rax,%rdx
    13e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13ea:	48 89 10             	mov    %rdx,(%rax)
    13ed:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    13f4:	00 
    13f5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    13fc:	00 
    13fd:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1404:	00 
    1405:	e9 8f 00 00 00       	jmpq   1499 <seq_merge_sort+0x1d0>
    140a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    140e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1412:	48 c1 e2 03          	shl    $0x3,%rdx
    1416:	48 01 d0             	add    %rdx,%rax
    1419:	48 8b 10             	mov    (%rax),%rdx
    141c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1420:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1424:	48 c1 e1 03          	shl    $0x3,%rcx
    1428:	48 01 c8             	add    %rcx,%rax
    142b:	48 8b 00             	mov    (%rax),%rax
    142e:	48 39 c2             	cmp    %rax,%rdx
    1431:	73 34                	jae    1467 <seq_merge_sort+0x19e>
    1433:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1437:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    143b:	48 c1 e2 03          	shl    $0x3,%rdx
    143f:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    1443:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1447:	48 8b 00             	mov    (%rax),%rax
    144a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    144e:	48 c1 e2 03          	shl    $0x3,%rdx
    1452:	48 01 c2             	add    %rax,%rdx
    1455:	48 8b 01             	mov    (%rcx),%rax
    1458:	48 89 02             	mov    %rax,(%rdx)
    145b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    1460:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    1465:	eb 32                	jmp    1499 <seq_merge_sort+0x1d0>
    1467:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    146b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    146f:	48 c1 e2 03          	shl    $0x3,%rdx
    1473:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    1477:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147b:	48 8b 00             	mov    (%rax),%rax
    147e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1482:	48 c1 e2 03          	shl    $0x3,%rdx
    1486:	48 01 c2             	add    %rax,%rdx
    1489:	48 8b 01             	mov    (%rcx),%rax
    148c:	48 89 02             	mov    %rax,(%rdx)
    148f:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    1494:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    1499:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    149d:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    14a1:	73 0e                	jae    14b1 <seq_merge_sort+0x1e8>
    14a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14a7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    14ab:	0f 82 59 ff ff ff    	jb     140a <seq_merge_sort+0x141>
    14b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14b5:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    14b9:	73 3c                	jae    14f7 <seq_merge_sort+0x22e>
    14bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14bf:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    14c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    14ca:	00 
    14cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    14cf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    14d3:	48 c1 e1 03          	shl    $0x3,%rcx
    14d7:	48 01 c1             	add    %rax,%rcx
    14da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14de:	48 8b 00             	mov    (%rax),%rax
    14e1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    14e5:	48 c1 e6 03          	shl    $0x3,%rsi
    14e9:	48 01 f0             	add    %rsi,%rax
    14ec:	48 89 ce             	mov    %rcx,%rsi
    14ef:	48 89 c7             	mov    %rax,%rdi
    14f2:	e8 89 fc ff ff       	callq  1180 <memcpy@plt>
    14f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14fb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    14ff:	73 3c                	jae    153d <seq_merge_sort+0x274>
    1501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1505:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    1509:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1510:	00 
    1511:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1515:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1519:	48 c1 e1 03          	shl    $0x3,%rcx
    151d:	48 01 c1             	add    %rax,%rcx
    1520:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1524:	48 8b 00             	mov    (%rax),%rax
    1527:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    152b:	48 c1 e6 03          	shl    $0x3,%rsi
    152f:	48 01 f0             	add    %rsi,%rax
    1532:	48 89 ce             	mov    %rcx,%rsi
    1535:	48 89 c7             	mov    %rax,%rdi
    1538:	e8 43 fc ff ff       	callq  1180 <memcpy@plt>
    153d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1541:	48 89 c7             	mov    %rax,%rdi
    1544:	e8 c7 fb ff ff       	callq  1110 <free@plt>
    1549:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    154d:	48 89 c7             	mov    %rax,%rdi
    1550:	e8 bb fb ff ff       	callq  1110 <free@plt>
    1555:	eb 01                	jmp    1558 <seq_merge_sort+0x28f>
    1557:	90                   	nop
    1558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1563:	00 00 
    1565:	74 05                	je     156c <seq_merge_sort+0x2a3>
    1567:	e8 d4 fb ff ff       	callq  1140 <__stack_chk_fail@plt>
    156c:	c9                   	leaveq 
    156d:	c3                   	retq   

000000000000156e <proxy_args>:
    156e:	f3 0f 1e fa          	endbr64 
    1572:	55                   	push   %rbp
    1573:	48 89 e5             	mov    %rsp,%rbp
    1576:	48 83 ec 30          	sub    $0x30,%rsp
    157a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    157e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1582:	89 55 dc             	mov    %edx,-0x24(%rbp)
    1585:	89 4d d8             	mov    %ecx,-0x28(%rbp)
    1588:	44 89 c0             	mov    %r8d,%eax
    158b:	88 45 d4             	mov    %al,-0x2c(%rbp)
    158e:	bf 19 00 00 00       	mov    $0x19,%edi
    1593:	e8 08 fc ff ff       	callq  11a0 <malloc@plt>
    1598:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    159c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    15a4:	48 89 10             	mov    %rdx,(%rax)
    15a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ab:	48 8d 50 08          	lea    0x8(%rax),%rdx
    15af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15b3:	48 89 02             	mov    %rax,(%rdx)
    15b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ba:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15be:	8b 45 dc             	mov    -0x24(%rbp),%eax
    15c1:	89 02                	mov    %eax,(%rdx)
    15c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15c7:	48 8d 50 14          	lea    0x14(%rax),%rdx
    15cb:	8b 45 d8             	mov    -0x28(%rbp),%eax
    15ce:	89 02                	mov    %eax,(%rdx)
    15d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15d4:	48 8d 50 18          	lea    0x18(%rax),%rdx
    15d8:	0f b6 45 d4          	movzbl -0x2c(%rbp),%eax
    15dc:	88 02                	mov    %al,(%rdx)
    15de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15e2:	c9                   	leaveq 
    15e3:	c3                   	retq   

00000000000015e4 <par_merge_sort>:
    15e4:	f3 0f 1e fa          	endbr64 
    15e8:	55                   	push   %rbp
    15e9:	48 89 e5             	mov    %rsp,%rbp
    15ec:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    15f0:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    15f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    15fb:	00 00 
    15fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1601:	31 c0                	xor    %eax,%eax
    1603:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1607:	48 8b 00             	mov    (%rax),%rax
    160a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    160e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1612:	48 8b 40 08          	mov    0x8(%rax),%rax
    1616:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    161a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    161e:	8b 40 10             	mov    0x10(%rax),%eax
    1621:	89 45 98             	mov    %eax,-0x68(%rbp)
    1624:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1628:	8b 40 14             	mov    0x14(%rax),%eax
    162b:	89 45 9c             	mov    %eax,-0x64(%rbp)
    162e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1632:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    1636:	88 45 97             	mov    %al,-0x69(%rbp)
    1639:	83 7d 98 00          	cmpl   $0x0,-0x68(%rbp)
    163d:	75 2d                	jne    166c <par_merge_sort+0x88>
    163f:	0f be 55 97          	movsbl -0x69(%rbp),%edx
    1643:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1647:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    164b:	48 89 ce             	mov    %rcx,%rsi
    164e:	48 89 c7             	mov    %rax,%rdi
    1651:	e8 73 fc ff ff       	callq  12c9 <seq_merge_sort>
    1656:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    165a:	48 89 c7             	mov    %rax,%rdi
    165d:	e8 ae fa ff ff       	callq  1110 <free@plt>
    1662:	b8 00 00 00 00       	mov    $0x0,%eax
    1667:	e9 f3 02 00 00       	jmpq   195f <par_merge_sort+0x37b>
    166c:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
    1671:	77 0a                	ja     167d <par_merge_sort+0x99>
    1673:	b8 00 00 00 00       	mov    $0x0,%eax
    1678:	e9 e2 02 00 00       	jmpq   195f <par_merge_sort+0x37b>
    167d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1681:	48 d1 e8             	shr    %rax
    1684:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1688:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    168c:	48 c1 e0 03          	shl    $0x3,%rax
    1690:	48 89 c7             	mov    %rax,%rdi
    1693:	e8 08 fb ff ff       	callq  11a0 <malloc@plt>
    1698:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    169c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    16a7:	00 
    16a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16ac:	48 8b 08             	mov    (%rax),%rcx
    16af:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    16b3:	48 89 ce             	mov    %rcx,%rsi
    16b6:	48 89 c7             	mov    %rax,%rdi
    16b9:	e8 c2 fa ff ff       	callq  1180 <memcpy@plt>
    16be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16c2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    16c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    16ce:	48 c1 e0 03          	shl    $0x3,%rax
    16d2:	48 89 c7             	mov    %rax,%rdi
    16d5:	e8 c6 fa ff ff       	callq  11a0 <malloc@plt>
    16da:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    16de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    16e2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    16e9:	00 
    16ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16ee:	48 8b 00             	mov    (%rax),%rax
    16f1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    16f5:	48 c1 e1 03          	shl    $0x3,%rcx
    16f9:	48 01 c1             	add    %rax,%rcx
    16fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1700:	48 89 ce             	mov    %rcx,%rsi
    1703:	48 89 c7             	mov    %rax,%rdi
    1706:	e8 75 fa ff ff       	callq  1180 <memcpy@plt>
    170b:	80 7d 97 00          	cmpb   $0x0,-0x69(%rbp)
    170f:	74 0f                	je     1720 <par_merge_sort+0x13c>
    1711:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1715:	48 8b 00             	mov    (%rax),%rax
    1718:	48 89 c7             	mov    %rax,%rdi
    171b:	e8 f0 f9 ff ff       	callq  1110 <free@plt>
    1720:	0f be 4d 97          	movsbl -0x69(%rbp),%ecx
    1724:	8b 45 98             	mov    -0x68(%rbp),%eax
    1727:	8d 78 ff             	lea    -0x1(%rax),%edi
    172a:	8b 55 9c             	mov    -0x64(%rbp),%edx
    172d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1731:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    1735:	41 89 c8             	mov    %ecx,%r8d
    1738:	89 d1                	mov    %edx,%ecx
    173a:	89 fa                	mov    %edi,%edx
    173c:	48 89 c7             	mov    %rax,%rdi
    173f:	e8 2a fe ff ff       	callq  156e <proxy_args>
    1744:	48 89 c2             	mov    %rax,%rdx
    1747:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    174b:	48 89 d1             	mov    %rdx,%rcx
    174e:	48 8d 15 8f fe ff ff 	lea    -0x171(%rip),%rdx        # 15e4 <par_merge_sort>
    1755:	be 00 00 00 00       	mov    $0x0,%esi
    175a:	48 89 c7             	mov    %rax,%rdi
    175d:	e8 be f9 ff ff       	callq  1120 <pthread_create@plt>
    1762:	0f be 4d 97          	movsbl -0x69(%rbp),%ecx
    1766:	8b 45 98             	mov    -0x68(%rbp),%eax
    1769:	8d 78 ff             	lea    -0x1(%rax),%edi
    176c:	8b 55 9c             	mov    -0x64(%rbp),%edx
    176f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    1773:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    1777:	41 89 c8             	mov    %ecx,%r8d
    177a:	89 d1                	mov    %edx,%ecx
    177c:	89 fa                	mov    %edi,%edx
    177e:	48 89 c7             	mov    %rax,%rdi
    1781:	e8 e8 fd ff ff       	callq  156e <proxy_args>
    1786:	48 89 c2             	mov    %rax,%rdx
    1789:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    178d:	48 89 d1             	mov    %rdx,%rcx
    1790:	48 8d 15 4d fe ff ff 	lea    -0x1b3(%rip),%rdx        # 15e4 <par_merge_sort>
    1797:	be 00 00 00 00       	mov    $0x0,%esi
    179c:	48 89 c7             	mov    %rax,%rdi
    179f:	e8 7c f9 ff ff       	callq  1120 <pthread_create@plt>
    17a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    17a8:	be 00 00 00 00       	mov    $0x0,%esi
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 fb f9 ff ff       	callq  11b0 <pthread_join@plt>
    17b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    17b9:	be 00 00 00 00       	mov    $0x0,%esi
    17be:	48 89 c7             	mov    %rax,%rdi
    17c1:	e8 ea f9 ff ff       	callq  11b0 <pthread_join@plt>
    17c6:	80 7d 97 00          	cmpb   $0x0,-0x69(%rbp)
    17ca:	74 1a                	je     17e6 <par_merge_sort+0x202>
    17cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17d0:	48 c1 e0 03          	shl    $0x3,%rax
    17d4:	48 89 c7             	mov    %rax,%rdi
    17d7:	e8 c4 f9 ff ff       	callq  11a0 <malloc@plt>
    17dc:	48 89 c2             	mov    %rax,%rdx
    17df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17e3:	48 89 10             	mov    %rdx,(%rax)
    17e6:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    17ed:	00 
    17ee:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    17f5:	00 
    17f6:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    17fd:	00 
    17fe:	e9 8f 00 00 00       	jmpq   1892 <par_merge_sort+0x2ae>
    1803:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1807:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    180b:	48 c1 e2 03          	shl    $0x3,%rdx
    180f:	48 01 d0             	add    %rdx,%rax
    1812:	48 8b 10             	mov    (%rax),%rdx
    1815:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1819:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    181d:	48 c1 e1 03          	shl    $0x3,%rcx
    1821:	48 01 c8             	add    %rcx,%rax
    1824:	48 8b 00             	mov    (%rax),%rax
    1827:	48 39 c2             	cmp    %rax,%rdx
    182a:	73 34                	jae    1860 <par_merge_sort+0x27c>
    182c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1830:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1834:	48 c1 e2 03          	shl    $0x3,%rdx
    1838:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    183c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1840:	48 8b 00             	mov    (%rax),%rax
    1843:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1847:	48 c1 e2 03          	shl    $0x3,%rdx
    184b:	48 01 c2             	add    %rax,%rdx
    184e:	48 8b 01             	mov    (%rcx),%rax
    1851:	48 89 02             	mov    %rax,(%rdx)
    1854:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
    1859:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    185e:	eb 32                	jmp    1892 <par_merge_sort+0x2ae>
    1860:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1864:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1868:	48 c1 e2 03          	shl    $0x3,%rdx
    186c:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    1870:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1874:	48 8b 00             	mov    (%rax),%rax
    1877:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    187b:	48 c1 e2 03          	shl    $0x3,%rdx
    187f:	48 01 c2             	add    %rax,%rdx
    1882:	48 8b 01             	mov    (%rcx),%rax
    1885:	48 89 02             	mov    %rax,(%rdx)
    1888:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    188d:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    1892:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1896:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    189a:	73 0e                	jae    18aa <par_merge_sort+0x2c6>
    189c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    18a0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    18a4:	0f 82 59 ff ff ff    	jb     1803 <par_merge_sort+0x21f>
    18aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    18ae:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    18b2:	73 3c                	jae    18f0 <par_merge_sort+0x30c>
    18b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18b8:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    18bc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    18c3:	00 
    18c4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    18c8:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    18cc:	48 c1 e1 03          	shl    $0x3,%rcx
    18d0:	48 01 c1             	add    %rax,%rcx
    18d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18d7:	48 8b 00             	mov    (%rax),%rax
    18da:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    18de:	48 c1 e6 03          	shl    $0x3,%rsi
    18e2:	48 01 f0             	add    %rsi,%rax
    18e5:	48 89 ce             	mov    %rcx,%rsi
    18e8:	48 89 c7             	mov    %rax,%rdi
    18eb:	e8 90 f8 ff ff       	callq  1180 <memcpy@plt>
    18f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    18f4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    18f8:	73 3c                	jae    1936 <par_merge_sort+0x352>
    18fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    18fe:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    1902:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1909:	00 
    190a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    190e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    1912:	48 c1 e1 03          	shl    $0x3,%rcx
    1916:	48 01 c1             	add    %rax,%rcx
    1919:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    191d:	48 8b 00             	mov    (%rax),%rax
    1920:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1924:	48 c1 e6 03          	shl    $0x3,%rsi
    1928:	48 01 f0             	add    %rsi,%rax
    192b:	48 89 ce             	mov    %rcx,%rsi
    192e:	48 89 c7             	mov    %rax,%rdi
    1931:	e8 4a f8 ff ff       	callq  1180 <memcpy@plt>
    1936:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    193a:	48 89 c7             	mov    %rax,%rdi
    193d:	e8 ce f7 ff ff       	callq  1110 <free@plt>
    1942:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1946:	48 89 c7             	mov    %rax,%rdi
    1949:	e8 c2 f7 ff ff       	callq  1110 <free@plt>
    194e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1952:	48 89 c7             	mov    %rax,%rdi
    1955:	e8 b6 f7 ff ff       	callq  1110 <free@plt>
    195a:	b8 00 00 00 00       	mov    $0x0,%eax
    195f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    1963:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    196a:	00 00 
    196c:	74 05                	je     1973 <par_merge_sort+0x38f>
    196e:	e8 cd f7 ff ff       	callq  1140 <__stack_chk_fail@plt>
    1973:	c9                   	leaveq 
    1974:	c3                   	retq   

0000000000001975 <better_par_merge_sort>:
    1975:	f3 0f 1e fa          	endbr64 
    1979:	55                   	push   %rbp
    197a:	48 89 e5             	mov    %rsp,%rbp
    197d:	41 57                	push   %r15
    197f:	41 56                	push   %r14
    1981:	41 55                	push   %r13
    1983:	41 54                	push   %r12
    1985:	53                   	push   %rbx
    1986:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    198d:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    1994:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    199b:	00 00 
    199d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    19a1:	31 c0                	xor    %eax,%eax
    19a3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    19aa:	48 8b 00             	mov    (%rax),%rax
    19ad:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    19b1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    19b8:	48 8b 40 08          	mov    0x8(%rax),%rax
    19bc:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    19c0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    19c7:	8b 40 10             	mov    0x10(%rax),%eax
    19ca:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
    19d0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    19d7:	8b 40 14             	mov    0x14(%rax),%eax
    19da:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
    19e0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    19e7:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    19eb:	88 85 53 ff ff ff    	mov    %al,-0xad(%rbp)
    19f1:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
    19f8:	75 33                	jne    1a2d <better_par_merge_sort+0xb8>
    19fa:	0f be 95 53 ff ff ff 	movsbl -0xad(%rbp),%edx
    1a01:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    1a05:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1a09:	48 89 ce             	mov    %rcx,%rsi
    1a0c:	48 89 c7             	mov    %rax,%rdi
    1a0f:	e8 b5 f8 ff ff       	callq  12c9 <seq_merge_sort>
    1a14:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    1a1b:	48 89 c7             	mov    %rax,%rdi
    1a1e:	e8 ed f6 ff ff       	callq  1110 <free@plt>
    1a23:	b8 00 00 00 00       	mov    $0x0,%eax
    1a28:	e9 57 06 00 00       	jmpq   2084 <better_par_merge_sort+0x70f>
    1a2d:	48 83 7d 98 01       	cmpq   $0x1,-0x68(%rbp)
    1a32:	77 0a                	ja     1a3e <better_par_merge_sort+0xc9>
    1a34:	b8 00 00 00 00       	mov    $0x0,%eax
    1a39:	e9 46 06 00 00       	jmpq   2084 <better_par_merge_sort+0x70f>
    1a3e:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1a44:	48 98                	cltq   
    1a46:	48 c1 e0 03          	shl    $0x3,%rax
    1a4a:	48 89 c7             	mov    %rax,%rdi
    1a4d:	e8 4e f7 ff ff       	callq  11a0 <malloc@plt>
    1a52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    1a56:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    1a5d:	00 00 00 00 
    1a61:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    1a68:	00 00 00 
    1a6b:	eb 57                	jmp    1ac4 <better_par_merge_sort+0x14f>
    1a6d:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1a73:	48 63 d8             	movslq %eax,%rbx
    1a76:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
    1a7c:	48 98                	cltq   
    1a7e:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1a85:	00 
    1a86:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1a8a:	48 01 c1             	add    %rax,%rcx
    1a8d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1a91:	ba 00 00 00 00       	mov    $0x0,%edx
    1a96:	48 f7 f3             	div    %rbx
    1a99:	48 89 01             	mov    %rax,(%rcx)
    1a9c:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
    1aa2:	48 98                	cltq   
    1aa4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1aab:	00 
    1aac:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1ab0:	48 01 d0             	add    %rdx,%rax
    1ab3:	48 8b 00             	mov    (%rax),%rax
    1ab6:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
    1abd:	83 85 60 ff ff ff 01 	addl   $0x1,-0xa0(%rbp)
    1ac4:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
    1aca:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    1ad0:	7c 9b                	jl     1a6d <better_par_merge_sort+0xf8>
    1ad2:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1ad8:	48 98                	cltq   
    1ada:	48 c1 e0 03          	shl    $0x3,%rax
    1ade:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    1ae2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1ae6:	48 01 d0             	add    %rdx,%rax
    1ae9:	48 8b 08             	mov    (%rax),%rcx
    1aec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1af0:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
    1af7:	48 89 c2             	mov    %rax,%rdx
    1afa:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1b00:	48 98                	cltq   
    1b02:	48 c1 e0 03          	shl    $0x3,%rax
    1b06:	48 8d 70 f8          	lea    -0x8(%rax),%rsi
    1b0a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1b0e:	48 01 f0             	add    %rsi,%rax
    1b11:	48 01 ca             	add    %rcx,%rdx
    1b14:	48 89 10             	mov    %rdx,(%rax)
    1b17:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1b1d:	48 98                	cltq   
    1b1f:	48 c1 e0 03          	shl    $0x3,%rax
    1b23:	48 89 c7             	mov    %rax,%rdi
    1b26:	e8 75 f6 ff ff       	callq  11a0 <malloc@plt>
    1b2b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1b2f:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    1b36:	00 00 00 
    1b39:	e9 c6 00 00 00       	jmpq   1c04 <better_par_merge_sort+0x28f>
    1b3e:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1b44:	48 98                	cltq   
    1b46:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1b4d:	00 
    1b4e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1b52:	48 01 d0             	add    %rdx,%rax
    1b55:	48 8b 00             	mov    (%rax),%rax
    1b58:	48 c1 e0 03          	shl    $0x3,%rax
    1b5c:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
    1b62:	48 63 d2             	movslq %edx,%rdx
    1b65:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    1b6c:	00 
    1b6d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1b71:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
    1b75:	48 89 c7             	mov    %rax,%rdi
    1b78:	e8 23 f6 ff ff       	callq  11a0 <malloc@plt>
    1b7d:	48 89 03             	mov    %rax,(%rbx)
    1b80:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1b86:	48 98                	cltq   
    1b88:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1b8f:	00 
    1b90:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1b94:	48 01 d0             	add    %rdx,%rax
    1b97:	48 8b 00             	mov    (%rax),%rax
    1b9a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ba1:	00 
    1ba2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1ba6:	48 8b 00             	mov    (%rax),%rax
    1ba9:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
    1baf:	48 63 f1             	movslq %ecx,%rsi
    1bb2:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
    1bb8:	48 63 c9             	movslq %ecx,%rcx
    1bbb:	48 8d 3c cd 00 00 00 	lea    0x0(,%rcx,8),%rdi
    1bc2:	00 
    1bc3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    1bc7:	48 01 f9             	add    %rdi,%rcx
    1bca:	48 8b 09             	mov    (%rcx),%rcx
    1bcd:	48 0f af ce          	imul   %rsi,%rcx
    1bd1:	48 c1 e1 03          	shl    $0x3,%rcx
    1bd5:	48 01 c1             	add    %rax,%rcx
    1bd8:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1bde:	48 98                	cltq   
    1be0:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    1be7:	00 
    1be8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1bec:	48 01 f0             	add    %rsi,%rax
    1bef:	48 8b 00             	mov    (%rax),%rax
    1bf2:	48 89 ce             	mov    %rcx,%rsi
    1bf5:	48 89 c7             	mov    %rax,%rdi
    1bf8:	e8 83 f5 ff ff       	callq  1180 <memcpy@plt>
    1bfd:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    1c04:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1c0a:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    1c10:	0f 8c 28 ff ff ff    	jl     1b3e <better_par_merge_sort+0x1c9>
    1c16:	80 bd 53 ff ff ff 00 	cmpb   $0x0,-0xad(%rbp)
    1c1d:	74 0f                	je     1c2e <better_par_merge_sort+0x2b9>
    1c1f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1c23:	48 8b 00             	mov    (%rax),%rax
    1c26:	48 89 c7             	mov    %rax,%rdi
    1c29:	e8 e2 f4 ff ff       	callq  1110 <free@plt>
    1c2e:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1c34:	48 89 e2             	mov    %rsp,%rdx
    1c37:	48 89 d3             	mov    %rdx,%rbx
    1c3a:	48 63 d0             	movslq %eax,%rdx
    1c3d:	48 83 ea 01          	sub    $0x1,%rdx
    1c41:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    1c45:	48 63 d0             	movslq %eax,%rdx
    1c48:	49 89 d6             	mov    %rdx,%r14
    1c4b:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    1c51:	48 63 d0             	movslq %eax,%rdx
    1c54:	49 89 d4             	mov    %rdx,%r12
    1c57:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    1c5d:	48 98                	cltq   
    1c5f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c66:	00 
    1c67:	b8 10 00 00 00       	mov    $0x10,%eax
    1c6c:	48 83 e8 01          	sub    $0x1,%rax
    1c70:	48 01 d0             	add    %rdx,%rax
    1c73:	be 10 00 00 00       	mov    $0x10,%esi
    1c78:	ba 00 00 00 00       	mov    $0x0,%edx
    1c7d:	48 f7 f6             	div    %rsi
    1c80:	48 6b c0 10          	imul   $0x10,%rax,%rax
    1c84:	48 89 c2             	mov    %rax,%rdx
    1c87:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    1c8e:	48 89 e6             	mov    %rsp,%rsi
    1c91:	48 29 d6             	sub    %rdx,%rsi
    1c94:	48 89 f2             	mov    %rsi,%rdx
    1c97:	48 39 d4             	cmp    %rdx,%rsp
    1c9a:	74 12                	je     1cae <better_par_merge_sort+0x339>
    1c9c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1ca3:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1caa:	00 00 
    1cac:	eb e9                	jmp    1c97 <better_par_merge_sort+0x322>
    1cae:	48 89 c2             	mov    %rax,%rdx
    1cb1:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1cb7:	48 29 d4             	sub    %rdx,%rsp
    1cba:	48 89 c2             	mov    %rax,%rdx
    1cbd:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1cc3:	48 85 d2             	test   %rdx,%rdx
    1cc6:	74 10                	je     1cd8 <better_par_merge_sort+0x363>
    1cc8:	25 ff 0f 00 00       	and    $0xfff,%eax
    1ccd:	48 83 e8 08          	sub    $0x8,%rax
    1cd1:	48 01 e0             	add    %rsp,%rax
    1cd4:	48 83 08 00          	orq    $0x0,(%rax)
    1cd8:	48 89 e0             	mov    %rsp,%rax
    1cdb:	48 83 c0 07          	add    $0x7,%rax
    1cdf:	48 c1 e8 03          	shr    $0x3,%rax
    1ce3:	48 c1 e0 03          	shl    $0x3,%rax
    1ce7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1ceb:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
    1cf2:	00 00 00 
    1cf5:	e9 8f 00 00 00       	jmpq   1d89 <better_par_merge_sort+0x414>
    1cfa:	0f be 8d 53 ff ff ff 	movsbl -0xad(%rbp),%ecx
    1d01:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    1d07:	8d 70 ff             	lea    -0x1(%rax),%esi
    1d0a:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    1d10:	48 98                	cltq   
    1d12:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1d19:	00 
    1d1a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1d1e:	48 01 d0             	add    %rdx,%rax
    1d21:	48 8b 00             	mov    (%rax),%rax
    1d24:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
    1d2a:	48 63 d2             	movslq %edx,%rdx
    1d2d:	48 8d 3c d5 00 00 00 	lea    0x0(,%rdx,8),%rdi
    1d34:	00 
    1d35:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1d39:	48 01 d7             	add    %rdx,%rdi
    1d3c:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    1d42:	41 89 c8             	mov    %ecx,%r8d
    1d45:	89 d1                	mov    %edx,%ecx
    1d47:	89 f2                	mov    %esi,%edx
    1d49:	48 89 c6             	mov    %rax,%rsi
    1d4c:	e8 1d f8 ff ff       	callq  156e <proxy_args>
    1d51:	48 89 c2             	mov    %rax,%rdx
    1d54:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    1d5a:	48 98                	cltq   
    1d5c:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1d63:	00 
    1d64:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1d68:	48 01 c8             	add    %rcx,%rax
    1d6b:	48 89 d1             	mov    %rdx,%rcx
    1d6e:	48 8d 15 00 fc ff ff 	lea    -0x400(%rip),%rdx        # 1975 <better_par_merge_sort>
    1d75:	be 00 00 00 00       	mov    $0x0,%esi
    1d7a:	48 89 c7             	mov    %rax,%rdi
    1d7d:	e8 9e f3 ff ff       	callq  1120 <pthread_create@plt>
    1d82:	83 85 58 ff ff ff 01 	addl   $0x1,-0xa8(%rbp)
    1d89:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1d8f:	83 e8 01             	sub    $0x1,%eax
    1d92:	39 85 58 ff ff ff    	cmp    %eax,-0xa8(%rbp)
    1d98:	0f 8c 5c ff ff ff    	jl     1cfa <better_par_merge_sort+0x385>
    1d9e:	0f be 8d 53 ff ff ff 	movsbl -0xad(%rbp),%ecx
    1da5:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    1dab:	8d 70 ff             	lea    -0x1(%rax),%esi
    1dae:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1db4:	48 98                	cltq   
    1db6:	48 c1 e0 03          	shl    $0x3,%rax
    1dba:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    1dbe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1dc2:	48 01 d0             	add    %rdx,%rax
    1dc5:	48 8b 00             	mov    (%rax),%rax
    1dc8:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    1dce:	48 63 d2             	movslq %edx,%rdx
    1dd1:	48 c1 e2 03          	shl    $0x3,%rdx
    1dd5:	48 8d 7a f8          	lea    -0x8(%rdx),%rdi
    1dd9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    1ddd:	48 01 d7             	add    %rdx,%rdi
    1de0:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    1de6:	41 89 c8             	mov    %ecx,%r8d
    1de9:	89 d1                	mov    %edx,%ecx
    1deb:	89 f2                	mov    %esi,%edx
    1ded:	48 89 c6             	mov    %rax,%rsi
    1df0:	e8 79 f7 ff ff       	callq  156e <proxy_args>
    1df5:	48 89 c7             	mov    %rax,%rdi
    1df8:	e8 78 fb ff ff       	callq  1975 <better_par_merge_sort>
    1dfd:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    1e04:	00 00 00 
    1e07:	eb 25                	jmp    1e2e <better_par_merge_sort+0x4b9>
    1e09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1e0d:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
    1e13:	48 63 d2             	movslq %edx,%rdx
    1e16:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    1e1a:	be 00 00 00 00       	mov    $0x0,%esi
    1e1f:	48 89 c7             	mov    %rax,%rdi
    1e22:	e8 89 f3 ff ff       	callq  11b0 <pthread_join@plt>
    1e27:	83 85 54 ff ff ff 01 	addl   $0x1,-0xac(%rbp)
    1e2e:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1e34:	83 e8 01             	sub    $0x1,%eax
    1e37:	39 85 54 ff ff ff    	cmp    %eax,-0xac(%rbp)
    1e3d:	7c ca                	jl     1e09 <better_par_merge_sort+0x494>
    1e3f:	80 bd 53 ff ff ff 00 	cmpb   $0x0,-0xad(%rbp)
    1e46:	74 1a                	je     1e62 <better_par_merge_sort+0x4ed>
    1e48:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1e4c:	48 c1 e0 03          	shl    $0x3,%rax
    1e50:	48 89 c7             	mov    %rax,%rdi
    1e53:	e8 48 f3 ff ff       	callq  11a0 <malloc@plt>
    1e58:	48 89 c2             	mov    %rax,%rdx
    1e5b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1e5f:	48 89 10             	mov    %rdx,(%rax)
    1e62:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1e68:	48 98                	cltq   
    1e6a:	48 c1 e0 03          	shl    $0x3,%rax
    1e6e:	48 89 c7             	mov    %rax,%rdi
    1e71:	e8 2a f3 ff ff       	callq  11a0 <malloc@plt>
    1e76:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1e7a:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    1e80:	48 98                	cltq   
    1e82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e89:	00 
    1e8a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1e8e:	be 00 00 00 00       	mov    $0x0,%esi
    1e93:	48 89 c7             	mov    %rax,%rdi
    1e96:	e8 c5 f2 ff ff       	callq  1160 <memset@plt>
    1e9b:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1ea2:	00 
    1ea3:	e9 50 01 00 00       	jmpq   1ff8 <better_par_merge_sort+0x683>
    1ea8:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
    1eaf:	33 33 03 
    1eb2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1eb6:	c7 85 64 ff ff ff ff 	movl   $0xffffffff,-0x9c(%rbp)
    1ebd:	ff ff ff 
    1ec0:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
    1ec7:	00 00 00 
    1eca:	e9 d8 00 00 00       	jmpq   1fa7 <better_par_merge_sort+0x632>
    1ecf:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1ed5:	48 98                	cltq   
    1ed7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ede:	00 
    1edf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1ee3:	48 01 d0             	add    %rdx,%rax
    1ee6:	48 8b 10             	mov    (%rax),%rdx
    1ee9:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1eef:	48 98                	cltq   
    1ef1:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    1ef8:	00 
    1ef9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1efd:	48 01 c8             	add    %rcx,%rax
    1f00:	48 8b 00             	mov    (%rax),%rax
    1f03:	48 39 c2             	cmp    %rax,%rdx
    1f06:	0f 83 94 00 00 00    	jae    1fa0 <better_par_merge_sort+0x62b>
    1f0c:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1f12:	48 98                	cltq   
    1f14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f1b:	00 
    1f1c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1f20:	48 01 d0             	add    %rdx,%rax
    1f23:	48 8b 00             	mov    (%rax),%rax
    1f26:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
    1f2c:	48 63 d2             	movslq %edx,%rdx
    1f2f:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    1f36:	00 
    1f37:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1f3b:	48 01 ca             	add    %rcx,%rdx
    1f3e:	48 8b 12             	mov    (%rdx),%rdx
    1f41:	48 c1 e2 03          	shl    $0x3,%rdx
    1f45:	48 01 d0             	add    %rdx,%rax
    1f48:	48 8b 00             	mov    (%rax),%rax
    1f4b:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    1f4f:	76 4f                	jbe    1fa0 <better_par_merge_sort+0x62b>
    1f51:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1f57:	48 98                	cltq   
    1f59:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f60:	00 
    1f61:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1f65:	48 01 d0             	add    %rdx,%rax
    1f68:	48 8b 00             	mov    (%rax),%rax
    1f6b:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
    1f71:	48 63 d2             	movslq %edx,%rdx
    1f74:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    1f7b:	00 
    1f7c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1f80:	48 01 ca             	add    %rcx,%rdx
    1f83:	48 8b 12             	mov    (%rdx),%rdx
    1f86:	48 c1 e2 03          	shl    $0x3,%rdx
    1f8a:	48 01 d0             	add    %rdx,%rax
    1f8d:	48 8b 00             	mov    (%rax),%rax
    1f90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1f94:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1f9a:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
    1fa0:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%rbp)
    1fa7:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    1fad:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    1fb3:	0f 8c 16 ff ff ff    	jl     1ecf <better_par_merge_sort+0x55a>
    1fb9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1fbd:	48 8b 00             	mov    (%rax),%rax
    1fc0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    1fc4:	48 c1 e2 03          	shl    $0x3,%rdx
    1fc8:	48 01 c2             	add    %rax,%rdx
    1fcb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1fcf:	48 89 02             	mov    %rax,(%rdx)
    1fd2:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    1fd8:	48 98                	cltq   
    1fda:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1fe1:	00 
    1fe2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1fe6:	48 01 d0             	add    %rdx,%rax
    1fe9:	48 8b 10             	mov    (%rax),%rdx
    1fec:	48 83 c2 01          	add    $0x1,%rdx
    1ff0:	48 89 10             	mov    %rdx,(%rax)
    1ff3:	48 83 45 80 01       	addq   $0x1,-0x80(%rbp)
    1ff8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    1ffc:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    2000:	0f 82 a2 fe ff ff    	jb     1ea8 <better_par_merge_sort+0x533>
    2006:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    200d:	48 89 c7             	mov    %rax,%rdi
    2010:	e8 fb f0 ff ff       	callq  1110 <free@plt>
    2015:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2019:	48 89 c7             	mov    %rax,%rdi
    201c:	e8 ef f0 ff ff       	callq  1110 <free@plt>
    2021:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    2028:	00 00 00 
    202b:	eb 29                	jmp    2056 <better_par_merge_sort+0x6e1>
    202d:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    2033:	48 98                	cltq   
    2035:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    203c:	00 
    203d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2041:	48 01 d0             	add    %rdx,%rax
    2044:	48 8b 00             	mov    (%rax),%rax
    2047:	48 89 c7             	mov    %rax,%rdi
    204a:	e8 c1 f0 ff ff       	callq  1110 <free@plt>
    204f:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    2056:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    205c:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    2062:	7c c9                	jl     202d <better_par_merge_sort+0x6b8>
    2064:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2068:	48 89 c7             	mov    %rax,%rdi
    206b:	e8 a0 f0 ff ff       	callq  1110 <free@plt>
    2070:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2074:	48 89 c7             	mov    %rax,%rdi
    2077:	e8 94 f0 ff ff       	callq  1110 <free@plt>
    207c:	b8 00 00 00 00       	mov    $0x0,%eax
    2081:	48 89 dc             	mov    %rbx,%rsp
    2084:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    2088:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    208f:	00 00 
    2091:	74 05                	je     2098 <better_par_merge_sort+0x723>
    2093:	e8 a8 f0 ff ff       	callq  1140 <__stack_chk_fail@plt>
    2098:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    209c:	5b                   	pop    %rbx
    209d:	41 5c                	pop    %r12
    209f:	41 5d                	pop    %r13
    20a1:	41 5e                	pop    %r14
    20a3:	41 5f                	pop    %r15
    20a5:	5d                   	pop    %rbp
    20a6:	c3                   	retq   

00000000000020a7 <generateData>:
    20a7:	f3 0f 1e fa          	endbr64 
    20ab:	55                   	push   %rbp
    20ac:	48 89 e5             	mov    %rsp,%rbp
    20af:	48 83 ec 20          	sub    $0x20,%rsp
    20b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    20b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    20bb:	bf 00 00 00 00       	mov    $0x0,%edi
    20c0:	e8 cb f0 ff ff       	callq  1190 <time@plt>
    20c5:	89 c7                	mov    %eax,%edi
    20c7:	e8 a4 f0 ff ff       	callq  1170 <srand@plt>
    20cc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    20d3:	00 
    20d4:	eb 21                	jmp    20f7 <generateData+0x50>
    20d6:	e8 f5 f0 ff ff       	callq  11d0 <rand@plt>
    20db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    20df:	48 8b 12             	mov    (%rdx),%rdx
    20e2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    20e6:	48 c1 e1 03          	shl    $0x3,%rcx
    20ea:	48 01 ca             	add    %rcx,%rdx
    20ed:	48 98                	cltq   
    20ef:	48 89 02             	mov    %rax,(%rdx)
    20f2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    20f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    20fb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    20ff:	72 d5                	jb     20d6 <generateData+0x2f>
    2101:	90                   	nop
    2102:	90                   	nop
    2103:	c9                   	leaveq 
    2104:	c3                   	retq   

0000000000002105 <isSorted>:
    2105:	f3 0f 1e fa          	endbr64 
    2109:	55                   	push   %rbp
    210a:	48 89 e5             	mov    %rsp,%rbp
    210d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2111:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2119:	48 8b 00             	mov    (%rax),%rax
    211c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2120:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    2127:	eb 2a                	jmp    2153 <isSorted+0x4e>
    2129:	8b 45 f4             	mov    -0xc(%rbp),%eax
    212c:	48 98                	cltq   
    212e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2135:	00 
    2136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    213a:	48 01 d0             	add    %rdx,%rax
    213d:	48 8b 00             	mov    (%rax),%rax
    2140:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    2144:	77 06                	ja     214c <isSorted+0x47>
    2146:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    214a:	eb 07                	jmp    2153 <isSorted+0x4e>
    214c:	b8 00 00 00 00       	mov    $0x0,%eax
    2151:	eb 10                	jmp    2163 <isSorted+0x5e>
    2153:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2156:	48 98                	cltq   
    2158:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    215c:	77 cb                	ja     2129 <isSorted+0x24>
    215e:	b8 01 00 00 00       	mov    $0x1,%eax
    2163:	5d                   	pop    %rbp
    2164:	c3                   	retq   

0000000000002165 <main>:
    2165:	f3 0f 1e fa          	endbr64 
    2169:	55                   	push   %rbp
    216a:	48 89 e5             	mov    %rsp,%rbp
    216d:	48 83 ec 60          	sub    $0x60,%rsp
    2171:	89 7d ac             	mov    %edi,-0x54(%rbp)
    2174:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    2178:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    217f:	00 00 
    2181:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2185:	31 c0                	xor    %eax,%eax
    2187:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    218b:	48 83 c0 08          	add    $0x8,%rax
    218f:	48 8b 00             	mov    (%rax),%rax
    2192:	48 89 c7             	mov    %rax,%rdi
    2195:	e8 26 f0 ff ff       	callq  11c0 <atoi@plt>
    219a:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    219d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    21a1:	48 83 c0 10          	add    $0x10,%rax
    21a5:	48 8b 00             	mov    (%rax),%rax
    21a8:	48 89 c7             	mov    %rax,%rdi
    21ab:	e8 10 f0 ff ff       	callq  11c0 <atoi@plt>
    21b0:	89 45 b8             	mov    %eax,-0x48(%rbp)
    21b3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    21b7:	48 83 c0 18          	add    $0x18,%rax
    21bb:	48 8b 00             	mov    (%rax),%rax
    21be:	48 89 c7             	mov    %rax,%rdi
    21c1:	e8 fa ef ff ff       	callq  11c0 <atoi@plt>
    21c6:	89 45 bc             	mov    %eax,-0x44(%rbp)
    21c9:	8b 45 bc             	mov    -0x44(%rbp),%eax
    21cc:	48 98                	cltq   
    21ce:	48 c1 e0 03          	shl    $0x3,%rax
    21d2:	48 89 c7             	mov    %rax,%rdi
    21d5:	e8 c6 ef ff ff       	callq  11a0 <malloc@plt>
    21da:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    21de:	8b 45 bc             	mov    -0x44(%rbp),%eax
    21e1:	48 63 d0             	movslq %eax,%rdx
    21e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    21e8:	48 89 d6             	mov    %rdx,%rsi
    21eb:	48 89 c7             	mov    %rax,%rdi
    21ee:	e8 b4 fe ff ff       	callq  20a7 <generateData>
    21f3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    21f7:	48 89 c6             	mov    %rax,%rsi
    21fa:	bf 04 00 00 00       	mov    $0x4,%edi
    21ff:	e8 2c ef ff ff       	callq  1130 <clock_gettime@plt>
    2204:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2207:	48 63 f0             	movslq %eax,%rsi
    220a:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    220d:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    2210:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    2214:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    221a:	48 89 c7             	mov    %rax,%rdi
    221d:	e8 4c f3 ff ff       	callq  156e <proxy_args>
    2222:	48 89 c7             	mov    %rax,%rdi
    2225:	e8 4b f7 ff ff       	callq  1975 <better_par_merge_sort>
    222a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    222e:	48 89 c6             	mov    %rax,%rsi
    2231:	bf 04 00 00 00       	mov    $0x4,%edi
    2236:	e8 f5 ee ff ff       	callq  1130 <clock_gettime@plt>
    223b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    223f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2243:	48 29 c2             	sub    %rax,%rdx
    2246:	48 89 d0             	mov    %rdx,%rax
    2249:	48 69 f0 e8 03 00 00 	imul   $0x3e8,%rax,%rsi
    2250:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2254:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2258:	48 89 d1             	mov    %rdx,%rcx
    225b:	48 29 c1             	sub    %rax,%rcx
    225e:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    2265:	de 1b 43 
    2268:	48 89 c8             	mov    %rcx,%rax
    226b:	48 f7 ea             	imul   %rdx
    226e:	48 c1 fa 12          	sar    $0x12,%rdx
    2272:	48 89 c8             	mov    %rcx,%rax
    2275:	48 c1 f8 3f          	sar    $0x3f,%rax
    2279:	48 29 c2             	sub    %rax,%rdx
    227c:	48 89 d0             	mov    %rdx,%rax
    227f:	48 01 f0             	add    %rsi,%rax
    2282:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2286:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    228a:	48 89 c6             	mov    %rax,%rsi
    228d:	48 8d 3d 70 0d 00 00 	lea    0xd70(%rip),%rdi        # 3004 <_IO_stdin_used+0x4>
    2294:	b8 00 00 00 00       	mov    $0x0,%eax
    2299:	e8 b2 ee ff ff       	callq  1150 <printf@plt>
    229e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    22a2:	48 89 c7             	mov    %rax,%rdi
    22a5:	e8 66 ee ff ff       	callq  1110 <free@plt>
    22aa:	b8 00 00 00 00       	mov    $0x0,%eax
    22af:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    22b3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    22ba:	00 00 
    22bc:	74 05                	je     22c3 <main+0x15e>
    22be:	e8 7d ee ff ff       	callq  1140 <__stack_chk_fail@plt>
    22c3:	c9                   	leaveq 
    22c4:	c3                   	retq   
    22c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    22cc:	00 00 00 
    22cf:	90                   	nop

00000000000022d0 <__libc_csu_init>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	41 57                	push   %r15
    22d6:	4c 8d 3d 6b 2a 00 00 	lea    0x2a6b(%rip),%r15        # 4d48 <__frame_dummy_init_array_entry>
    22dd:	41 56                	push   %r14
    22df:	49 89 d6             	mov    %rdx,%r14
    22e2:	41 55                	push   %r13
    22e4:	49 89 f5             	mov    %rsi,%r13
    22e7:	41 54                	push   %r12
    22e9:	41 89 fc             	mov    %edi,%r12d
    22ec:	55                   	push   %rbp
    22ed:	48 8d 2d 5c 2a 00 00 	lea    0x2a5c(%rip),%rbp        # 4d50 <__do_global_dtors_aux_fini_array_entry>
    22f4:	53                   	push   %rbx
    22f5:	4c 29 fd             	sub    %r15,%rbp
    22f8:	48 83 ec 08          	sub    $0x8,%rsp
    22fc:	e8 ff ec ff ff       	callq  1000 <_init>
    2301:	48 c1 fd 03          	sar    $0x3,%rbp
    2305:	74 1f                	je     2326 <__libc_csu_init+0x56>
    2307:	31 db                	xor    %ebx,%ebx
    2309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2310:	4c 89 f2             	mov    %r14,%rdx
    2313:	4c 89 ee             	mov    %r13,%rsi
    2316:	44 89 e7             	mov    %r12d,%edi
    2319:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    231d:	48 83 c3 01          	add    $0x1,%rbx
    2321:	48 39 dd             	cmp    %rbx,%rbp
    2324:	75 ea                	jne    2310 <__libc_csu_init+0x40>
    2326:	48 83 c4 08          	add    $0x8,%rsp
    232a:	5b                   	pop    %rbx
    232b:	5d                   	pop    %rbp
    232c:	41 5c                	pop    %r12
    232e:	41 5d                	pop    %r13
    2330:	41 5e                	pop    %r14
    2332:	41 5f                	pop    %r15
    2334:	c3                   	retq   
    2335:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    233c:	00 00 00 00 

0000000000002340 <__libc_csu_fini>:
    2340:	f3 0f 1e fa          	endbr64 
    2344:	c3                   	retq   

Disassembly of section .fini:

0000000000002348 <_fini>:
    2348:	f3 0f 1e fa          	endbr64 
    234c:	48 83 ec 08          	sub    $0x8,%rsp
    2350:	48 83 c4 08          	add    $0x8,%rsp
    2354:	c3                   	retq