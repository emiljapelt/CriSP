../executables/out_server/merge-gcc-O3-bench.exe:     filformat elf64-x86-64


Disassemblering af sektion .init:

0000000000000848 <_init>:
 848:	48 83 ec 08          	sub    $0x8,%rsp
 84c:	48 8b 05 95 17 20 00 	mov    0x201795(%rip),%rax        # 201fe8 <__gmon_start__>
 853:	48 85 c0             	test   %rax,%rax
 856:	74 02                	je     85a <_init+0x12>
 858:	ff d0                	call   *%rax
 85a:	48 83 c4 08          	add    $0x8,%rsp
 85e:	c3                   	ret    

Disassemblering af sektion .plt:

0000000000000860 <.plt>:
 860:	ff 35 fa 16 20 00    	push   0x2016fa(%rip)        # 201f60 <_GLOBAL_OFFSET_TABLE_+0x8>
 866:	ff 25 fc 16 20 00    	jmp    *0x2016fc(%rip)        # 201f68 <_GLOBAL_OFFSET_TABLE_+0x10>
 86c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000870 <free@plt>:
 870:	ff 25 fa 16 20 00    	jmp    *0x2016fa(%rip)        # 201f70 <free@GLIBC_2.2.5>
 876:	68 00 00 00 00       	push   $0x0
 87b:	e9 e0 ff ff ff       	jmp    860 <.plt>

0000000000000880 <pthread_create@plt>:
 880:	ff 25 f2 16 20 00    	jmp    *0x2016f2(%rip)        # 201f78 <pthread_create@GLIBC_2.2.5>
 886:	68 01 00 00 00       	push   $0x1
 88b:	e9 d0 ff ff ff       	jmp    860 <.plt>

0000000000000890 <clock_gettime@plt>:
 890:	ff 25 ea 16 20 00    	jmp    *0x2016ea(%rip)        # 201f80 <clock_gettime@GLIBC_2.17>
 896:	68 02 00 00 00       	push   $0x2
 89b:	e9 c0 ff ff ff       	jmp    860 <.plt>

00000000000008a0 <__stack_chk_fail@plt>:
 8a0:	ff 25 e2 16 20 00    	jmp    *0x2016e2(%rip)        # 201f88 <__stack_chk_fail@GLIBC_2.4>
 8a6:	68 03 00 00 00       	push   $0x3
 8ab:	e9 b0 ff ff ff       	jmp    860 <.plt>

00000000000008b0 <srand@plt>:
 8b0:	ff 25 da 16 20 00    	jmp    *0x2016da(%rip)        # 201f90 <srand@GLIBC_2.2.5>
 8b6:	68 04 00 00 00       	push   $0x4
 8bb:	e9 a0 ff ff ff       	jmp    860 <.plt>

00000000000008c0 <calloc@plt>:
 8c0:	ff 25 d2 16 20 00    	jmp    *0x2016d2(%rip)        # 201f98 <calloc@GLIBC_2.2.5>
 8c6:	68 05 00 00 00       	push   $0x5
 8cb:	e9 90 ff ff ff       	jmp    860 <.plt>

00000000000008d0 <strtol@plt>:
 8d0:	ff 25 ca 16 20 00    	jmp    *0x2016ca(%rip)        # 201fa0 <strtol@GLIBC_2.2.5>
 8d6:	68 06 00 00 00       	push   $0x6
 8db:	e9 80 ff ff ff       	jmp    860 <.plt>

00000000000008e0 <memcpy@plt>:
 8e0:	ff 25 c2 16 20 00    	jmp    *0x2016c2(%rip)        # 201fa8 <memcpy@GLIBC_2.14>
 8e6:	68 07 00 00 00       	push   $0x7
 8eb:	e9 70 ff ff ff       	jmp    860 <.plt>

00000000000008f0 <time@plt>:
 8f0:	ff 25 ba 16 20 00    	jmp    *0x2016ba(%rip)        # 201fb0 <time@GLIBC_2.2.5>
 8f6:	68 08 00 00 00       	push   $0x8
 8fb:	e9 60 ff ff ff       	jmp    860 <.plt>

0000000000000900 <malloc@plt>:
 900:	ff 25 b2 16 20 00    	jmp    *0x2016b2(%rip)        # 201fb8 <malloc@GLIBC_2.2.5>
 906:	68 09 00 00 00       	push   $0x9
 90b:	e9 50 ff ff ff       	jmp    860 <.plt>

0000000000000910 <__printf_chk@plt>:
 910:	ff 25 aa 16 20 00    	jmp    *0x2016aa(%rip)        # 201fc0 <__printf_chk@GLIBC_2.3.4>
 916:	68 0a 00 00 00       	push   $0xa
 91b:	e9 40 ff ff ff       	jmp    860 <.plt>

0000000000000920 <pthread_join@plt>:
 920:	ff 25 a2 16 20 00    	jmp    *0x2016a2(%rip)        # 201fc8 <pthread_join@GLIBC_2.2.5>
 926:	68 0b 00 00 00       	push   $0xb
 92b:	e9 30 ff ff ff       	jmp    860 <.plt>

0000000000000930 <rand@plt>:
 930:	ff 25 9a 16 20 00    	jmp    *0x20169a(%rip)        # 201fd0 <rand@GLIBC_2.2.5>
 936:	68 0c 00 00 00       	push   $0xc
 93b:	e9 20 ff ff ff       	jmp    860 <.plt>

Disassemblering af sektion .plt.got:

0000000000000940 <__cxa_finalize@plt>:
 940:	ff 25 b2 16 20 00    	jmp    *0x2016b2(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 946:	66 90                	xchg   %ax,%ax

Disassemblering af sektion .text:

0000000000000950 <main>:
     950:	41 55                	push   %r13
     952:	ba 0a 00 00 00       	mov    $0xa,%edx
     957:	41 54                	push   %r12
     959:	55                   	push   %rbp
     95a:	53                   	push   %rbx
     95b:	48 89 f3             	mov    %rsi,%rbx
     95e:	48 83 ec 48          	sub    $0x48,%rsp
     962:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
     966:	31 f6                	xor    %esi,%esi
     968:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     96f:	00 00 
     971:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
     976:	31 c0                	xor    %eax,%eax
     978:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
     97d:	e8 4e ff ff ff       	call   8d0 <strtol@plt>
     982:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
     986:	31 f6                	xor    %esi,%esi
     988:	ba 0a 00 00 00       	mov    $0xa,%edx
     98d:	49 89 c4             	mov    %rax,%r12
     990:	e8 3b ff ff ff       	call   8d0 <strtol@plt>
     995:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
     999:	ba 0a 00 00 00       	mov    $0xa,%edx
     99e:	31 f6                	xor    %esi,%esi
     9a0:	49 89 c5             	mov    %rax,%r13
     9a3:	e8 28 ff ff ff       	call   8d0 <strtol@plt>
     9a8:	48 63 d8             	movslq %eax,%rbx
     9ab:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
     9b2:	00 
     9b3:	e8 48 ff ff ff       	call   900 <malloc@plt>
     9b8:	48 89 de             	mov    %rbx,%rsi
     9bb:	48 89 ef             	mov    %rbp,%rdi
     9be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
     9c3:	e8 78 0b 00 00       	call   1540 <generateData>
     9c8:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
     9cd:	bf 04 00 00 00       	mov    $0x4,%edi
     9d2:	e8 b9 fe ff ff       	call   890 <clock_gettime@plt>
     9d7:	44 89 e9             	mov    %r13d,%ecx
     9da:	44 89 e2             	mov    %r12d,%edx
     9dd:	48 89 de             	mov    %rbx,%rsi
     9e0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
     9e6:	48 89 ef             	mov    %rbp,%rdi
     9e9:	e8 12 0b 00 00       	call   1500 <proxy_args>
     9ee:	48 89 c7             	mov    %rax,%rdi
     9f1:	e8 3a 06 00 00       	call   1030 <better_par_merge_sort>
     9f6:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
     9fb:	bf 04 00 00 00       	mov    $0x4,%edi
     a00:	e8 8b fe ff ff       	call   890 <clock_gettime@plt>
     a05:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
     a0a:	48 2b 74 24 18       	sub    0x18(%rsp),%rsi
     a0f:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
     a16:	de 1b 43 
     a19:	48 89 f0             	mov    %rsi,%rax
     a1c:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
     a21:	48 2b 4c 24 10       	sub    0x10(%rsp),%rcx
     a26:	48 c1 fe 3f          	sar    $0x3f,%rsi
     a2a:	48 f7 ea             	imul   %rdx
     a2d:	bf 01 00 00 00       	mov    $0x1,%edi
     a32:	31 c0                	xor    %eax,%eax
     a34:	48 69 c9 e8 03 00 00 	imul   $0x3e8,%rcx,%rcx
     a3b:	48 c1 fa 12          	sar    $0x12,%rdx
     a3f:	48 29 f2             	sub    %rsi,%rdx
     a42:	48 8d 35 fb 0b 00 00 	lea    0xbfb(%rip),%rsi        # 1644 <_IO_stdin_used+0x4>
     a49:	48 01 ca             	add    %rcx,%rdx
     a4c:	e8 bf fe ff ff       	call   910 <__printf_chk@plt>
     a51:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
     a56:	e8 15 fe ff ff       	call   870 <free@plt>
     a5b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
     a60:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     a67:	00 00 
     a69:	75 0d                	jne    a78 <main+0x128>
     a6b:	48 83 c4 48          	add    $0x48,%rsp
     a6f:	31 c0                	xor    %eax,%eax
     a71:	5b                   	pop    %rbx
     a72:	5d                   	pop    %rbp
     a73:	41 5c                	pop    %r12
     a75:	41 5d                	pop    %r13
     a77:	c3                   	ret    
     a78:	e8 23 fe ff ff       	call   8a0 <__stack_chk_fail@plt>
     a7d:	0f 1f 00             	nopl   (%rax)

0000000000000a80 <_start>:
     a80:	31 ed                	xor    %ebp,%ebp
     a82:	49 89 d1             	mov    %rdx,%r9
     a85:	5e                   	pop    %rsi
     a86:	48 89 e2             	mov    %rsp,%rdx
     a89:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     a8d:	50                   	push   %rax
     a8e:	54                   	push   %rsp
     a8f:	4c 8d 05 9a 0b 00 00 	lea    0xb9a(%rip),%r8        # 1630 <__libc_csu_fini>
     a96:	48 8d 0d 23 0b 00 00 	lea    0xb23(%rip),%rcx        # 15c0 <__libc_csu_init>
     a9d:	48 8d 3d ac fe ff ff 	lea    -0x154(%rip),%rdi        # 950 <main>
     aa4:	ff 15 36 15 20 00    	call   *0x201536(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
     aaa:	f4                   	hlt    
     aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000ab0 <deregister_tm_clones>:
     ab0:	48 8d 3d 59 15 20 00 	lea    0x201559(%rip),%rdi        # 202010 <__TMC_END__>
     ab7:	48 8d 05 52 15 20 00 	lea    0x201552(%rip),%rax        # 202010 <__TMC_END__>
     abe:	48 39 f8             	cmp    %rdi,%rax
     ac1:	74 15                	je     ad8 <deregister_tm_clones+0x28>
     ac3:	48 8b 05 0e 15 20 00 	mov    0x20150e(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
     aca:	48 85 c0             	test   %rax,%rax
     acd:	74 09                	je     ad8 <deregister_tm_clones+0x28>
     acf:	ff e0                	jmp    *%rax
     ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     ad8:	c3                   	ret    
     ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000ae0 <register_tm_clones>:
     ae0:	48 8d 3d 29 15 20 00 	lea    0x201529(%rip),%rdi        # 202010 <__TMC_END__>
     ae7:	48 8d 35 22 15 20 00 	lea    0x201522(%rip),%rsi        # 202010 <__TMC_END__>
     aee:	48 29 fe             	sub    %rdi,%rsi
     af1:	48 c1 fe 03          	sar    $0x3,%rsi
     af5:	48 89 f0             	mov    %rsi,%rax
     af8:	48 c1 e8 3f          	shr    $0x3f,%rax
     afc:	48 01 c6             	add    %rax,%rsi
     aff:	48 d1 fe             	sar    %rsi
     b02:	74 14                	je     b18 <register_tm_clones+0x38>
     b04:	48 8b 05 e5 14 20 00 	mov    0x2014e5(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
     b0b:	48 85 c0             	test   %rax,%rax
     b0e:	74 08                	je     b18 <register_tm_clones+0x38>
     b10:	ff e0                	jmp    *%rax
     b12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     b18:	c3                   	ret    
     b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000b20 <__do_global_dtors_aux>:
     b20:	80 3d e9 14 20 00 00 	cmpb   $0x0,0x2014e9(%rip)        # 202010 <__TMC_END__>
     b27:	75 2f                	jne    b58 <__do_global_dtors_aux+0x38>
     b29:	55                   	push   %rbp
     b2a:	48 83 3d c6 14 20 00 	cmpq   $0x0,0x2014c6(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
     b31:	00 
     b32:	48 89 e5             	mov    %rsp,%rbp
     b35:	74 0c                	je     b43 <__do_global_dtors_aux+0x23>
     b37:	48 8b 3d ca 14 20 00 	mov    0x2014ca(%rip),%rdi        # 202008 <__dso_handle>
     b3e:	e8 fd fd ff ff       	call   940 <__cxa_finalize@plt>
     b43:	e8 68 ff ff ff       	call   ab0 <deregister_tm_clones>
     b48:	c6 05 c1 14 20 00 01 	movb   $0x1,0x2014c1(%rip)        # 202010 <__TMC_END__>
     b4f:	5d                   	pop    %rbp
     b50:	c3                   	ret    
     b51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     b58:	c3                   	ret    
     b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000b60 <frame_dummy>:
     b60:	e9 7b ff ff ff       	jmp    ae0 <register_tm_clones>
     b65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     b6c:	00 00 00 
     b6f:	90                   	nop

0000000000000b70 <seq_merge_sort.part.0>:
     b70:	41 57                	push   %r15
     b72:	41 56                	push   %r14
     b74:	41 89 d6             	mov    %edx,%r14d
     b77:	41 55                	push   %r13
     b79:	49 89 f5             	mov    %rsi,%r13
     b7c:	41 54                	push   %r12
     b7e:	4d 89 ef             	mov    %r13,%r15
     b81:	55                   	push   %rbp
     b82:	48 89 fd             	mov    %rdi,%rbp
     b85:	53                   	push   %rbx
     b86:	48 89 f3             	mov    %rsi,%rbx
     b89:	48 d1 eb             	shr    %rbx
     b8c:	4c 8d 24 dd 00 00 00 	lea    0x0(,%rbx,8),%r12
     b93:	00 
     b94:	49 29 df             	sub    %rbx,%r15
     b97:	48 83 ec 38          	sub    $0x38,%rsp
     b9b:	4c 89 e7             	mov    %r12,%rdi
     b9e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     ba5:	00 00 
     ba7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     bac:	31 c0                	xor    %eax,%eax
     bae:	e8 4d fd ff ff       	call   900 <malloc@plt>
     bb3:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
     bb7:	4c 89 e2             	mov    %r12,%rdx
     bba:	48 89 c7             	mov    %rax,%rdi
     bbd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     bc2:	48 89 ce             	mov    %rcx,%rsi
     bc5:	48 89 0c 24          	mov    %rcx,(%rsp)
     bc9:	e8 12 fd ff ff       	call   8e0 <memcpy@plt>
     bce:	4a 8d 14 fd 00 00 00 	lea    0x0(,%r15,8),%rdx
     bd5:	00 
     bd6:	48 89 d7             	mov    %rdx,%rdi
     bd9:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
     bde:	e8 1d fd ff ff       	call   900 <malloc@plt>
     be3:	48 8b 0c 24          	mov    (%rsp),%rcx
     be7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
     bec:	48 89 c7             	mov    %rax,%rdi
     bef:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
     bf4:	4a 8d 34 21          	lea    (%rcx,%r12,1),%rsi
     bf8:	e8 e3 fc ff ff       	call   8e0 <memcpy@plt>
     bfd:	45 84 f6             	test   %r14b,%r14b
     c00:	0f 85 5a 01 00 00    	jne    d60 <seq_merge_sort.part.0+0x1f0>
     c06:	45 0f be e6          	movsbl %r14b,%r12d
     c0a:	49 83 fd 03          	cmp    $0x3,%r13
     c0e:	76 10                	jbe    c20 <seq_merge_sort.part.0+0xb0>
     c10:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
     c15:	44 89 e2             	mov    %r12d,%edx
     c18:	48 89 de             	mov    %rbx,%rsi
     c1b:	e8 50 ff ff ff       	call   b70 <seq_merge_sort.part.0>
     c20:	49 83 ff 01          	cmp    $0x1,%r15
     c24:	76 10                	jbe    c36 <seq_merge_sort.part.0+0xc6>
     c26:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
     c2b:	44 89 e2             	mov    %r12d,%edx
     c2e:	4c 89 fe             	mov    %r15,%rsi
     c31:	e8 3a ff ff ff       	call   b70 <seq_merge_sort.part.0>
     c36:	45 84 f6             	test   %r14b,%r14b
     c39:	0f 85 01 01 00 00    	jne    d40 <seq_merge_sort.part.0+0x1d0>
     c3f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
     c44:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
     c49:	4d 85 ff             	test   %r15,%r15
     c4c:	0f 84 1e 01 00 00    	je     d70 <seq_merge_sort.part.0+0x200>
     c52:	48 85 db             	test   %rbx,%rbx
     c55:	0f 84 15 01 00 00    	je     d70 <seq_merge_sort.part.0+0x200>
     c5b:	4c 8b 65 00          	mov    0x0(%rbp),%r12
     c5f:	31 d2                	xor    %edx,%edx
     c61:	31 c9                	xor    %ecx,%ecx
     c63:	31 c0                	xor    %eax,%eax
     c65:	eb 1a                	jmp    c81 <seq_merge_sort.part.0+0x111>
     c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     c6e:	00 00 
     c70:	48 83 c0 01          	add    $0x1,%rax
     c74:	4d 89 0a             	mov    %r9,(%r10)
     c77:	48 39 c3             	cmp    %rax,%rbx
     c7a:	76 26                	jbe    ca2 <seq_merge_sort.part.0+0x132>
     c7c:	49 39 cf             	cmp    %rcx,%r15
     c7f:	76 21                	jbe    ca2 <seq_merge_sort.part.0+0x132>
     c81:	4c 8b 0c c7          	mov    (%rdi,%rax,8),%r9
     c85:	49 8b 34 cb          	mov    (%r11,%rcx,8),%rsi
     c89:	4d 8d 14 d4          	lea    (%r12,%rdx,8),%r10
     c8d:	48 83 c2 01          	add    $0x1,%rdx
     c91:	4c 39 ce             	cmp    %r9,%rsi
     c94:	77 da                	ja     c70 <seq_merge_sort.part.0+0x100>
     c96:	49 89 32             	mov    %rsi,(%r10)
     c99:	48 83 c1 01          	add    $0x1,%rcx
     c9d:	48 39 c3             	cmp    %rax,%rbx
     ca0:	77 da                	ja     c7c <seq_merge_sort.part.0+0x10c>
     ca2:	48 39 c3             	cmp    %rax,%rbx
     ca5:	77 69                	ja     d10 <seq_merge_sort.part.0+0x1a0>
     ca7:	49 39 cf             	cmp    %rcx,%r15
     caa:	77 34                	ja     ce0 <seq_merge_sort.part.0+0x170>
     cac:	e8 bf fb ff ff       	call   870 <free@plt>
     cb1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
     cb6:	e8 b5 fb ff ff       	call   870 <free@plt>
     cbb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     cc0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     cc7:	00 00 
     cc9:	0f 85 ac 00 00 00    	jne    d7b <seq_merge_sort.part.0+0x20b>
     ccf:	48 83 c4 38          	add    $0x38,%rsp
     cd3:	5b                   	pop    %rbx
     cd4:	5d                   	pop    %rbp
     cd5:	41 5c                	pop    %r12
     cd7:	41 5d                	pop    %r13
     cd9:	41 5e                	pop    %r14
     cdb:	41 5f                	pop    %r15
     cdd:	c3                   	ret    
     cde:	66 90                	xchg   %ax,%ax
     ce0:	48 8b 45 00          	mov    0x0(%rbp),%rax
     ce4:	4d 89 f8             	mov    %r15,%r8
     ce7:	49 8d 34 cb          	lea    (%r11,%rcx,8),%rsi
     ceb:	49 29 c8             	sub    %rcx,%r8
     cee:	48 8d 3c d0          	lea    (%rax,%rdx,8),%rdi
     cf2:	4a 8d 14 c5 00 00 00 	lea    0x0(,%r8,8),%rdx
     cf9:	00 
     cfa:	e8 e1 fb ff ff       	call   8e0 <memcpy@plt>
     cff:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
     d04:	eb a6                	jmp    cac <seq_merge_sort.part.0+0x13c>
     d06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     d0d:	00 00 00 
     d10:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
     d14:	48 29 c3             	sub    %rax,%rbx
     d17:	48 8d 34 c7          	lea    (%rdi,%rax,8),%rsi
     d1b:	48 8d 0c d1          	lea    (%rcx,%rdx,8),%rcx
     d1f:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
     d26:	00 
     d27:	48 89 cf             	mov    %rcx,%rdi
     d2a:	e8 b1 fb ff ff       	call   8e0 <memcpy@plt>
     d2f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
     d34:	e9 73 ff ff ff       	jmp    cac <seq_merge_sort.part.0+0x13c>
     d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     d40:	4a 8d 3c ed 00 00 00 	lea    0x0(,%r13,8),%rdi
     d47:	00 
     d48:	e8 b3 fb ff ff       	call   900 <malloc@plt>
     d4d:	48 89 45 00          	mov    %rax,0x0(%rbp)
     d51:	e9 e9 fe ff ff       	jmp    c3f <seq_merge_sort.part.0+0xcf>
     d56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     d5d:	00 00 00 
     d60:	48 8b 3c 24          	mov    (%rsp),%rdi
     d64:	e8 07 fb ff ff       	call   870 <free@plt>
     d69:	e9 98 fe ff ff       	jmp    c06 <seq_merge_sort.part.0+0x96>
     d6e:	66 90                	xchg   %ax,%ax
     d70:	31 d2                	xor    %edx,%edx
     d72:	31 c9                	xor    %ecx,%ecx
     d74:	31 c0                	xor    %eax,%eax
     d76:	e9 27 ff ff ff       	jmp    ca2 <seq_merge_sort.part.0+0x132>
     d7b:	e8 20 fb ff ff       	call   8a0 <__stack_chk_fail@plt>

0000000000000d80 <par_merge_sort>:
     d80:	41 57                	push   %r15
     d82:	41 56                	push   %r14
     d84:	41 55                	push   %r13
     d86:	41 54                	push   %r12
     d88:	55                   	push   %rbp
     d89:	53                   	push   %rbx
     d8a:	48 89 fb             	mov    %rdi,%rbx
     d8d:	48 83 ec 58          	sub    $0x58,%rsp
     d91:	8b 4f 10             	mov    0x10(%rdi),%ecx
     d94:	4c 8b 37             	mov    (%rdi),%r14
     d97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     d9e:	00 00 
     da0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
     da5:	31 c0                	xor    %eax,%eax
     da7:	4c 8b 67 08          	mov    0x8(%rdi),%r12
     dab:	44 0f b6 6f 18       	movzbl 0x18(%rdi),%r13d
     db0:	85 c9                	test   %ecx,%ecx
     db2:	0f 84 d8 01 00 00    	je     f90 <par_merge_sort+0x210>
     db8:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
     dbc:	49 83 fc 01          	cmp    $0x1,%r12
     dc0:	0f 86 9e 01 00 00    	jbe    f64 <par_merge_sort+0x1e4>
     dc6:	8b 47 14             	mov    0x14(%rdi),%eax
     dc9:	4c 89 e5             	mov    %r12,%rbp
     dcc:	48 d1 ed             	shr    %rbp
     dcf:	89 44 24 0c          	mov    %eax,0xc(%rsp)
     dd3:	48 8d 04 ed 00 00 00 	lea    0x0(,%rbp,8),%rax
     dda:	00 
     ddb:	48 89 c7             	mov    %rax,%rdi
     dde:	49 89 c7             	mov    %rax,%r15
     de1:	e8 1a fb ff ff       	call   900 <malloc@plt>
     de6:	4c 89 fa             	mov    %r15,%rdx
     de9:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
     dee:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     df3:	49 8b 36             	mov    (%r14),%rsi
     df6:	48 89 c7             	mov    %rax,%rdi
     df9:	e8 e2 fa ff ff       	call   8e0 <memcpy@plt>
     dfe:	4c 89 e0             	mov    %r12,%rax
     e01:	48 29 e8             	sub    %rbp,%rax
     e04:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e0b:	00 
     e0c:	49 89 c7             	mov    %rax,%r15
     e0f:	48 89 d7             	mov    %rdx,%rdi
     e12:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
     e17:	e8 e4 fa ff ff       	call   900 <malloc@plt>
     e1c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     e21:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
     e26:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
     e2b:	48 89 c7             	mov    %rax,%rdi
     e2e:	49 03 36             	add    (%r14),%rsi
     e31:	e8 aa fa ff ff       	call   8e0 <memcpy@plt>
     e36:	45 84 ed             	test   %r13b,%r13b
     e39:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
     e3d:	0f 85 cd 01 00 00    	jne    1010 <par_merge_sort+0x290>
     e43:	8d 41 ff             	lea    -0x1(%rcx),%eax
     e46:	bf 19 00 00 00       	mov    $0x19,%edi
     e4b:	89 44 24 08          	mov    %eax,0x8(%rsp)
     e4f:	e8 ac fa ff ff       	call   900 <malloc@plt>
     e54:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
     e59:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
     e5d:	31 f6                	xor    %esi,%esi
     e5f:	48 89 10             	mov    %rdx,(%rax)
     e62:	8b 54 24 0c          	mov    0xc(%rsp),%edx
     e66:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
     e6b:	89 48 10             	mov    %ecx,0x10(%rax)
     e6e:	48 89 c1             	mov    %rax,%rcx
     e71:	89 50 14             	mov    %edx,0x14(%rax)
     e74:	48 8d 15 05 ff ff ff 	lea    -0xfb(%rip),%rdx        # d80 <par_merge_sort>
     e7b:	48 89 68 08          	mov    %rbp,0x8(%rax)
     e7f:	44 88 68 18          	mov    %r13b,0x18(%rax)
     e83:	e8 f8 f9 ff ff       	call   880 <pthread_create@plt>
     e88:	bf 19 00 00 00       	mov    $0x19,%edi
     e8d:	e8 6e fa ff ff       	call   900 <malloc@plt>
     e92:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
     e97:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
     e9b:	31 f6                	xor    %esi,%esi
     e9d:	48 89 10             	mov    %rdx,(%rax)
     ea0:	8b 54 24 0c          	mov    0xc(%rsp),%edx
     ea4:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
     ea9:	89 48 10             	mov    %ecx,0x10(%rax)
     eac:	48 89 c1             	mov    %rax,%rcx
     eaf:	89 50 14             	mov    %edx,0x14(%rax)
     eb2:	48 8d 15 c7 fe ff ff 	lea    -0x139(%rip),%rdx        # d80 <par_merge_sort>
     eb9:	4c 89 78 08          	mov    %r15,0x8(%rax)
     ebd:	44 88 68 18          	mov    %r13b,0x18(%rax)
     ec1:	e8 ba f9 ff ff       	call   880 <pthread_create@plt>
     ec6:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
     ecb:	31 f6                	xor    %esi,%esi
     ecd:	e8 4e fa ff ff       	call   920 <pthread_join@plt>
     ed2:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
     ed7:	31 f6                	xor    %esi,%esi
     ed9:	e8 42 fa ff ff       	call   920 <pthread_join@plt>
     ede:	45 84 ed             	test   %r13b,%r13b
     ee1:	0f 85 11 01 00 00    	jne    ff8 <par_merge_sort+0x278>
     ee7:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
     eec:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
     ef1:	4d 85 ff             	test   %r15,%r15
     ef4:	0f 84 d6 00 00 00    	je     fd0 <par_merge_sort+0x250>
     efa:	4d 8b 16             	mov    (%r14),%r10
     efd:	31 c9                	xor    %ecx,%ecx
     eff:	31 c0                	xor    %eax,%eax
     f01:	31 d2                	xor    %edx,%edx
     f03:	eb 14                	jmp    f19 <par_merge_sort+0x199>
     f05:	0f 1f 00             	nopl   (%rax)
     f08:	48 83 c0 01          	add    $0x1,%rax
     f0c:	49 89 39             	mov    %rdi,(%r9)
     f0f:	48 39 e8             	cmp    %rbp,%rax
     f12:	73 26                	jae    f3a <par_merge_sort+0x1ba>
     f14:	4c 39 f9             	cmp    %r15,%rcx
     f17:	73 21                	jae    f3a <par_merge_sort+0x1ba>
     f19:	49 8b 3c c4          	mov    (%r12,%rax,8),%rdi
     f1d:	49 8b 34 cb          	mov    (%r11,%rcx,8),%rsi
     f21:	4d 8d 0c d2          	lea    (%r10,%rdx,8),%r9
     f25:	48 83 c2 01          	add    $0x1,%rdx
     f29:	48 39 f7             	cmp    %rsi,%rdi
     f2c:	72 da                	jb     f08 <par_merge_sort+0x188>
     f2e:	49 89 31             	mov    %rsi,(%r9)
     f31:	48 83 c1 01          	add    $0x1,%rcx
     f35:	48 39 e8             	cmp    %rbp,%rax
     f38:	72 da                	jb     f14 <par_merge_sort+0x194>
     f3a:	48 39 c5             	cmp    %rax,%rbp
     f3d:	0f 87 94 00 00 00    	ja     fd7 <par_merge_sort+0x257>
     f43:	49 39 cf             	cmp    %rcx,%r15
     f46:	77 68                	ja     fb0 <par_merge_sort+0x230>
     f48:	48 89 df             	mov    %rbx,%rdi
     f4b:	e8 20 f9 ff ff       	call   870 <free@plt>
     f50:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
     f55:	e8 16 f9 ff ff       	call   870 <free@plt>
     f5a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
     f5f:	e8 0c f9 ff ff       	call   870 <free@plt>
     f64:	31 c0                	xor    %eax,%eax
     f66:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
     f6b:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
     f72:	00 00 
     f74:	0f 85 a7 00 00 00    	jne    1021 <par_merge_sort+0x2a1>
     f7a:	48 83 c4 58          	add    $0x58,%rsp
     f7e:	5b                   	pop    %rbx
     f7f:	5d                   	pop    %rbp
     f80:	41 5c                	pop    %r12
     f82:	41 5d                	pop    %r13
     f84:	41 5e                	pop    %r14
     f86:	41 5f                	pop    %r15
     f88:	c3                   	ret    
     f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     f90:	49 83 fc 01          	cmp    $0x1,%r12
     f94:	76 0f                	jbe    fa5 <par_merge_sort+0x225>
     f96:	41 0f be d5          	movsbl %r13b,%edx
     f9a:	4c 89 e6             	mov    %r12,%rsi
     f9d:	4c 89 f7             	mov    %r14,%rdi
     fa0:	e8 cb fb ff ff       	call   b70 <seq_merge_sort.part.0>
     fa5:	48 89 df             	mov    %rbx,%rdi
     fa8:	e8 c3 f8 ff ff       	call   870 <free@plt>
     fad:	eb b5                	jmp    f64 <par_merge_sort+0x1e4>
     faf:	90                   	nop
     fb0:	4d 89 f8             	mov    %r15,%r8
     fb3:	49 8d 3c d2          	lea    (%r10,%rdx,8),%rdi
     fb7:	49 8d 34 cb          	lea    (%r11,%rcx,8),%rsi
     fbb:	49 29 c8             	sub    %rcx,%r8
     fbe:	4a 8d 14 c5 00 00 00 	lea    0x0(,%r8,8),%rdx
     fc5:	00 
     fc6:	e8 15 f9 ff ff       	call   8e0 <memcpy@plt>
     fcb:	e9 78 ff ff ff       	jmp    f48 <par_merge_sort+0x1c8>
     fd0:	4d 8b 16             	mov    (%r14),%r10
     fd3:	31 d2                	xor    %edx,%edx
     fd5:	31 c0                	xor    %eax,%eax
     fd7:	48 29 c5             	sub    %rax,%rbp
     fda:	49 8d 3c d2          	lea    (%r10,%rdx,8),%rdi
     fde:	49 8d 34 c4          	lea    (%r12,%rax,8),%rsi
     fe2:	48 8d 14 ed 00 00 00 	lea    0x0(,%rbp,8),%rdx
     fe9:	00 
     fea:	e8 f1 f8 ff ff       	call   8e0 <memcpy@plt>
     fef:	e9 54 ff ff ff       	jmp    f48 <par_merge_sort+0x1c8>
     ff4:	0f 1f 40 00          	nopl   0x0(%rax)
     ff8:	4a 8d 3c e5 00 00 00 	lea    0x0(,%r12,8),%rdi
     fff:	00 
    1000:	e8 fb f8 ff ff       	call   900 <malloc@plt>
    1005:	49 89 06             	mov    %rax,(%r14)
    1008:	e9 da fe ff ff       	jmp    ee7 <par_merge_sort+0x167>
    100d:	0f 1f 00             	nopl   (%rax)
    1010:	49 8b 3e             	mov    (%r14),%rdi
    1013:	e8 58 f8 ff ff       	call   870 <free@plt>
    1018:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    101c:	e9 22 fe ff ff       	jmp    e43 <par_merge_sort+0xc3>
    1021:	e8 7a f8 ff ff       	call   8a0 <__stack_chk_fail@plt>
    1026:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    102d:	00 00 00 

0000000000001030 <better_par_merge_sort>:
    1030:	55                   	push   %rbp
    1031:	48 89 e5             	mov    %rsp,%rbp
    1034:	41 57                	push   %r15
    1036:	41 56                	push   %r14
    1038:	41 55                	push   %r13
    103a:	41 54                	push   %r12
    103c:	53                   	push   %rbx
    103d:	48 83 ec 78          	sub    $0x78,%rsp
    1041:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
    1045:	0f b6 47 18          	movzbl 0x18(%rdi),%eax
    1049:	64 48 8b 1c 25 28 00 	mov    %fs:0x28,%rbx
    1050:	00 00 
    1052:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
    1056:	31 db                	xor    %ebx,%ebx
    1058:	48 8b 1f             	mov    (%rdi),%rbx
    105b:	88 45 bf             	mov    %al,-0x41(%rbp)
    105e:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
    1062:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    1066:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    106a:	8b 5f 10             	mov    0x10(%rdi),%ebx
    106d:	89 9d 78 ff ff ff    	mov    %ebx,-0x88(%rbp)
    1073:	85 db                	test   %ebx,%ebx
    1075:	0f 84 75 03 00 00    	je     13f0 <better_par_merge_sort+0x3c0>
    107b:	4c 8b 75 98          	mov    -0x68(%rbp),%r14
    107f:	49 83 fe 01          	cmp    $0x1,%r14
    1083:	0f 86 2f 03 00 00    	jbe    13b8 <better_par_merge_sort+0x388>
    1089:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    108d:	48 63 58 14          	movslq 0x14(%rax),%rbx
    1091:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    1098:	00 
    1099:	49 89 dc             	mov    %rbx,%r12
    109c:	48 89 c7             	mov    %rax,%rdi
    109f:	49 89 c5             	mov    %rax,%r13
    10a2:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    10a6:	e8 55 f8 ff ff       	call   900 <malloc@plt>
    10ab:	49 89 c7             	mov    %rax,%r15
    10ae:	4c 89 e8             	mov    %r13,%rax
    10b1:	48 83 e8 08          	sub    $0x8,%rax
    10b5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    10bc:	85 db                	test   %ebx,%ebx
    10be:	0f 8e 7e 03 00 00    	jle    1442 <better_par_merge_sort+0x412>
    10c4:	4c 89 f0             	mov    %r14,%rax
    10c7:	31 d2                	xor    %edx,%edx
    10c9:	48 f7 f3             	div    %rbx
    10cc:	83 fb 01             	cmp    $0x1,%ebx
    10cf:	0f 84 f2 03 00 00    	je     14c7 <better_par_merge_sort+0x497>
    10d5:	89 d9                	mov    %ebx,%ecx
    10d7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    10db:	f3 0f 7e 45 b0       	movq   -0x50(%rbp),%xmm0
    10e0:	4c 89 fa             	mov    %r15,%rdx
    10e3:	d1 e9                	shr    %ecx
    10e5:	48 c1 e1 04          	shl    $0x4,%rcx
    10e9:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    10ed:	4c 01 f9             	add    %r15,%rcx
    10f0:	0f 11 02             	movups %xmm0,(%rdx)
    10f3:	48 83 c2 10          	add    $0x10,%rdx
    10f7:	48 39 d1             	cmp    %rdx,%rcx
    10fa:	75 f4                	jne    10f0 <better_par_merge_sort+0xc0>
    10fc:	44 89 e2             	mov    %r12d,%edx
    10ff:	83 e2 fe             	and    $0xfffffffe,%edx
    1102:	41 39 d4             	cmp    %edx,%r12d
    1105:	74 07                	je     110e <better_par_merge_sort+0xde>
    1107:	48 63 d2             	movslq %edx,%rdx
    110a:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    110e:	41 8d 5c 24 ff       	lea    -0x1(%r12),%ebx
    1113:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    111a:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    111e:	45 31 ed             	xor    %r13d,%r13d
    1121:	48 8d 53 01          	lea    0x1(%rbx),%rdx
    1125:	48 89 5d a8          	mov    %rbx,-0x58(%rbp)
    1129:	48 0f af c2          	imul   %rdx,%rax
    112d:	49 8d 0c 37          	lea    (%r15,%rsi,1),%rcx
    1131:	48 29 c7             	sub    %rax,%rdi
    1134:	48 8b 01             	mov    (%rcx),%rax
    1137:	48 01 f8             	add    %rdi,%rax
    113a:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    113e:	48 89 01             	mov    %rax,(%rcx)
    1141:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    1148:	e8 b3 f7 ff ff       	call   900 <malloc@plt>
    114d:	44 89 65 a0          	mov    %r12d,-0x60(%rbp)
    1151:	4c 8b 75 88          	mov    -0x78(%rbp),%r14
    1155:	4d 89 ec             	mov    %r13,%r12
    1158:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    115c:	eb 05                	jmp    1163 <better_par_merge_sort+0x133>
    115e:	66 90                	xchg   %ax,%ax
    1160:	49 89 c4             	mov    %rax,%r12
    1163:	4b 8b 1c e7          	mov    (%r15,%r12,8),%rbx
    1167:	4c 8d 2c dd 00 00 00 	lea    0x0(,%rbx,8),%r13
    116e:	00 
    116f:	4c 89 ef             	mov    %r13,%rdi
    1172:	49 0f af dc          	imul   %r12,%rbx
    1176:	e8 85 f7 ff ff       	call   900 <malloc@plt>
    117b:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    117f:	4c 89 ea             	mov    %r13,%rdx
    1182:	4a 89 04 e6          	mov    %rax,(%rsi,%r12,8)
    1186:	49 8b 3e             	mov    (%r14),%rdi
    1189:	48 8d 34 df          	lea    (%rdi,%rbx,8),%rsi
    118d:	48 89 c7             	mov    %rax,%rdi
    1190:	e8 4b f7 ff ff       	call   8e0 <memcpy@plt>
    1195:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    119a:	4c 3b 65 a8          	cmp    -0x58(%rbp),%r12
    119e:	75 c0                	jne    1160 <better_par_merge_sort+0x130>
    11a0:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
    11a4:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    11a8:	44 8b 65 a0          	mov    -0x60(%rbp),%r12d
    11ac:	0f 85 7f 02 00 00    	jne    1431 <better_par_merge_sort+0x401>
    11b2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    11b6:	48 89 a5 60 ff ff ff 	mov    %rsp,-0xa0(%rbp)
    11bd:	48 83 c0 0f          	add    $0xf,%rax
    11c1:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    11c5:	48 29 c4             	sub    %rax,%rsp
    11c8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    11cf:	48 89 65 a0          	mov    %rsp,-0x60(%rbp)
    11d3:	48 01 d8             	add    %rbx,%rax
    11d6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    11dd:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    11e3:	83 e8 01             	sub    $0x1,%eax
    11e6:	89 45 b0             	mov    %eax,-0x50(%rbp)
    11e9:	41 83 fc 01          	cmp    $0x1,%r12d
    11ed:	0f 8e 96 02 00 00    	jle    1489 <better_par_merge_sort+0x459>
    11f3:	41 8d 44 24 fe       	lea    -0x2(%r12),%eax
    11f8:	45 31 f6             	xor    %r14d,%r14d
    11fb:	48 83 c0 01          	add    $0x1,%rax
    11ff:	4d 89 f5             	mov    %r14,%r13
    1202:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    1209:	48 c1 e0 03          	shl    $0x3,%rax
    120d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	bf 19 00 00 00       	mov    $0x19,%edi
    121d:	4f 8b 34 2f          	mov    (%r15,%r13,1),%r14
    1221:	e8 da f6 ff ff       	call   900 <malloc@plt>
    1226:	8b 75 b0             	mov    -0x50(%rbp),%esi
    1229:	4a 8d 0c 2b          	lea    (%rbx,%r13,1),%rcx
    122d:	48 8d 15 fc fd ff ff 	lea    -0x204(%rip),%rdx        # 1030 <better_par_merge_sort>
    1234:	48 89 08             	mov    %rcx,(%rax)
    1237:	48 89 c1             	mov    %rax,%rcx
    123a:	89 70 10             	mov    %esi,0x10(%rax)
    123d:	0f b6 75 bf          	movzbl -0x41(%rbp),%esi
    1241:	4c 89 70 08          	mov    %r14,0x8(%rax)
    1245:	4c 8b 75 a0          	mov    -0x60(%rbp),%r14
    1249:	40 88 70 18          	mov    %sil,0x18(%rax)
    124d:	31 f6                	xor    %esi,%esi
    124f:	44 89 60 14          	mov    %r12d,0x14(%rax)
    1253:	4b 8d 3c 2e          	lea    (%r14,%r13,1),%rdi
    1257:	49 83 c5 08          	add    $0x8,%r13
    125b:	e8 20 f6 ff ff       	call   880 <pthread_create@plt>
    1260:	4c 39 6d a8          	cmp    %r13,-0x58(%rbp)
    1264:	75 b2                	jne    1218 <better_par_merge_sort+0x1e8>
    1266:	bf 19 00 00 00       	mov    $0x19,%edi
    126b:	4d 89 f5             	mov    %r14,%r13
    126e:	e8 8d f6 ff ff       	call   900 <malloc@plt>
    1273:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
    127a:	8b 75 b0             	mov    -0x50(%rbp),%esi
    127d:	44 89 60 14          	mov    %r12d,0x14(%rax)
    1281:	48 89 38             	mov    %rdi,(%rax)
    1284:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    128b:	89 70 10             	mov    %esi,0x10(%rax)
    128e:	48 89 78 08          	mov    %rdi,0x8(%rax)
    1292:	0f b6 7d bf          	movzbl -0x41(%rbp),%edi
    1296:	40 88 78 18          	mov    %dil,0x18(%rax)
    129a:	48 89 c7             	mov    %rax,%rdi
    129d:	e8 8e fd ff ff       	call   1030 <better_par_merge_sort>
    12a2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    12a9:	4d 8d 34 c6          	lea    (%r14,%rax,8),%r14
    12ad:	0f 1f 00             	nopl   (%rax)
    12b0:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    12b4:	31 f6                	xor    %esi,%esi
    12b6:	49 83 c5 08          	add    $0x8,%r13
    12ba:	e8 61 f6 ff ff       	call   920 <pthread_join@plt>
    12bf:	4d 39 f5             	cmp    %r14,%r13
    12c2:	75 ec                	jne    12b0 <better_par_merge_sort+0x280>
    12c4:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
    12c8:	0f 85 43 01 00 00    	jne    1411 <better_par_merge_sort+0x3e1>
    12ce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    12d2:	4c 8b 30             	mov    (%rax),%r14
    12d5:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    12d9:	be 01 00 00 00       	mov    $0x1,%esi
    12de:	e8 dd f5 ff ff       	call   8c0 <calloc@plt>
    12e3:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    12e7:	49 bb 33 33 33 33 33 	movabs $0x333333333333333,%r11
    12ee:	33 33 03 
    12f1:	49 89 c5             	mov    %rax,%r13
    12f4:	4c 89 f0             	mov    %r14,%rax
    12f7:	4d 8d 14 fe          	lea    (%r14,%rdi,8),%r10
    12fb:	41 8d 7c 24 ff       	lea    -0x1(%r12),%edi
    1300:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    1306:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    130d:	00 00 00 
    1310:	31 d2                	xor    %edx,%edx
    1312:	49 63 f6             	movslq %r14d,%rsi
    1315:	4d 89 d9             	mov    %r11,%r9
    1318:	45 85 e4             	test   %r12d,%r12d
    131b:	7f 0e                	jg     132b <better_par_merge_sort+0x2fb>
    131d:	e9 be 00 00 00       	jmp    13e0 <better_par_merge_sort+0x3b0>
    1322:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1328:	48 89 ca             	mov    %rcx,%rdx
    132b:	49 8b 4c d5 00       	mov    0x0(%r13,%rdx,8),%rcx
    1330:	49 3b 0c d7          	cmp    (%r15,%rdx,8),%rcx
    1334:	73 13                	jae    1349 <better_par_merge_sort+0x319>
    1336:	4c 8b 04 d3          	mov    (%rbx,%rdx,8),%r8
    133a:	49 8b 0c c8          	mov    (%r8,%rcx,8),%rcx
    133e:	4c 39 c9             	cmp    %r9,%rcx
    1341:	73 06                	jae    1349 <better_par_merge_sort+0x319>
    1343:	48 63 f2             	movslq %edx,%rsi
    1346:	49 89 c9             	mov    %rcx,%r9
    1349:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    134d:	48 39 d7             	cmp    %rdx,%rdi
    1350:	75 d6                	jne    1328 <better_par_merge_sort+0x2f8>
    1352:	48 c1 e6 03          	shl    $0x3,%rsi
    1356:	4c 89 08             	mov    %r9,(%rax)
    1359:	48 83 c0 08          	add    $0x8,%rax
    135d:	49 83 44 35 00 01    	addq   $0x1,0x0(%r13,%rsi,1)
    1363:	49 39 c2             	cmp    %rax,%r10
    1366:	75 a8                	jne    1310 <better_par_merge_sort+0x2e0>
    1368:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    136c:	e8 ff f4 ff ff       	call   870 <free@plt>
    1371:	4c 89 ff             	mov    %r15,%rdi
    1374:	e8 f7 f4 ff ff       	call   870 <free@plt>
    1379:	45 85 e4             	test   %r12d,%r12d
    137c:	7e 23                	jle    13a1 <better_par_merge_sort+0x371>
    137e:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
    1383:	49 89 de             	mov    %rbx,%r14
    1386:	4c 8d 64 c3 08       	lea    0x8(%rbx,%rax,8),%r12
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1390:	49 8b 3e             	mov    (%r14),%rdi
    1393:	49 83 c6 08          	add    $0x8,%r14
    1397:	e8 d4 f4 ff ff       	call   870 <free@plt>
    139c:	4d 39 f4             	cmp    %r14,%r12
    139f:	75 ef                	jne    1390 <better_par_merge_sort+0x360>
    13a1:	48 89 df             	mov    %rbx,%rdi
    13a4:	e8 c7 f4 ff ff       	call   870 <free@plt>
    13a9:	4c 89 ef             	mov    %r13,%rdi
    13ac:	e8 bf f4 ff ff       	call   870 <free@plt>
    13b1:	48 8b a5 60 ff ff ff 	mov    -0xa0(%rbp),%rsp
    13b8:	31 c0                	xor    %eax,%eax
    13ba:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    13be:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    13c5:	00 00 
    13c7:	0f 85 01 01 00 00    	jne    14ce <better_par_merge_sort+0x49e>
    13cd:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    13d1:	5b                   	pop    %rbx
    13d2:	41 5c                	pop    %r12
    13d4:	41 5d                	pop    %r13
    13d6:	41 5e                	pop    %r14
    13d8:	41 5f                	pop    %r15
    13da:	5d                   	pop    %rbp
    13db:	c3                   	ret    
    13dc:	0f 1f 40 00          	nopl   0x0(%rax)
    13e0:	48 c7 c6 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rsi
    13e7:	e9 6a ff ff ff       	jmp    1356 <better_par_merge_sort+0x326>
    13ec:	0f 1f 40 00          	nopl   0x0(%rax)
    13f0:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    13f4:	48 83 fe 01          	cmp    $0x1,%rsi
    13f8:	76 0c                	jbe    1406 <better_par_merge_sort+0x3d6>
    13fa:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    13fe:	0f be d0             	movsbl %al,%edx
    1401:	e8 6a f7 ff ff       	call   b70 <seq_merge_sort.part.0>
    1406:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    140a:	e8 61 f4 ff ff       	call   870 <free@plt>
    140f:	eb a7                	jmp    13b8 <better_par_merge_sort+0x388>
    1411:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1415:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
    141c:	00 
    141d:	e8 de f4 ff ff       	call   900 <malloc@plt>
    1422:	49 89 c6             	mov    %rax,%r14
    1425:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1429:	4c 89 30             	mov    %r14,(%rax)
    142c:	e9 a4 fe ff ff       	jmp    12d5 <better_par_merge_sort+0x2a5>
    1431:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1435:	48 8b 38             	mov    (%rax),%rdi
    1438:	e8 33 f4 ff ff       	call   870 <free@plt>
    143d:	e9 70 fd ff ff       	jmp    11b2 <better_par_merge_sort+0x182>
    1442:	49 89 c6             	mov    %rax,%r14
    1445:	49 8d 04 07          	lea    (%r15,%rax,1),%rax
    1449:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    144d:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    1451:	48 03 18             	add    (%rax),%rbx
    1454:	48 89 18             	mov    %rbx,(%rax)
    1457:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    145e:	e8 9d f4 ff ff       	call   900 <malloc@plt>
    1463:	80 7d bf 00          	cmpb   $0x0,-0x41(%rbp)
    1467:	48 89 c3             	mov    %rax,%rbx
    146a:	75 c5                	jne    1431 <better_par_merge_sort+0x401>
    146c:	49 01 c6             	add    %rax,%r14
    146f:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    1475:	48 89 a5 60 ff ff ff 	mov    %rsp,-0xa0(%rbp)
    147c:	4c 89 b5 70 ff ff ff 	mov    %r14,-0x90(%rbp)
    1483:	83 e8 01             	sub    $0x1,%eax
    1486:	89 45 b0             	mov    %eax,-0x50(%rbp)
    1489:	bf 19 00 00 00       	mov    $0x19,%edi
    148e:	e8 6d f4 ff ff       	call   900 <malloc@plt>
    1493:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
    149a:	44 89 60 14          	mov    %r12d,0x14(%rax)
    149e:	48 89 38             	mov    %rdi,(%rax)
    14a1:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    14a8:	48 89 78 08          	mov    %rdi,0x8(%rax)
    14ac:	8b 7d b0             	mov    -0x50(%rbp),%edi
    14af:	89 78 10             	mov    %edi,0x10(%rax)
    14b2:	0f b6 7d bf          	movzbl -0x41(%rbp),%edi
    14b6:	40 88 78 18          	mov    %dil,0x18(%rax)
    14ba:	48 89 c7             	mov    %rax,%rdi
    14bd:	e8 6e fb ff ff       	call   1030 <better_par_merge_sort>
    14c2:	e9 fd fd ff ff       	jmp    12c4 <better_par_merge_sort+0x294>
    14c7:	31 d2                	xor    %edx,%edx
    14c9:	e9 39 fc ff ff       	jmp    1107 <better_par_merge_sort+0xd7>
    14ce:	e8 cd f3 ff ff       	call   8a0 <__stack_chk_fail@plt>
    14d3:	0f 1f 00             	nopl   (%rax)
    14d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    14dd:	00 00 00 

00000000000014e0 <seq_merge_sort>:
    14e0:	48 83 fe 01          	cmp    $0x1,%rsi
    14e4:	76 0a                	jbe    14f0 <seq_merge_sort+0x10>
    14e6:	0f be d2             	movsbl %dl,%edx
    14e9:	e9 82 f6 ff ff       	jmp    b70 <seq_merge_sort.part.0>
    14ee:	66 90                	xchg   %ax,%ax
    14f0:	c3                   	ret    
    14f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    14f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    14fd:	00 00 00 

0000000000001500 <proxy_args>:
    1500:	41 56                	push   %r14
    1502:	49 89 fe             	mov    %rdi,%r14
    1505:	bf 19 00 00 00       	mov    $0x19,%edi
    150a:	41 55                	push   %r13
    150c:	49 89 f5             	mov    %rsi,%r13
    150f:	41 54                	push   %r12
    1511:	41 89 d4             	mov    %edx,%r12d
    1514:	55                   	push   %rbp
    1515:	89 cd                	mov    %ecx,%ebp
    1517:	53                   	push   %rbx
    1518:	44 89 c3             	mov    %r8d,%ebx
    151b:	e8 e0 f3 ff ff       	call   900 <malloc@plt>
    1520:	4c 89 30             	mov    %r14,(%rax)
    1523:	4c 89 68 08          	mov    %r13,0x8(%rax)
    1527:	44 89 60 10          	mov    %r12d,0x10(%rax)
    152b:	89 68 14             	mov    %ebp,0x14(%rax)
    152e:	88 58 18             	mov    %bl,0x18(%rax)
    1531:	5b                   	pop    %rbx
    1532:	5d                   	pop    %rbp
    1533:	41 5c                	pop    %r12
    1535:	41 5d                	pop    %r13
    1537:	41 5e                	pop    %r14
    1539:	c3                   	ret    
    153a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001540 <generateData>:
    1540:	41 54                	push   %r12
    1542:	49 89 fc             	mov    %rdi,%r12
    1545:	31 ff                	xor    %edi,%edi
    1547:	55                   	push   %rbp
    1548:	48 89 f5             	mov    %rsi,%rbp
    154b:	53                   	push   %rbx
    154c:	e8 9f f3 ff ff       	call   8f0 <time@plt>
    1551:	89 c7                	mov    %eax,%edi
    1553:	e8 58 f3 ff ff       	call   8b0 <srand@plt>
    1558:	48 85 ed             	test   %rbp,%rbp
    155b:	74 1b                	je     1578 <generateData+0x38>
    155d:	31 db                	xor    %ebx,%ebx
    155f:	90                   	nop
    1560:	e8 cb f3 ff ff       	call   930 <rand@plt>
    1565:	49 8b 14 24          	mov    (%r12),%rdx
    1569:	48 98                	cltq   
    156b:	48 89 04 da          	mov    %rax,(%rdx,%rbx,8)
    156f:	48 83 c3 01          	add    $0x1,%rbx
    1573:	48 39 dd             	cmp    %rbx,%rbp
    1576:	75 e8                	jne    1560 <generateData+0x20>
    1578:	5b                   	pop    %rbx
    1579:	5d                   	pop    %rbp
    157a:	41 5c                	pop    %r12
    157c:	c3                   	ret    
    157d:	0f 1f 00             	nopl   (%rax)

0000000000001580 <isSorted>:
    1580:	48 8b 17             	mov    (%rdi),%rdx
    1583:	48 83 fe 01          	cmp    $0x1,%rsi
    1587:	76 27                	jbe    15b0 <isSorted+0x30>
    1589:	48 3b 57 08          	cmp    0x8(%rdi),%rdx
    158d:	76 09                	jbe    1598 <isSorted+0x18>
    158f:	31 c0                	xor    %eax,%eax
    1591:	c3                   	ret    
    1592:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1598:	b8 02 00 00 00       	mov    $0x2,%eax
    159d:	48 39 c6             	cmp    %rax,%rsi
    15a0:	74 0e                	je     15b0 <isSorted+0x30>
    15a2:	48 83 c0 01          	add    $0x1,%rax
    15a6:	48 39 54 c7 f8       	cmp    %rdx,-0x8(%rdi,%rax,8)
    15ab:	73 f0                	jae    159d <isSorted+0x1d>
    15ad:	31 c0                	xor    %eax,%eax
    15af:	c3                   	ret    
    15b0:	b8 01 00 00 00       	mov    $0x1,%eax
    15b5:	c3                   	ret    
    15b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    15bd:	00 00 00 

00000000000015c0 <__libc_csu_init>:
    15c0:	41 57                	push   %r15
    15c2:	41 56                	push   %r14
    15c4:	49 89 d7             	mov    %rdx,%r15
    15c7:	41 55                	push   %r13
    15c9:	41 54                	push   %r12
    15cb:	4c 8d 25 76 07 20 00 	lea    0x200776(%rip),%r12        # 201d48 <__frame_dummy_init_array_entry>
    15d2:	55                   	push   %rbp
    15d3:	48 8d 2d 76 07 20 00 	lea    0x200776(%rip),%rbp        # 201d50 <__do_global_dtors_aux_fini_array_entry>
    15da:	53                   	push   %rbx
    15db:	41 89 fd             	mov    %edi,%r13d
    15de:	49 89 f6             	mov    %rsi,%r14
    15e1:	4c 29 e5             	sub    %r12,%rbp
    15e4:	48 83 ec 08          	sub    $0x8,%rsp
    15e8:	48 c1 fd 03          	sar    $0x3,%rbp
    15ec:	e8 57 f2 ff ff       	call   848 <_init>
    15f1:	48 85 ed             	test   %rbp,%rbp
    15f4:	74 20                	je     1616 <__libc_csu_init+0x56>
    15f6:	31 db                	xor    %ebx,%ebx
    15f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    15ff:	00 
    1600:	4c 89 fa             	mov    %r15,%rdx
    1603:	4c 89 f6             	mov    %r14,%rsi
    1606:	44 89 ef             	mov    %r13d,%edi
    1609:	41 ff 14 dc          	call   *(%r12,%rbx,8)
    160d:	48 83 c3 01          	add    $0x1,%rbx
    1611:	48 39 dd             	cmp    %rbx,%rbp
    1614:	75 ea                	jne    1600 <__libc_csu_init+0x40>
    1616:	48 83 c4 08          	add    $0x8,%rsp
    161a:	5b                   	pop    %rbx
    161b:	5d                   	pop    %rbp
    161c:	41 5c                	pop    %r12
    161e:	41 5d                	pop    %r13
    1620:	41 5e                	pop    %r14
    1622:	41 5f                	pop    %r15
    1624:	c3                   	ret    
    1625:	90                   	nop
    1626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    162d:	00 00 00 

0000000000001630 <__libc_csu_fini>:
    1630:	f3 c3                	repz ret 

Disassemblering af sektion .fini:

0000000000001634 <_fini>:
    1634:	48 83 ec 08          	sub    $0x8,%rsp
    1638:	48 83 c4 08          	add    $0x8,%rsp
    163c:	c3                   	ret